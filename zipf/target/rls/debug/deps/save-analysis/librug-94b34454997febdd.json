{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0","program":"/Users/wjs/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","rug","/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"complex\"","--cfg","feature=\"default\"","--cfg","feature=\"float\"","--cfg","feature=\"gmp-mpfr-sys\"","--cfg","feature=\"integer\"","--cfg","feature=\"rand\"","--cfg","feature=\"rational\"","-C","metadata=94b34454997febdd","-C","extra-filename=-94b34454997febdd","--out-dir","/Users/wjs/Documents/zipf-model/zipf/target/rls/debug/deps","-L","dependency=/Users/wjs/Documents/zipf-model/zipf/target/rls/debug/deps","--extern","az=/Users/wjs/Documents/zipf-model/zipf/target/rls/debug/deps/libaz-9d1730dd036ab898.rmeta","--extern","gmp_mpfr_sys=/Users/wjs/Documents/zipf-model/zipf/target/rls/debug/deps/libgmp_mpfr_sys-bb555a0c6e873673.rmeta","--extern","libc=/Users/wjs/Documents/zipf-model/zipf/target/rls/debug/deps/liblibc-1d4c9baea2036a82.rmeta","--cap-lints","allow","--cfg","gmp_limb_bits_64","-L","native=/Users/wjs/Documents/zipf-model/zipf/target/rls/debug/build/gmp-mpfr-sys-c20496db29daca88/out/lib","--error-format=json","--sysroot","/Users/wjs/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/wjs/Documents/zipf-model/zipf/target/rls/debug/deps/librug-94b34454997febdd.rmeta"},"prelude":{"crate_id":{"name":"rug","disambiguator":[13953071171253575408,766632961494511194]},"crate_root":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src","external_crates":[{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5808000563841838002,6875932327897409807]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ext/xmpc.rs","num":2,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9495953968349266340,8510226981626586408]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[423181384897816611,2293857470463835221]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5608331764705855408,15392280463108098182]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14701876030349379005,4369912422515260820]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8984243875435576741,4446548522921354]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4101421024496600006,15821692231896539213]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3079379191059796654,13101802771042696873]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7173097494859913114,11426318732171342333]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12351377766094969309,8390201886823579403]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2739304812783641882,6504751215723634061]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ext/xmpc.rs","num":15,"id":{"name":"gmp_mpfr_sys","disambiguator":[10579834492881979296,7207388970178693697]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ext/xmpc.rs","num":16,"id":{"name":"libc","disambiguator":[14542157799492976951,15619345094937603287]}},{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ext/xmpfr.rs","num":17,"id":{"name":"az","disambiguator":[392284808936263686,13227091120765150834]}}],"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":757,"byte_end":20946,"line_start":17,"line_end":603,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":11622},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":276671,"byte_end":276678,"line_start":51,"line_end":51,"column_start":11,"column_end":18},"alias_span":null,"name":"IsPrime","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":11611},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":276680,"byte_end":276697,"line_start":51,"line_end":51,"column_start":20,"column_end":37},"alias_span":null,"name":"ParseIntegerError","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":276699,"byte_end":276716,"line_start":51,"line_end":51,"column_start":39,"column_end":56},"alias_span":null,"name":"UnsignedPrimitive","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":14407},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":276731,"byte_end":276743,"line_start":52,"line_end":52,"column_start":13,"column_end":25},"alias_span":null,"name":"SmallInteger","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":276745,"byte_end":276752,"line_start":52,"line_end":52,"column_start":27,"column_end":34},"alias_span":null,"name":"ToSmall","value":"","parent":{"krate":0,"index":692}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17044,"byte_end":17051,"line_start":454,"line_end":454,"column_start":30,"column_end":37},"alias_span":null,"name":"Integer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":17689},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/mod.rs","byte_start":589162,"byte_end":589180,"line_start":34,"line_end":34,"column_start":31,"column_end":49},"alias_span":null,"name":"ParseRationalError","value":"","parent":{"krate":0,"index":1445}},{"kind":"Use","ref_id":{"krate":0,"index":1797},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/mod.rs","byte_start":589214,"byte_end":589227,"line_start":35,"line_end":35,"column_start":33,"column_end":46},"alias_span":null,"name":"SmallRational","value":"","parent":{"krate":0,"index":1445}},{"kind":"Use","ref_id":{"krate":0,"index":1542},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17160,"byte_end":17168,"line_start":459,"line_end":459,"column_start":31,"column_end":39},"alias_span":null,"name":"Rational","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":26424},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744175,"byte_end":744190,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"alias_span":null,"name":"ParseFloatError","value":"","parent":{"krate":0,"index":1948}},{"kind":"Use","ref_id":{"krate":0,"index":26607},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744201,"byte_end":744209,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"alias_span":null,"name":"OrdFloat","value":"","parent":{"krate":0,"index":1948}},{"kind":"Use","ref_id":{"krate":0,"index":26617},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744223,"byte_end":744233,"line_start":38,"line_end":38,"column_start":13,"column_end":23},"alias_span":null,"name":"SmallFloat","value":"","parent":{"krate":0,"index":1948}},{"kind":"Use","ref_id":{"krate":0,"index":2790},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744235,"byte_end":744242,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"alias_span":null,"name":"ToSmall","value":"","parent":{"krate":0,"index":1948}},{"kind":"Use","ref_id":{"krate":0,"index":2150},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17265,"byte_end":17270,"line_start":464,"line_end":464,"column_start":28,"column_end":33},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":33144},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/mod.rs","byte_start":1158231,"byte_end":1158248,"line_start":34,"line_end":34,"column_start":30,"column_end":47},"alias_span":null,"name":"ParseComplexError","value":"","parent":{"krate":0,"index":2942}},{"kind":"Use","ref_id":{"krate":0,"index":34540},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/mod.rs","byte_start":1158279,"byte_end":1158289,"line_start":35,"line_end":35,"column_start":30,"column_end":40},"alias_span":null,"name":"OrdComplex","value":"","parent":{"krate":0,"index":2942}},{"kind":"Use","ref_id":{"krate":0,"index":3426},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/mod.rs","byte_start":1158322,"byte_end":1158334,"line_start":36,"line_end":36,"column_start":32,"column_end":44},"alias_span":null,"name":"SmallComplex","value":"","parent":{"krate":0,"index":2942}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17375,"byte_end":17382,"line_start":469,"line_end":469,"column_start":30,"column_end":37},"alias_span":null,"name":"Complex","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":757,"byte_end":20946,"line_start":17,"line_end":603,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":43},{"krate":0,"index":456},{"krate":0,"index":478},{"krate":0,"index":541},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3680}],"decl_id":null,"docs":"# Arbitrary-precision numbers","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":15740,"byte_end":15762,"line_start":397,"line_end":397,"column_start":1,"column_end":23}},{"value":"allow(clippy :: identity_conversion)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":16058,"byte_end":16096,"line_start":403,"line_end":403,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":466},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/misc.rs","byte_start":209520,"byte_end":209523,"line_start":37,"line_end":37,"column_start":10,"column_end":13},"name":"Abs","qualname":"::misc::NegAbs::Abs","value":"type Abs;","parent":{"krate":0,"index":465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":541},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":591},{"krate":0,"index":596},{"krate":0,"index":601},{"krate":0,"index":606},{"krate":0,"index":611},{"krate":0,"index":616},{"krate":0,"index":621},{"krate":0,"index":626},{"krate":0,"index":631},{"krate":0,"index":636},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":651},{"krate":0,"index":658},{"krate":0,"index":664},{"krate":0,"index":670},{"krate":0,"index":677},{"krate":0,"index":683}],"decl_id":null,"docs":"Operations on numbers.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":542},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":235900,"byte_end":235909,"line_start":41,"line_end":41,"column_start":11,"column_end":20},"name":"NegAssign","qualname":"::ops::NegAssign","value":"NegAssign","parent":null,"children":[{"krate":0,"index":543}],"decl_id":null,"docs":"Compound negation and assignment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":236199,"byte_end":236209,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"neg_assign","qualname":"::ops::NegAssign::neg_assign","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Peforms the negation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":544},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":236497,"byte_end":236506,"line_start":75,"line_end":75,"column_start":11,"column_end":20},"name":"NotAssign","qualname":"::ops::NotAssign","value":"NotAssign","parent":null,"children":[{"krate":0,"index":545}],"decl_id":null,"docs":"Compound bitwise complement and assignement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":236800,"byte_end":236810,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"not_assign","qualname":"::ops::NotAssign::not_assign","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Peforms the complement.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":237224,"byte_end":237231,"line_start":111,"line_end":111,"column_start":11,"column_end":18},"name":"AddFrom","qualname":"::ops::AddFrom","value":"AddFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":548}],"decl_id":null,"docs":"Compound addition and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":237564,"byte_end":237572,"line_start":125,"line_end":125,"column_start":8,"column_end":16},"name":"add_from","qualname":"::ops::AddFrom::add_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Peforms the addition.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":549},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":237957,"byte_end":237964,"line_start":148,"line_end":148,"column_start":11,"column_end":18},"name":"SubFrom","qualname":"::ops::SubFrom","value":"SubFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":551}],"decl_id":null,"docs":"Compound subtraction and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":238301,"byte_end":238309,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"sub_from","qualname":"::ops::SubFrom::sub_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" Peforms the subtraction.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":552},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":239166,"byte_end":239173,"line_start":195,"line_end":195,"column_start":11,"column_end":18},"name":"MulFrom","qualname":"::ops::MulFrom","value":"MulFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":554}],"decl_id":null,"docs":"Compound multiplication and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":239509,"byte_end":239517,"line_start":209,"line_end":209,"column_start":8,"column_end":16},"name":"mul_from","qualname":"::ops::MulFrom::mul_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Peforms the multiplication.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":555},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":239898,"byte_end":239905,"line_start":232,"line_end":232,"column_start":11,"column_end":18},"name":"DivFrom","qualname":"::ops::DivFrom","value":"DivFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":557}],"decl_id":null,"docs":"Compound division and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":240233,"byte_end":240241,"line_start":246,"line_end":246,"column_start":8,"column_end":16},"name":"div_from","qualname":"::ops::DivFrom::div_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" Peforms the division.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":558},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":240633,"byte_end":240640,"line_start":269,"line_end":269,"column_start":11,"column_end":18},"name":"RemFrom","qualname":"::ops::RemFrom","value":"RemFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":560}],"decl_id":null,"docs":"Compound remainder operation and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":240978,"byte_end":240986,"line_start":283,"line_end":283,"column_start":8,"column_end":16},"name":"rem_from","qualname":"::ops::RemFrom::rem_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Peforms the remainder operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":241392,"byte_end":241402,"line_start":306,"line_end":306,"column_start":11,"column_end":21},"name":"BitAndFrom","qualname":"::ops::BitAndFrom","value":"BitAndFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":563}],"decl_id":null,"docs":"Compound bitwise AND and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":241753,"byte_end":241764,"line_start":320,"line_end":320,"column_start":8,"column_end":19},"name":"bitand_from","qualname":"::ops::BitAndFrom::bitand_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Peforms the AND operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":564},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":242163,"byte_end":242172,"line_start":343,"line_end":343,"column_start":11,"column_end":20},"name":"BitOrFrom","qualname":"::ops::BitOrFrom","value":"BitOrFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":566}],"decl_id":null,"docs":"Compound bitwise OR and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":242520,"byte_end":242530,"line_start":357,"line_end":357,"column_start":8,"column_end":18},"name":"bitor_from","qualname":"::ops::BitOrFrom::bitor_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Peforms the OR operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":567},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":242935,"byte_end":242945,"line_start":380,"line_end":380,"column_start":11,"column_end":21},"name":"BitXorFrom","qualname":"::ops::BitXorFrom","value":"BitXorFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":569}],"decl_id":null,"docs":"Compound bitwise XOR and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":243296,"byte_end":243307,"line_start":394,"line_end":394,"column_start":8,"column_end":19},"name":"bitxor_from","qualname":"::ops::BitXorFrom::bitxor_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" Peforms the XOR operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":570},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":243926,"byte_end":243933,"line_start":423,"line_end":423,"column_start":11,"column_end":18},"name":"ShlFrom","qualname":"::ops::ShlFrom","value":"ShlFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":572}],"decl_id":null,"docs":"Compound left shift and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":244198,"byte_end":244206,"line_start":435,"line_end":435,"column_start":8,"column_end":16},"name":"shl_from","qualname":"::ops::ShlFrom::shl_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Peforms the left shift.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":573},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":244822,"byte_end":244829,"line_start":464,"line_end":464,"column_start":11,"column_end":18},"name":"ShrFrom","qualname":"::ops::ShrFrom","value":"ShrFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":575}],"decl_id":null,"docs":"Compound right shift and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":245095,"byte_end":245103,"line_start":476,"line_end":476,"column_start":8,"column_end":16},"name":"shr_from","qualname":"::ops::ShrFrom::shr_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Peforms the right shift.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":576},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":245390,"byte_end":245393,"line_start":497,"line_end":497,"column_start":11,"column_end":14},"name":"Pow","qualname":"::ops::Pow","value":"Pow<Rhs>","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":"The power operation.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":578},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":245464,"byte_end":245470,"line_start":499,"line_end":499,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::Pow::Output","value":"type Output;","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" The resulting type after the power operation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":245777,"byte_end":245780,"line_start":512,"line_end":512,"column_start":8,"column_end":11},"name":"pow","qualname":"::ops::Pow::pow","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Performs the power operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":580},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":246118,"byte_end":246127,"line_start":533,"line_end":533,"column_start":11,"column_end":20},"name":"PowAssign","qualname":"::ops::PowAssign","value":"PowAssign<Rhs>","parent":null,"children":[{"krate":0,"index":582}],"decl_id":null,"docs":"Compound power operation and assignment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":246434,"byte_end":246444,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"pow_assign","qualname":"::ops::PowAssign::pow_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Peforms the power operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":583},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":246837,"byte_end":246844,"line_start":569,"line_end":569,"column_start":11,"column_end":18},"name":"PowFrom","qualname":"::ops::PowFrom","value":"PowFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":585}],"decl_id":null,"docs":"Compound power operation and assignment to the rhs operand.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":247186,"byte_end":247194,"line_start":583,"line_end":583,"column_start":8,"column_end":16},"name":"pow_from","qualname":"::ops::PowFrom::pow_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Peforms the power operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":586},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":247755,"byte_end":247766,"line_start":611,"line_end":611,"column_start":11,"column_end":22},"name":"AssignRound","qualname":"::ops::AssignRound","value":"AssignRound<Src = Self>","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"decl_id":null,"docs":"Assignment with a specified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":588},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":247819,"byte_end":247824,"line_start":613,"line_end":613,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::AssignRound::Round","value":"type Round;","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":589},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":247872,"byte_end":247880,"line_start":615,"line_end":615,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::AssignRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":248514,"byte_end":248526,"line_start":636,"line_end":636,"column_start":8,"column_end":20},"name":"assign_round","qualname":"::ops::AssignRound::assign_round","value":"fn (&mut self, src: Src, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Peforms the assignment.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":591},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":249280,"byte_end":249294,"line_start":667,"line_end":667,"column_start":11,"column_end":25},"name":"AddAssignRound","qualname":"::ops::AddAssignRound","value":"AddAssignRound<Rhs = Self>","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"decl_id":null,"docs":"Compound addition and assignment with a specified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":593},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":249347,"byte_end":249352,"line_start":669,"line_end":669,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::AddAssignRound::Round","value":"type Round;","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":594},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":249400,"byte_end":249408,"line_start":671,"line_end":671,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::AddAssignRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":249911,"byte_end":249927,"line_start":688,"line_end":688,"column_start":8,"column_end":24},"name":"add_assign_round","qualname":"::ops::AddAssignRound::add_assign_round","value":"fn (&mut self, rhs: Rhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Performs the addition.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":250725,"byte_end":250737,"line_start":724,"line_end":724,"column_start":11,"column_end":23},"name":"AddFromRound","qualname":"::ops::AddFromRound","value":"AddFromRound<Lhs = Self>","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"decl_id":null,"docs":"Compound addition and assignment to the rhs operand with a\nspecified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":598},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":250790,"byte_end":250795,"line_start":726,"line_end":726,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::AddFromRound::Round","value":"type Round;","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":599},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":250843,"byte_end":250851,"line_start":728,"line_end":728,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::AddFromRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":251350,"byte_end":251364,"line_start":745,"line_end":745,"column_start":8,"column_end":22},"name":"add_from_round","qualname":"::ops::AddFromRound::add_from_round","value":"fn (&mut self, lhs: Lhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Performs the addition.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":601},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":252123,"byte_end":252137,"line_start":777,"line_end":777,"column_start":11,"column_end":25},"name":"SubAssignRound","qualname":"::ops::SubAssignRound","value":"SubAssignRound<Rhs = Self>","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"decl_id":null,"docs":"Compound subtraction and assignment with a specified rounding\nmethod.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":603},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":252190,"byte_end":252195,"line_start":779,"line_end":779,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::SubAssignRound::Round","value":"type Round;","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":604},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":252243,"byte_end":252251,"line_start":781,"line_end":781,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::SubAssignRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":252756,"byte_end":252772,"line_start":798,"line_end":798,"column_start":8,"column_end":24},"name":"sub_assign_round","qualname":"::ops::SubAssignRound::sub_assign_round","value":"fn (&mut self, rhs: Rhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Performs the subtraction.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":606},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":253575,"byte_end":253587,"line_start":834,"line_end":834,"column_start":11,"column_end":23},"name":"SubFromRound","qualname":"::ops::SubFromRound","value":"SubFromRound<Lhs = Self>","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":"Compound subtraction and assignment to the rhs operand with a\nspecified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":608},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":253640,"byte_end":253645,"line_start":836,"line_end":836,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::SubFromRound::Round","value":"type Round;","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":609},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":253693,"byte_end":253701,"line_start":838,"line_end":838,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::SubFromRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":254202,"byte_end":254216,"line_start":855,"line_end":855,"column_start":8,"column_end":22},"name":"sub_from_round","qualname":"::ops::SubFromRound::sub_from_round","value":"fn (&mut self, lhs: Lhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Performs the subtraction.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":254979,"byte_end":254993,"line_start":887,"line_end":887,"column_start":11,"column_end":25},"name":"MulAssignRound","qualname":"::ops::MulAssignRound","value":"MulAssignRound<Rhs = Self>","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"decl_id":null,"docs":"Compound multiplication and assignment with a specified rounding\nmethod.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":613},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":255046,"byte_end":255051,"line_start":889,"line_end":889,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::MulAssignRound::Round","value":"type Round;","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":614},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":255099,"byte_end":255107,"line_start":891,"line_end":891,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::MulAssignRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":255608,"byte_end":255624,"line_start":908,"line_end":908,"column_start":8,"column_end":24},"name":"mul_assign_round","qualname":"::ops::MulAssignRound::mul_assign_round","value":"fn (&mut self, rhs: Rhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Performs the multiplication.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":616},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":256431,"byte_end":256443,"line_start":944,"line_end":944,"column_start":11,"column_end":23},"name":"MulFromRound","qualname":"::ops::MulFromRound","value":"MulFromRound<Lhs = Self>","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"decl_id":null,"docs":"Compound multiplication and assignment to the rhs operand with a\nspecified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":618},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":256496,"byte_end":256501,"line_start":946,"line_end":946,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::MulFromRound::Round","value":"type Round;","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":619},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":256549,"byte_end":256557,"line_start":948,"line_end":948,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::MulFromRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":257054,"byte_end":257068,"line_start":965,"line_end":965,"column_start":8,"column_end":22},"name":"mul_from_round","qualname":"::ops::MulFromRound::mul_from_round","value":"fn (&mut self, rhs: Lhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Performs the multiplication.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":621},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":257824,"byte_end":257838,"line_start":996,"line_end":996,"column_start":11,"column_end":25},"name":"DivAssignRound","qualname":"::ops::DivAssignRound","value":"DivAssignRound<Rhs = Self>","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"decl_id":null,"docs":"Compound division and assignment with a specified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":623},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":257891,"byte_end":257896,"line_start":998,"line_end":998,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::DivAssignRound::Round","value":"type Round;","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":624},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":257944,"byte_end":257952,"line_start":1000,"line_end":1000,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::DivAssignRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":258453,"byte_end":258469,"line_start":1017,"line_end":1017,"column_start":8,"column_end":24},"name":"div_assign_round","qualname":"::ops::DivAssignRound::div_assign_round","value":"fn (&mut self, rhs: Rhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" Performs the division.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":626},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":259269,"byte_end":259281,"line_start":1053,"line_end":1053,"column_start":11,"column_end":23},"name":"DivFromRound","qualname":"::ops::DivFromRound","value":"DivFromRound<Lhs = Self>","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"decl_id":null,"docs":"Compound division and assignment to the rhs operand with a specified\nrounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":628},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":259334,"byte_end":259339,"line_start":1055,"line_end":1055,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::DivFromRound::Round","value":"type Round;","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":629},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":259387,"byte_end":259395,"line_start":1057,"line_end":1057,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::DivFromRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":259892,"byte_end":259906,"line_start":1074,"line_end":1074,"column_start":8,"column_end":22},"name":"div_from_round","qualname":"::ops::DivFromRound::div_from_round","value":"fn (&mut self, rhs: Lhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Performs the division.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":631},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":260677,"byte_end":260691,"line_start":1106,"line_end":1106,"column_start":11,"column_end":25},"name":"RemAssignRound","qualname":"::ops::RemAssignRound","value":"RemAssignRound<Rhs = Self>","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":"Compound remainder operation and assignment with a specified rounding\nmethod.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":633},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":260744,"byte_end":260749,"line_start":1108,"line_end":1108,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::RemAssignRound::Round","value":"type Round;","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":634},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":260797,"byte_end":260805,"line_start":1110,"line_end":1110,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::RemAssignRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":261305,"byte_end":261321,"line_start":1127,"line_end":1127,"column_start":8,"column_end":24},"name":"rem_assign_round","qualname":"::ops::RemAssignRound::rem_assign_round","value":"fn (&mut self, rhs: Rhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" Performs the remainder operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":636},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":262136,"byte_end":262148,"line_start":1163,"line_end":1163,"column_start":11,"column_end":23},"name":"RemFromRound","qualname":"::ops::RemFromRound","value":"RemFromRound<Lhs = Self>","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"decl_id":null,"docs":"Compound remainder operation and assignment to the rhs operand with a\nspecified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":638},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":262201,"byte_end":262206,"line_start":1165,"line_end":1165,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::RemFromRound::Round","value":"type Round;","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":639},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":262254,"byte_end":262262,"line_start":1167,"line_end":1167,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::RemFromRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":262757,"byte_end":262771,"line_start":1184,"line_end":1184,"column_start":8,"column_end":22},"name":"rem_from_round","qualname":"::ops::RemFromRound::rem_from_round","value":"fn (&mut self, rhs: Lhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Performs the remainder operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":641},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":263536,"byte_end":263550,"line_start":1216,"line_end":1216,"column_start":11,"column_end":25},"name":"PowAssignRound","qualname":"::ops::PowAssignRound","value":"PowAssignRound<Rhs = Self>","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":"Compound power operation and assignment with a specified rounding\nmethod.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":643},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":263603,"byte_end":263608,"line_start":1218,"line_end":1218,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::PowAssignRound::Round","value":"type Round;","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":263656,"byte_end":263664,"line_start":1220,"line_end":1220,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::PowAssignRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":264169,"byte_end":264185,"line_start":1237,"line_end":1237,"column_start":8,"column_end":24},"name":"pow_assign_round","qualname":"::ops::PowAssignRound::pow_assign_round","value":"fn (&mut self, rhs: Rhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Performs the power operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":646},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":264994,"byte_end":265006,"line_start":1273,"line_end":1273,"column_start":11,"column_end":23},"name":"PowFromRound","qualname":"::ops::PowFromRound","value":"PowFromRound<Lhs = Self>","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":"Compound power operation and assignment to the rhs operand with a\nspecified rounding method.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":648},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":265059,"byte_end":265064,"line_start":1275,"line_end":1275,"column_start":10,"column_end":15},"name":"Round","qualname":"::ops::PowFromRound::Round","value":"type Round;","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" The rounding method.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":649},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":265112,"byte_end":265120,"line_start":1277,"line_end":1277,"column_start":10,"column_end":18},"name":"Ordering","qualname":"::ops::PowFromRound::Ordering","value":"type Ordering;","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" The direction from rounding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":265621,"byte_end":265635,"line_start":1294,"line_end":1294,"column_start":8,"column_end":22},"name":"pow_from_round","qualname":"::ops::PowFromRound::pow_from_round","value":"fn (&mut self, lhs: Lhs, round: Self::Round) -> Self::Ordering","parent":{"krate":0,"index":646},"children":[],"decl_id":null,"docs":" Performs the power operation.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":651},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":266815,"byte_end":266826,"line_start":1347,"line_end":1347,"column_start":11,"column_end":22},"name":"DivRounding","qualname":"::ops::DivRounding","value":"DivRounding<Rhs = Self>","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"decl_id":null,"docs":"Rounding variants of division.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":653},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":266906,"byte_end":266912,"line_start":1349,"line_end":1349,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::DivRounding::Output","value":"type Output;","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" The resulting type from the division operation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":266984,"byte_end":266993,"line_start":1351,"line_end":1351,"column_start":8,"column_end":17},"name":"div_trunc","qualname":"::ops::DivRounding::div_trunc","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient towards zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":267087,"byte_end":267095,"line_start":1353,"line_end":1353,"column_start":8,"column_end":16},"name":"div_ceil","qualname":"::ops::DivRounding::div_ceil","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":267191,"byte_end":267200,"line_start":1355,"line_end":1355,"column_start":8,"column_end":17},"name":"div_floor","qualname":"::ops::DivRounding::div_floor","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient down.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":267350,"byte_end":267357,"line_start":1358,"line_end":1358,"column_start":8,"column_end":15},"name":"div_euc","qualname":"::ops::DivRounding::div_euc","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Performs Euclidean division, rounding the quotient so that the\n remainder cannot be negative.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":658},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":268438,"byte_end":268455,"line_start":1401,"line_end":1401,"column_start":11,"column_end":28},"name":"DivRoundingAssign","qualname":"::ops::DivRoundingAssign","value":"DivRoundingAssign<Rhs = Self>","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"decl_id":null,"docs":"Compound assignment and rounding variants of division.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":268540,"byte_end":268556,"line_start":1403,"line_end":1403,"column_start":8,"column_end":24},"name":"div_trunc_assign","qualname":"::ops::DivRoundingAssign::div_trunc_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient towards zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":268639,"byte_end":268654,"line_start":1405,"line_end":1405,"column_start":8,"column_end":23},"name":"div_ceil_assign","qualname":"::ops::DivRoundingAssign::div_ceil_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":268739,"byte_end":268755,"line_start":1407,"line_end":1407,"column_start":8,"column_end":24},"name":"div_floor_assign","qualname":"::ops::DivRoundingAssign::div_floor_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient down.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":268894,"byte_end":268908,"line_start":1410,"line_end":1410,"column_start":8,"column_end":22},"name":"div_euc_assign","qualname":"::ops::DivRoundingAssign::div_euc_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Performs Euclidean division, rounding the quotient so that the\n remainder cannot be negative.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":664},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":269994,"byte_end":270009,"line_start":1454,"line_end":1454,"column_start":11,"column_end":26},"name":"DivRoundingFrom","qualname":"::ops::DivRoundingFrom","value":"DivRoundingFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":"Compound assignment to the rhs operand and rounding variants of\ndivision.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":270094,"byte_end":270108,"line_start":1456,"line_end":1456,"column_start":8,"column_end":22},"name":"div_trunc_from","qualname":"::ops::DivRoundingFrom::div_trunc_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient towards zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":270191,"byte_end":270204,"line_start":1458,"line_end":1458,"column_start":8,"column_end":21},"name":"div_ceil_from","qualname":"::ops::DivRoundingFrom::div_ceil_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":270289,"byte_end":270303,"line_start":1460,"line_end":1460,"column_start":8,"column_end":22},"name":"div_floor_from","qualname":"::ops::DivRoundingFrom::div_floor_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Performs division, rounding the quotient down.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":270442,"byte_end":270454,"line_start":1463,"line_end":1463,"column_start":8,"column_end":20},"name":"div_euc_from","qualname":"::ops::DivRoundingFrom::div_euc_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Performs Euclidean division, rounding the quotient so that the\n remainder cannot be negative.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":670},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":271558,"byte_end":271569,"line_start":1516,"line_end":1516,"column_start":11,"column_end":22},"name":"RemRounding","qualname":"::ops::RemRounding","value":"RemRounding<Rhs = Self>","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":"Rounding variants of the remainder operation.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":672},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":271650,"byte_end":271656,"line_start":1518,"line_end":1518,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::RemRounding::Output","value":"type Output;","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" The resulting type from the remainder operation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":271736,"byte_end":271745,"line_start":1520,"line_end":1520,"column_start":8,"column_end":17},"name":"rem_trunc","qualname":"::ops::RemRounding::rem_trunc","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded towards zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":271847,"byte_end":271855,"line_start":1522,"line_end":1522,"column_start":8,"column_end":16},"name":"rem_ceil","qualname":"::ops::RemRounding::rem_ceil","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":271959,"byte_end":271968,"line_start":1524,"line_end":1524,"column_start":8,"column_end":17},"name":"rem_floor","qualname":"::ops::RemRounding::rem_floor","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded down.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":272071,"byte_end":272078,"line_start":1526,"line_end":1526,"column_start":8,"column_end":15},"name":"rem_euc","qualname":"::ops::RemRounding::rem_euc","value":"fn (self, rhs: Rhs) -> Self::Output","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Finds the positive remainder from Euclidean division.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":677},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":273118,"byte_end":273135,"line_start":1569,"line_end":1569,"column_start":11,"column_end":28},"name":"RemRoundingAssign","qualname":"::ops::RemRoundingAssign","value":"RemRoundingAssign<Rhs = Self>","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682}],"decl_id":null,"docs":"Compound assignment and rounding variants of the remainder operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":273228,"byte_end":273244,"line_start":1571,"line_end":1571,"column_start":8,"column_end":24},"name":"rem_trunc_assign","qualname":"::ops::RemRoundingAssign::rem_trunc_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded towards zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":273335,"byte_end":273350,"line_start":1573,"line_end":1573,"column_start":8,"column_end":23},"name":"rem_ceil_assign","qualname":"::ops::RemRoundingAssign::rem_ceil_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":273443,"byte_end":273459,"line_start":1575,"line_end":1575,"column_start":8,"column_end":24},"name":"rem_floor_assign","qualname":"::ops::RemRoundingAssign::rem_floor_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded down.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":273551,"byte_end":273565,"line_start":1577,"line_end":1577,"column_start":8,"column_end":22},"name":"rem_euc_assign","qualname":"::ops::RemRoundingAssign::rem_euc_assign","value":"fn (&mut self, rhs: Rhs) -> ()","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Finds the positive remainder from Euclidean division.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":683},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":274624,"byte_end":274639,"line_start":1621,"line_end":1621,"column_start":11,"column_end":26},"name":"RemRoundingFrom","qualname":"::ops::RemRoundingFrom","value":"RemRoundingFrom<Lhs = Self>","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"decl_id":null,"docs":"Compound assignment to the rhs operand and rounding variants of the\nremainder operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":274732,"byte_end":274746,"line_start":1623,"line_end":1623,"column_start":8,"column_end":22},"name":"rem_trunc_from","qualname":"::ops::RemRoundingFrom::rem_trunc_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded towards zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":274837,"byte_end":274850,"line_start":1625,"line_end":1625,"column_start":8,"column_end":21},"name":"rem_ceil_from","qualname":"::ops::RemRoundingFrom::rem_ceil_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":274943,"byte_end":274957,"line_start":1627,"line_end":1627,"column_start":8,"column_end":22},"name":"rem_floor_from","qualname":"::ops::RemRoundingFrom::rem_floor_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Finds the remainder when the quotient is rounded down.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops.rs","byte_start":275049,"byte_end":275061,"line_start":1629,"line_end":1629,"column_start":8,"column_end":20},"name":"rem_euc_from","qualname":"::ops::RemRoundingFrom::rem_euc_from","value":"fn (&mut self, lhs: Lhs) -> ()","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Finds the positive remainder from Euclidean division.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":689},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":16583,"byte_end":16589,"line_start":434,"line_end":434,"column_start":11,"column_end":17},"name":"Assign","qualname":"::Assign","value":"Assign<Src = Self>","parent":null,"children":[{"krate":0,"index":691}],"decl_id":null,"docs":"Assigns to a number from another value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":16910,"byte_end":16916,"line_start":448,"line_end":448,"column_start":8,"column_end":14},"name":"assign","qualname":"::Assign::assign","value":"fn (&mut self, src: Src) -> ()","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":" Peforms the assignement.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":692},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"integer","qualname":"::integer","value":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":785},{"krate":0,"index":1227},{"krate":0,"index":1250},{"krate":0,"index":1298},{"krate":0,"index":1362},{"krate":0,"index":1432},{"krate":0,"index":1440},{"krate":0,"index":14626},{"krate":0,"index":14631},{"krate":0,"index":14630},{"krate":0,"index":14628},{"krate":0,"index":14633},{"krate":0,"index":14662},{"krate":0,"index":14661},{"krate":0,"index":14659},{"krate":0,"index":14656},{"krate":0,"index":14657},{"krate":0,"index":14653},{"krate":0,"index":14651},{"krate":0,"index":14648},{"krate":0,"index":14649},{"krate":0,"index":14646},{"krate":0,"index":1441}],"decl_id":null,"docs":"Aribtrary-precision integers.","sig":null,"attributes":[{"value":"cfg(feature = \"integer\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":16942,"byte_end":16969,"line_start":451,"line_end":451,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5844},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":299577,"byte_end":299590,"line_start":42,"line_end":42,"column_start":5,"column_end":18},"name":"NegIncomplete","qualname":"::integer::arith::NegIncomplete","value":"NegIncomplete {  }","parent":null,"children":[{"krate":0,"index":5846}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5875},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":299716,"byte_end":299729,"line_start":50,"line_end":50,"column_start":5,"column_end":18},"name":"AddIncomplete","qualname":"::integer::arith::AddIncomplete","value":"AddIncomplete {  }","parent":null,"children":[{"krate":0,"index":5877},{"krate":0,"index":5878}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5907},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":299879,"byte_end":299892,"line_start":59,"line_end":59,"column_start":5,"column_end":18},"name":"SubIncomplete","qualname":"::integer::arith::SubIncomplete","value":"SubIncomplete {  }","parent":null,"children":[{"krate":0,"index":5909},{"krate":0,"index":5910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5939},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":300042,"byte_end":300055,"line_start":68,"line_end":68,"column_start":5,"column_end":18},"name":"MulIncomplete","qualname":"::integer::arith::MulIncomplete","value":"MulIncomplete {  }","parent":null,"children":[{"krate":0,"index":5941},{"krate":0,"index":5942}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5971},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":300208,"byte_end":300221,"line_start":77,"line_end":77,"column_start":5,"column_end":18},"name":"DivIncomplete","qualname":"::integer::arith::DivIncomplete","value":"DivIncomplete {  }","parent":null,"children":[{"krate":0,"index":5973},{"krate":0,"index":5974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6003},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":300374,"byte_end":300387,"line_start":86,"line_end":86,"column_start":5,"column_end":18},"name":"RemIncomplete","qualname":"::integer::arith::RemIncomplete","value":"RemIncomplete {  }","parent":null,"children":[{"krate":0,"index":6005},{"krate":0,"index":6006}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6023},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":300506,"byte_end":300519,"line_start":94,"line_end":94,"column_start":5,"column_end":18},"name":"NotIncomplete","qualname":"::integer::arith::NotIncomplete","value":"NotIncomplete {  }","parent":null,"children":[{"krate":0,"index":6025}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6054},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":300663,"byte_end":300679,"line_start":102,"line_end":102,"column_start":5,"column_end":21},"name":"BitAndIncomplete","qualname":"::integer::arith::BitAndIncomplete","value":"BitAndIncomplete {  }","parent":null,"children":[{"krate":0,"index":6056},{"krate":0,"index":6057}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6086},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":300841,"byte_end":300856,"line_start":111,"line_end":111,"column_start":5,"column_end":20},"name":"BitOrIncomplete","qualname":"::integer::arith::BitOrIncomplete","value":"BitOrIncomplete {  }","parent":null,"children":[{"krate":0,"index":6088},{"krate":0,"index":6089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6118},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301024,"byte_end":301040,"line_start":120,"line_end":120,"column_start":5,"column_end":21},"name":"BitXorIncomplete","qualname":"::integer::arith::BitXorIncomplete","value":"BitXorIncomplete {  }","parent":null,"children":[{"krate":0,"index":6120},{"krate":0,"index":6121}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301198,"byte_end":301213,"line_start":130,"line_end":130,"column_start":9,"column_end":24},"name":"AddI8Incomplete","qualname":"::integer::arith::AddI8Incomplete","value":"AddI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":6329},{"krate":0,"index":6330}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6356},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301224,"byte_end":301240,"line_start":131,"line_end":131,"column_start":10,"column_end":26},"name":"AddI16Incomplete","qualname":"::integer::arith::AddI16Incomplete","value":"AddI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":6358},{"krate":0,"index":6359}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6385},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301251,"byte_end":301267,"line_start":132,"line_end":132,"column_start":10,"column_end":26},"name":"AddI32Incomplete","qualname":"::integer::arith::AddI32Incomplete","value":"AddI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":6387},{"krate":0,"index":6388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6414},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301278,"byte_end":301294,"line_start":133,"line_end":133,"column_start":10,"column_end":26},"name":"AddI64Incomplete","qualname":"::integer::arith::AddI64Incomplete","value":"AddI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":6416},{"krate":0,"index":6417}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6443},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301306,"byte_end":301323,"line_start":134,"line_end":134,"column_start":11,"column_end":28},"name":"AddI128Incomplete","qualname":"::integer::arith::AddI128Incomplete","value":"AddI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6472},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301333,"byte_end":301348,"line_start":135,"line_end":135,"column_start":9,"column_end":24},"name":"AddU8Incomplete","qualname":"::integer::arith::AddU8Incomplete","value":"AddU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6475}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6501},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301359,"byte_end":301375,"line_start":136,"line_end":136,"column_start":10,"column_end":26},"name":"AddU16Incomplete","qualname":"::integer::arith::AddU16Incomplete","value":"AddU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":6503},{"krate":0,"index":6504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6530},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301386,"byte_end":301402,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"name":"AddU32Incomplete","qualname":"::integer::arith::AddU32Incomplete","value":"AddU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6559},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301413,"byte_end":301429,"line_start":138,"line_end":138,"column_start":10,"column_end":26},"name":"AddU64Incomplete","qualname":"::integer::arith::AddU64Incomplete","value":"AddU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":6561},{"krate":0,"index":6562}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6588},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301441,"byte_end":301458,"line_start":139,"line_end":139,"column_start":11,"column_end":28},"name":"AddU128Incomplete","qualname":"::integer::arith::AddU128Incomplete","value":"AddU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":6590},{"krate":0,"index":6591}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6817},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301614,"byte_end":301629,"line_start":147,"line_end":147,"column_start":9,"column_end":24},"name":"SubI8Incomplete","qualname":"::integer::arith::SubI8Incomplete","value":"SubI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":6819},{"krate":0,"index":6820}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301631,"byte_end":301650,"line_start":147,"line_end":147,"column_start":26,"column_end":45},"name":"SubFromI8Incomplete","qualname":"::integer::arith::SubFromI8Incomplete","value":"SubFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":6828},{"krate":0,"index":6829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6855},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301661,"byte_end":301677,"line_start":148,"line_end":148,"column_start":10,"column_end":26},"name":"SubI16Incomplete","qualname":"::integer::arith::SubI16Incomplete","value":"SubI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":6857},{"krate":0,"index":6858}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6864},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301679,"byte_end":301699,"line_start":148,"line_end":148,"column_start":28,"column_end":48},"name":"SubFromI16Incomplete","qualname":"::integer::arith::SubFromI16Incomplete","value":"SubFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":6866},{"krate":0,"index":6867}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6893},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301710,"byte_end":301726,"line_start":149,"line_end":149,"column_start":10,"column_end":26},"name":"SubI32Incomplete","qualname":"::integer::arith::SubI32Incomplete","value":"SubI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":6895},{"krate":0,"index":6896}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6902},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301728,"byte_end":301748,"line_start":149,"line_end":149,"column_start":28,"column_end":48},"name":"SubFromI32Incomplete","qualname":"::integer::arith::SubFromI32Incomplete","value":"SubFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":6904},{"krate":0,"index":6905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6931},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301759,"byte_end":301775,"line_start":150,"line_end":150,"column_start":10,"column_end":26},"name":"SubI64Incomplete","qualname":"::integer::arith::SubI64Incomplete","value":"SubI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":6933},{"krate":0,"index":6934}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6940},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301777,"byte_end":301797,"line_start":150,"line_end":150,"column_start":28,"column_end":48},"name":"SubFromI64Incomplete","qualname":"::integer::arith::SubFromI64Incomplete","value":"SubFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":6942},{"krate":0,"index":6943}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6969},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301809,"byte_end":301826,"line_start":151,"line_end":151,"column_start":11,"column_end":28},"name":"SubI128Incomplete","qualname":"::integer::arith::SubI128Incomplete","value":"SubI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":6971},{"krate":0,"index":6972}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6978},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301828,"byte_end":301849,"line_start":151,"line_end":151,"column_start":30,"column_end":51},"name":"SubFromI128Incomplete","qualname":"::integer::arith::SubFromI128Incomplete","value":"SubFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":6980},{"krate":0,"index":6981}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7007},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301859,"byte_end":301874,"line_start":152,"line_end":152,"column_start":9,"column_end":24},"name":"SubU8Incomplete","qualname":"::integer::arith::SubU8Incomplete","value":"SubU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":7009},{"krate":0,"index":7010}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7016},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301876,"byte_end":301895,"line_start":152,"line_end":152,"column_start":26,"column_end":45},"name":"SubFromU8Incomplete","qualname":"::integer::arith::SubFromU8Incomplete","value":"SubFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":7018},{"krate":0,"index":7019}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7045},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301906,"byte_end":301922,"line_start":153,"line_end":153,"column_start":10,"column_end":26},"name":"SubU16Incomplete","qualname":"::integer::arith::SubU16Incomplete","value":"SubU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":7047},{"krate":0,"index":7048}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7054},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301924,"byte_end":301944,"line_start":153,"line_end":153,"column_start":28,"column_end":48},"name":"SubFromU16Incomplete","qualname":"::integer::arith::SubFromU16Incomplete","value":"SubFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":7056},{"krate":0,"index":7057}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7083},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301955,"byte_end":301971,"line_start":154,"line_end":154,"column_start":10,"column_end":26},"name":"SubU32Incomplete","qualname":"::integer::arith::SubU32Incomplete","value":"SubU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":7085},{"krate":0,"index":7086}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":301973,"byte_end":301993,"line_start":154,"line_end":154,"column_start":28,"column_end":48},"name":"SubFromU32Incomplete","qualname":"::integer::arith::SubFromU32Incomplete","value":"SubFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":7094},{"krate":0,"index":7095}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7121},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302004,"byte_end":302020,"line_start":155,"line_end":155,"column_start":10,"column_end":26},"name":"SubU64Incomplete","qualname":"::integer::arith::SubU64Incomplete","value":"SubU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":7123},{"krate":0,"index":7124}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7130},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302022,"byte_end":302042,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"name":"SubFromU64Incomplete","qualname":"::integer::arith::SubFromU64Incomplete","value":"SubFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":7132},{"krate":0,"index":7133}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7159},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302054,"byte_end":302071,"line_start":156,"line_end":156,"column_start":11,"column_end":28},"name":"SubU128Incomplete","qualname":"::integer::arith::SubU128Incomplete","value":"SubU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":7161},{"krate":0,"index":7162}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7168},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302073,"byte_end":302094,"line_start":156,"line_end":156,"column_start":30,"column_end":51},"name":"SubFromU128Incomplete","qualname":"::integer::arith::SubFromU128Incomplete","value":"SubFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":7170},{"krate":0,"index":7171}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7377},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302228,"byte_end":302243,"line_start":164,"line_end":164,"column_start":9,"column_end":24},"name":"MulI8Incomplete","qualname":"::integer::arith::MulI8Incomplete","value":"MulI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":7379},{"krate":0,"index":7380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7406},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302254,"byte_end":302270,"line_start":165,"line_end":165,"column_start":10,"column_end":26},"name":"MulI16Incomplete","qualname":"::integer::arith::MulI16Incomplete","value":"MulI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":7408},{"krate":0,"index":7409}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7435},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302281,"byte_end":302297,"line_start":166,"line_end":166,"column_start":10,"column_end":26},"name":"MulI32Incomplete","qualname":"::integer::arith::MulI32Incomplete","value":"MulI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":7437},{"krate":0,"index":7438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7464},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302308,"byte_end":302324,"line_start":167,"line_end":167,"column_start":10,"column_end":26},"name":"MulI64Incomplete","qualname":"::integer::arith::MulI64Incomplete","value":"MulI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":7466},{"krate":0,"index":7467}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7493},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302336,"byte_end":302353,"line_start":168,"line_end":168,"column_start":11,"column_end":28},"name":"MulI128Incomplete","qualname":"::integer::arith::MulI128Incomplete","value":"MulI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":7495},{"krate":0,"index":7496}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7522},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302363,"byte_end":302378,"line_start":169,"line_end":169,"column_start":9,"column_end":24},"name":"MulU8Incomplete","qualname":"::integer::arith::MulU8Incomplete","value":"MulU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":7524},{"krate":0,"index":7525}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7551},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302389,"byte_end":302405,"line_start":170,"line_end":170,"column_start":10,"column_end":26},"name":"MulU16Incomplete","qualname":"::integer::arith::MulU16Incomplete","value":"MulU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":7553},{"krate":0,"index":7554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7580},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302416,"byte_end":302432,"line_start":171,"line_end":171,"column_start":10,"column_end":26},"name":"MulU32Incomplete","qualname":"::integer::arith::MulU32Incomplete","value":"MulU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7583}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7609},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302443,"byte_end":302459,"line_start":172,"line_end":172,"column_start":10,"column_end":26},"name":"MulU64Incomplete","qualname":"::integer::arith::MulU64Incomplete","value":"MulU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":7611},{"krate":0,"index":7612}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7638},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302471,"byte_end":302488,"line_start":173,"line_end":173,"column_start":11,"column_end":28},"name":"MulU128Incomplete","qualname":"::integer::arith::MulU128Incomplete","value":"MulU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":7640},{"krate":0,"index":7641}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7867},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302644,"byte_end":302659,"line_start":181,"line_end":181,"column_start":9,"column_end":24},"name":"DivI8Incomplete","qualname":"::integer::arith::DivI8Incomplete","value":"DivI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":7869},{"krate":0,"index":7870}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7876},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302661,"byte_end":302680,"line_start":181,"line_end":181,"column_start":26,"column_end":45},"name":"DivFromI8Incomplete","qualname":"::integer::arith::DivFromI8Incomplete","value":"DivFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":7878},{"krate":0,"index":7879}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7905},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302691,"byte_end":302707,"line_start":182,"line_end":182,"column_start":10,"column_end":26},"name":"DivI16Incomplete","qualname":"::integer::arith::DivI16Incomplete","value":"DivI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":7907},{"krate":0,"index":7908}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7914},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302709,"byte_end":302729,"line_start":182,"line_end":182,"column_start":28,"column_end":48},"name":"DivFromI16Incomplete","qualname":"::integer::arith::DivFromI16Incomplete","value":"DivFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":7916},{"krate":0,"index":7917}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7943},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302740,"byte_end":302756,"line_start":183,"line_end":183,"column_start":10,"column_end":26},"name":"DivI32Incomplete","qualname":"::integer::arith::DivI32Incomplete","value":"DivI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":7945},{"krate":0,"index":7946}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7952},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302758,"byte_end":302778,"line_start":183,"line_end":183,"column_start":28,"column_end":48},"name":"DivFromI32Incomplete","qualname":"::integer::arith::DivFromI32Incomplete","value":"DivFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":7954},{"krate":0,"index":7955}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7981},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302789,"byte_end":302805,"line_start":184,"line_end":184,"column_start":10,"column_end":26},"name":"DivI64Incomplete","qualname":"::integer::arith::DivI64Incomplete","value":"DivI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":7983},{"krate":0,"index":7984}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7990},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302807,"byte_end":302827,"line_start":184,"line_end":184,"column_start":28,"column_end":48},"name":"DivFromI64Incomplete","qualname":"::integer::arith::DivFromI64Incomplete","value":"DivFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":7992},{"krate":0,"index":7993}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8019},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302839,"byte_end":302856,"line_start":185,"line_end":185,"column_start":11,"column_end":28},"name":"DivI128Incomplete","qualname":"::integer::arith::DivI128Incomplete","value":"DivI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8021},{"krate":0,"index":8022}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8028},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302858,"byte_end":302879,"line_start":185,"line_end":185,"column_start":30,"column_end":51},"name":"DivFromI128Incomplete","qualname":"::integer::arith::DivFromI128Incomplete","value":"DivFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8030},{"krate":0,"index":8031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8057},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302889,"byte_end":302904,"line_start":186,"line_end":186,"column_start":9,"column_end":24},"name":"DivU8Incomplete","qualname":"::integer::arith::DivU8Incomplete","value":"DivU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":8059},{"krate":0,"index":8060}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8066},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302906,"byte_end":302925,"line_start":186,"line_end":186,"column_start":26,"column_end":45},"name":"DivFromU8Incomplete","qualname":"::integer::arith::DivFromU8Incomplete","value":"DivFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":8068},{"krate":0,"index":8069}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8095},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302936,"byte_end":302952,"line_start":187,"line_end":187,"column_start":10,"column_end":26},"name":"DivU16Incomplete","qualname":"::integer::arith::DivU16Incomplete","value":"DivU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":8097},{"krate":0,"index":8098}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8104},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302954,"byte_end":302974,"line_start":187,"line_end":187,"column_start":28,"column_end":48},"name":"DivFromU16Incomplete","qualname":"::integer::arith::DivFromU16Incomplete","value":"DivFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":8106},{"krate":0,"index":8107}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8133},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":302985,"byte_end":303001,"line_start":188,"line_end":188,"column_start":10,"column_end":26},"name":"DivU32Incomplete","qualname":"::integer::arith::DivU32Incomplete","value":"DivU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":8135},{"krate":0,"index":8136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8142},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303003,"byte_end":303023,"line_start":188,"line_end":188,"column_start":28,"column_end":48},"name":"DivFromU32Incomplete","qualname":"::integer::arith::DivFromU32Incomplete","value":"DivFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":8144},{"krate":0,"index":8145}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8171},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303034,"byte_end":303050,"line_start":189,"line_end":189,"column_start":10,"column_end":26},"name":"DivU64Incomplete","qualname":"::integer::arith::DivU64Incomplete","value":"DivU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":8173},{"krate":0,"index":8174}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8180},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303052,"byte_end":303072,"line_start":189,"line_end":189,"column_start":28,"column_end":48},"name":"DivFromU64Incomplete","qualname":"::integer::arith::DivFromU64Incomplete","value":"DivFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":8182},{"krate":0,"index":8183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8209},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303084,"byte_end":303101,"line_start":190,"line_end":190,"column_start":11,"column_end":28},"name":"DivU128Incomplete","qualname":"::integer::arith::DivU128Incomplete","value":"DivU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8211},{"krate":0,"index":8212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8218},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303103,"byte_end":303124,"line_start":190,"line_end":190,"column_start":30,"column_end":51},"name":"DivFromU128Incomplete","qualname":"::integer::arith::DivFromU128Incomplete","value":"DivFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8220},{"krate":0,"index":8221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8447},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303280,"byte_end":303295,"line_start":198,"line_end":198,"column_start":9,"column_end":24},"name":"RemI8Incomplete","qualname":"::integer::arith::RemI8Incomplete","value":"RemI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":8449},{"krate":0,"index":8450}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8456},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303297,"byte_end":303316,"line_start":198,"line_end":198,"column_start":26,"column_end":45},"name":"RemFromI8Incomplete","qualname":"::integer::arith::RemFromI8Incomplete","value":"RemFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":8458},{"krate":0,"index":8459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8485},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303327,"byte_end":303343,"line_start":199,"line_end":199,"column_start":10,"column_end":26},"name":"RemI16Incomplete","qualname":"::integer::arith::RemI16Incomplete","value":"RemI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":8487},{"krate":0,"index":8488}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8494},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303345,"byte_end":303365,"line_start":199,"line_end":199,"column_start":28,"column_end":48},"name":"RemFromI16Incomplete","qualname":"::integer::arith::RemFromI16Incomplete","value":"RemFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":8496},{"krate":0,"index":8497}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8523},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303376,"byte_end":303392,"line_start":200,"line_end":200,"column_start":10,"column_end":26},"name":"RemI32Incomplete","qualname":"::integer::arith::RemI32Incomplete","value":"RemI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":8525},{"krate":0,"index":8526}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8532},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303394,"byte_end":303414,"line_start":200,"line_end":200,"column_start":28,"column_end":48},"name":"RemFromI32Incomplete","qualname":"::integer::arith::RemFromI32Incomplete","value":"RemFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":8534},{"krate":0,"index":8535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8561},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303425,"byte_end":303441,"line_start":201,"line_end":201,"column_start":10,"column_end":26},"name":"RemI64Incomplete","qualname":"::integer::arith::RemI64Incomplete","value":"RemI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":8563},{"krate":0,"index":8564}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8570},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303443,"byte_end":303463,"line_start":201,"line_end":201,"column_start":28,"column_end":48},"name":"RemFromI64Incomplete","qualname":"::integer::arith::RemFromI64Incomplete","value":"RemFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":8572},{"krate":0,"index":8573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8599},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303475,"byte_end":303492,"line_start":202,"line_end":202,"column_start":11,"column_end":28},"name":"RemI128Incomplete","qualname":"::integer::arith::RemI128Incomplete","value":"RemI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8601},{"krate":0,"index":8602}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8608},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303494,"byte_end":303515,"line_start":202,"line_end":202,"column_start":30,"column_end":51},"name":"RemFromI128Incomplete","qualname":"::integer::arith::RemFromI128Incomplete","value":"RemFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8610},{"krate":0,"index":8611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8637},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303525,"byte_end":303540,"line_start":203,"line_end":203,"column_start":9,"column_end":24},"name":"RemU8Incomplete","qualname":"::integer::arith::RemU8Incomplete","value":"RemU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":8639},{"krate":0,"index":8640}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8646},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303542,"byte_end":303561,"line_start":203,"line_end":203,"column_start":26,"column_end":45},"name":"RemFromU8Incomplete","qualname":"::integer::arith::RemFromU8Incomplete","value":"RemFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":8648},{"krate":0,"index":8649}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8675},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303572,"byte_end":303588,"line_start":204,"line_end":204,"column_start":10,"column_end":26},"name":"RemU16Incomplete","qualname":"::integer::arith::RemU16Incomplete","value":"RemU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":8677},{"krate":0,"index":8678}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8684},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303590,"byte_end":303610,"line_start":204,"line_end":204,"column_start":28,"column_end":48},"name":"RemFromU16Incomplete","qualname":"::integer::arith::RemFromU16Incomplete","value":"RemFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":8686},{"krate":0,"index":8687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8713},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303621,"byte_end":303637,"line_start":205,"line_end":205,"column_start":10,"column_end":26},"name":"RemU32Incomplete","qualname":"::integer::arith::RemU32Incomplete","value":"RemU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":8715},{"krate":0,"index":8716}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8722},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303639,"byte_end":303659,"line_start":205,"line_end":205,"column_start":28,"column_end":48},"name":"RemFromU32Incomplete","qualname":"::integer::arith::RemFromU32Incomplete","value":"RemFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":8724},{"krate":0,"index":8725}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8751},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303670,"byte_end":303686,"line_start":206,"line_end":206,"column_start":10,"column_end":26},"name":"RemU64Incomplete","qualname":"::integer::arith::RemU64Incomplete","value":"RemU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":8753},{"krate":0,"index":8754}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8760},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303688,"byte_end":303708,"line_start":206,"line_end":206,"column_start":28,"column_end":48},"name":"RemFromU64Incomplete","qualname":"::integer::arith::RemFromU64Incomplete","value":"RemFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":8762},{"krate":0,"index":8763}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8789},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303720,"byte_end":303737,"line_start":207,"line_end":207,"column_start":11,"column_end":28},"name":"RemU128Incomplete","qualname":"::integer::arith::RemU128Incomplete","value":"RemU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8791},{"krate":0,"index":8792}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8798},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303739,"byte_end":303760,"line_start":207,"line_end":207,"column_start":30,"column_end":51},"name":"RemFromU128Incomplete","qualname":"::integer::arith::RemFromU128Incomplete","value":"RemFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":8800},{"krate":0,"index":8801}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9007},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303912,"byte_end":303930,"line_start":215,"line_end":215,"column_start":9,"column_end":27},"name":"BitAndI8Incomplete","qualname":"::integer::arith::BitAndI8Incomplete","value":"BitAndI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":9009},{"krate":0,"index":9010}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9036},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303941,"byte_end":303960,"line_start":216,"line_end":216,"column_start":10,"column_end":29},"name":"BitAndI16Incomplete","qualname":"::integer::arith::BitAndI16Incomplete","value":"BitAndI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":9038},{"krate":0,"index":9039}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9065},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":303971,"byte_end":303990,"line_start":217,"line_end":217,"column_start":10,"column_end":29},"name":"BitAndI32Incomplete","qualname":"::integer::arith::BitAndI32Incomplete","value":"BitAndI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":9067},{"krate":0,"index":9068}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9094},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304001,"byte_end":304020,"line_start":218,"line_end":218,"column_start":10,"column_end":29},"name":"BitAndI64Incomplete","qualname":"::integer::arith::BitAndI64Incomplete","value":"BitAndI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":9096},{"krate":0,"index":9097}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9123},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304032,"byte_end":304052,"line_start":219,"line_end":219,"column_start":11,"column_end":31},"name":"BitAndI128Incomplete","qualname":"::integer::arith::BitAndI128Incomplete","value":"BitAndI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":9125},{"krate":0,"index":9126}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9152},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304062,"byte_end":304080,"line_start":220,"line_end":220,"column_start":9,"column_end":27},"name":"BitAndU8Incomplete","qualname":"::integer::arith::BitAndU8Incomplete","value":"BitAndU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":9154},{"krate":0,"index":9155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9181},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304091,"byte_end":304110,"line_start":221,"line_end":221,"column_start":10,"column_end":29},"name":"BitAndU16Incomplete","qualname":"::integer::arith::BitAndU16Incomplete","value":"BitAndU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":9183},{"krate":0,"index":9184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9210},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304121,"byte_end":304140,"line_start":222,"line_end":222,"column_start":10,"column_end":29},"name":"BitAndU32Incomplete","qualname":"::integer::arith::BitAndU32Incomplete","value":"BitAndU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":9212},{"krate":0,"index":9213}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9239},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304151,"byte_end":304170,"line_start":223,"line_end":223,"column_start":10,"column_end":29},"name":"BitAndU64Incomplete","qualname":"::integer::arith::BitAndU64Incomplete","value":"BitAndU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":9241},{"krate":0,"index":9242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9268},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304182,"byte_end":304202,"line_start":224,"line_end":224,"column_start":11,"column_end":31},"name":"BitAndU128Incomplete","qualname":"::integer::arith::BitAndU128Incomplete","value":"BitAndU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":9270},{"krate":0,"index":9271}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9477},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304348,"byte_end":304365,"line_start":232,"line_end":232,"column_start":9,"column_end":26},"name":"BitOrI8Incomplete","qualname":"::integer::arith::BitOrI8Incomplete","value":"BitOrI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":9479},{"krate":0,"index":9480}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9506},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304376,"byte_end":304394,"line_start":233,"line_end":233,"column_start":10,"column_end":28},"name":"BitOrI16Incomplete","qualname":"::integer::arith::BitOrI16Incomplete","value":"BitOrI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":9508},{"krate":0,"index":9509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9535},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304405,"byte_end":304423,"line_start":234,"line_end":234,"column_start":10,"column_end":28},"name":"BitOrI32Incomplete","qualname":"::integer::arith::BitOrI32Incomplete","value":"BitOrI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":9537},{"krate":0,"index":9538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9564},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304434,"byte_end":304452,"line_start":235,"line_end":235,"column_start":10,"column_end":28},"name":"BitOrI64Incomplete","qualname":"::integer::arith::BitOrI64Incomplete","value":"BitOrI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":9566},{"krate":0,"index":9567}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9593},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304464,"byte_end":304483,"line_start":236,"line_end":236,"column_start":11,"column_end":30},"name":"BitOrI128Incomplete","qualname":"::integer::arith::BitOrI128Incomplete","value":"BitOrI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":9595},{"krate":0,"index":9596}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9622},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304493,"byte_end":304510,"line_start":237,"line_end":237,"column_start":9,"column_end":26},"name":"BitOrU8Incomplete","qualname":"::integer::arith::BitOrU8Incomplete","value":"BitOrU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":9624},{"krate":0,"index":9625}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9651},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304521,"byte_end":304539,"line_start":238,"line_end":238,"column_start":10,"column_end":28},"name":"BitOrU16Incomplete","qualname":"::integer::arith::BitOrU16Incomplete","value":"BitOrU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":9653},{"krate":0,"index":9654}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9680},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304550,"byte_end":304568,"line_start":239,"line_end":239,"column_start":10,"column_end":28},"name":"BitOrU32Incomplete","qualname":"::integer::arith::BitOrU32Incomplete","value":"BitOrU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":9682},{"krate":0,"index":9683}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9709},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304579,"byte_end":304597,"line_start":240,"line_end":240,"column_start":10,"column_end":28},"name":"BitOrU64Incomplete","qualname":"::integer::arith::BitOrU64Incomplete","value":"BitOrU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":9711},{"krate":0,"index":9712}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9738},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304609,"byte_end":304628,"line_start":241,"line_end":241,"column_start":11,"column_end":30},"name":"BitOrU128Incomplete","qualname":"::integer::arith::BitOrU128Incomplete","value":"BitOrU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":9740},{"krate":0,"index":9741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9947},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304780,"byte_end":304798,"line_start":249,"line_end":249,"column_start":9,"column_end":27},"name":"BitXorI8Incomplete","qualname":"::integer::arith::BitXorI8Incomplete","value":"BitXorI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":9949},{"krate":0,"index":9950}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9976},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304809,"byte_end":304828,"line_start":250,"line_end":250,"column_start":10,"column_end":29},"name":"BitXorI16Incomplete","qualname":"::integer::arith::BitXorI16Incomplete","value":"BitXorI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":9978},{"krate":0,"index":9979}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10005},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304839,"byte_end":304858,"line_start":251,"line_end":251,"column_start":10,"column_end":29},"name":"BitXorI32Incomplete","qualname":"::integer::arith::BitXorI32Incomplete","value":"BitXorI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10007},{"krate":0,"index":10008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10034},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304869,"byte_end":304888,"line_start":252,"line_end":252,"column_start":10,"column_end":29},"name":"BitXorI64Incomplete","qualname":"::integer::arith::BitXorI64Incomplete","value":"BitXorI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":10036},{"krate":0,"index":10037}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10063},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304900,"byte_end":304920,"line_start":253,"line_end":253,"column_start":11,"column_end":31},"name":"BitXorI128Incomplete","qualname":"::integer::arith::BitXorI128Incomplete","value":"BitXorI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":10065},{"krate":0,"index":10066}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10092},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304930,"byte_end":304948,"line_start":254,"line_end":254,"column_start":9,"column_end":27},"name":"BitXorU8Incomplete","qualname":"::integer::arith::BitXorU8Incomplete","value":"BitXorU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":10094},{"krate":0,"index":10095}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10121},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304959,"byte_end":304978,"line_start":255,"line_end":255,"column_start":10,"column_end":29},"name":"BitXorU16Incomplete","qualname":"::integer::arith::BitXorU16Incomplete","value":"BitXorU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":10123},{"krate":0,"index":10124}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10150},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":304989,"byte_end":305008,"line_start":256,"line_end":256,"column_start":10,"column_end":29},"name":"BitXorU32Incomplete","qualname":"::integer::arith::BitXorU32Incomplete","value":"BitXorU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10152},{"krate":0,"index":10153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10179},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305019,"byte_end":305038,"line_start":257,"line_end":257,"column_start":10,"column_end":29},"name":"BitXorU64Incomplete","qualname":"::integer::arith::BitXorU64Incomplete","value":"BitXorU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":10181},{"krate":0,"index":10182}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10208},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305050,"byte_end":305070,"line_start":258,"line_end":258,"column_start":11,"column_end":31},"name":"BitXorU128Incomplete","qualname":"::integer::arith::BitXorU128Incomplete","value":"BitXorU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":10210},{"krate":0,"index":10211}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10237},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305175,"byte_end":305191,"line_start":266,"line_end":266,"column_start":10,"column_end":26},"name":"ShlI32Incomplete","qualname":"::integer::arith::ShlI32Incomplete","value":"ShlI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10239},{"krate":0,"index":10240}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10266},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305295,"byte_end":305311,"line_start":273,"line_end":273,"column_start":10,"column_end":26},"name":"ShrI32Incomplete","qualname":"::integer::arith::ShrI32Incomplete","value":"ShrI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10268},{"krate":0,"index":10269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10295},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305415,"byte_end":305431,"line_start":280,"line_end":280,"column_start":10,"column_end":26},"name":"ShlU32Incomplete","qualname":"::integer::arith::ShlU32Incomplete","value":"ShlU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10297},{"krate":0,"index":10298}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10324},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305535,"byte_end":305551,"line_start":287,"line_end":287,"column_start":10,"column_end":26},"name":"ShrU32Incomplete","qualname":"::integer::arith::ShrU32Incomplete","value":"ShrU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10326},{"krate":0,"index":10327}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10353},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305655,"byte_end":305671,"line_start":294,"line_end":294,"column_start":10,"column_end":26},"name":"PowU32Incomplete","qualname":"::integer::arith::PowU32Incomplete","value":"PowU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10355},{"krate":0,"index":10356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10382},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305813,"byte_end":305829,"line_start":303,"line_end":303,"column_start":20,"column_end":36},"name":"AddMulIncomplete","qualname":"::integer::arith::AddMulIncomplete","value":"AddMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":10384},{"krate":0,"index":10385}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10413},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":305987,"byte_end":306003,"line_start":311,"line_end":311,"column_start":20,"column_end":36},"name":"SubMulIncomplete","qualname":"::integer::arith::SubMulIncomplete","value":"SubMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":10415},{"krate":0,"index":10416}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10422},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306005,"byte_end":306025,"line_start":311,"line_end":311,"column_start":38,"column_end":58},"name":"SubMulFromIncomplete","qualname":"::integer::arith::SubMulFromIncomplete","value":"SubMulFromIncomplete {  }","parent":null,"children":[{"krate":0,"index":10424},{"krate":0,"index":10425}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10532},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306171,"byte_end":306189,"line_start":319,"line_end":319,"column_start":22,"column_end":40},"name":"AddMulI8Incomplete","qualname":"::integer::arith::AddMulI8Incomplete","value":"AddMulI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":10534},{"krate":0,"index":10535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10552},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306213,"byte_end":306232,"line_start":320,"line_end":320,"column_start":23,"column_end":42},"name":"AddMulI16Incomplete","qualname":"::integer::arith::AddMulI16Incomplete","value":"AddMulI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":10554},{"krate":0,"index":10555}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10572},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306256,"byte_end":306275,"line_start":321,"line_end":321,"column_start":23,"column_end":42},"name":"AddMulI32Incomplete","qualname":"::integer::arith::AddMulI32Incomplete","value":"AddMulI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10574},{"krate":0,"index":10575}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10592},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306299,"byte_end":306318,"line_start":322,"line_end":322,"column_start":23,"column_end":42},"name":"AddMulI64Incomplete","qualname":"::integer::arith::AddMulI64Incomplete","value":"AddMulI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":10594},{"krate":0,"index":10595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10612},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306343,"byte_end":306363,"line_start":323,"line_end":323,"column_start":24,"column_end":44},"name":"AddMulI128Incomplete","qualname":"::integer::arith::AddMulI128Incomplete","value":"AddMulI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":10614},{"krate":0,"index":10615}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10632},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306386,"byte_end":306404,"line_start":324,"line_end":324,"column_start":22,"column_end":40},"name":"AddMulU8Incomplete","qualname":"::integer::arith::AddMulU8Incomplete","value":"AddMulU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":10634},{"krate":0,"index":10635}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10652},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306428,"byte_end":306447,"line_start":325,"line_end":325,"column_start":23,"column_end":42},"name":"AddMulU16Incomplete","qualname":"::integer::arith::AddMulU16Incomplete","value":"AddMulU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":10654},{"krate":0,"index":10655}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10672},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306471,"byte_end":306490,"line_start":326,"line_end":326,"column_start":23,"column_end":42},"name":"AddMulU32Incomplete","qualname":"::integer::arith::AddMulU32Incomplete","value":"AddMulU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10674},{"krate":0,"index":10675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10692},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306514,"byte_end":306533,"line_start":327,"line_end":327,"column_start":23,"column_end":42},"name":"AddMulU64Incomplete","qualname":"::integer::arith::AddMulU64Incomplete","value":"AddMulU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":10694},{"krate":0,"index":10695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10712},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306558,"byte_end":306578,"line_start":328,"line_end":328,"column_start":24,"column_end":44},"name":"AddMulU128Incomplete","qualname":"::integer::arith::AddMulU128Incomplete","value":"AddMulU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":10714},{"krate":0,"index":10715}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10842},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306744,"byte_end":306762,"line_start":336,"line_end":336,"column_start":22,"column_end":40},"name":"SubMulI8Incomplete","qualname":"::integer::arith::SubMulI8Incomplete","value":"SubMulI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":10844},{"krate":0,"index":10845}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10851},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306764,"byte_end":306786,"line_start":336,"line_end":336,"column_start":42,"column_end":64},"name":"SubMulFromI8Incomplete","qualname":"::integer::arith::SubMulFromI8Incomplete","value":"SubMulFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":10853},{"krate":0,"index":10854}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10871},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306810,"byte_end":306829,"line_start":337,"line_end":337,"column_start":23,"column_end":42},"name":"SubMulI16Incomplete","qualname":"::integer::arith::SubMulI16Incomplete","value":"SubMulI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":10873},{"krate":0,"index":10874}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10880},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306831,"byte_end":306854,"line_start":337,"line_end":337,"column_start":44,"column_end":67},"name":"SubMulFromI16Incomplete","qualname":"::integer::arith::SubMulFromI16Incomplete","value":"SubMulFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":10882},{"krate":0,"index":10883}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10900},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306878,"byte_end":306897,"line_start":338,"line_end":338,"column_start":23,"column_end":42},"name":"SubMulI32Incomplete","qualname":"::integer::arith::SubMulI32Incomplete","value":"SubMulI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10902},{"krate":0,"index":10903}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10909},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306899,"byte_end":306922,"line_start":338,"line_end":338,"column_start":44,"column_end":67},"name":"SubMulFromI32Incomplete","qualname":"::integer::arith::SubMulFromI32Incomplete","value":"SubMulFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":10911},{"krate":0,"index":10912}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10929},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306946,"byte_end":306965,"line_start":339,"line_end":339,"column_start":23,"column_end":42},"name":"SubMulI64Incomplete","qualname":"::integer::arith::SubMulI64Incomplete","value":"SubMulI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":10931},{"krate":0,"index":10932}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10938},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":306967,"byte_end":306990,"line_start":339,"line_end":339,"column_start":44,"column_end":67},"name":"SubMulFromI64Incomplete","qualname":"::integer::arith::SubMulFromI64Incomplete","value":"SubMulFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":10940},{"krate":0,"index":10941}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10958},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307015,"byte_end":307035,"line_start":340,"line_end":340,"column_start":24,"column_end":44},"name":"SubMulI128Incomplete","qualname":"::integer::arith::SubMulI128Incomplete","value":"SubMulI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":10960},{"krate":0,"index":10961}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10967},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307037,"byte_end":307061,"line_start":340,"line_end":340,"column_start":46,"column_end":70},"name":"SubMulFromI128Incomplete","qualname":"::integer::arith::SubMulFromI128Incomplete","value":"SubMulFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":10969},{"krate":0,"index":10970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10987},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307084,"byte_end":307102,"line_start":341,"line_end":341,"column_start":22,"column_end":40},"name":"SubMulU8Incomplete","qualname":"::integer::arith::SubMulU8Incomplete","value":"SubMulU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":10989},{"krate":0,"index":10990}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10996},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307104,"byte_end":307126,"line_start":341,"line_end":341,"column_start":42,"column_end":64},"name":"SubMulFromU8Incomplete","qualname":"::integer::arith::SubMulFromU8Incomplete","value":"SubMulFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":10998},{"krate":0,"index":10999}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11016},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307150,"byte_end":307169,"line_start":342,"line_end":342,"column_start":23,"column_end":42},"name":"SubMulU16Incomplete","qualname":"::integer::arith::SubMulU16Incomplete","value":"SubMulU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":11018},{"krate":0,"index":11019}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11025},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307171,"byte_end":307194,"line_start":342,"line_end":342,"column_start":44,"column_end":67},"name":"SubMulFromU16Incomplete","qualname":"::integer::arith::SubMulFromU16Incomplete","value":"SubMulFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":11027},{"krate":0,"index":11028}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11045},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307218,"byte_end":307237,"line_start":343,"line_end":343,"column_start":23,"column_end":42},"name":"SubMulU32Incomplete","qualname":"::integer::arith::SubMulU32Incomplete","value":"SubMulU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":11047},{"krate":0,"index":11048}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11054},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307239,"byte_end":307262,"line_start":343,"line_end":343,"column_start":44,"column_end":67},"name":"SubMulFromU32Incomplete","qualname":"::integer::arith::SubMulFromU32Incomplete","value":"SubMulFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":11056},{"krate":0,"index":11057}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11074},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307286,"byte_end":307305,"line_start":344,"line_end":344,"column_start":23,"column_end":42},"name":"SubMulU64Incomplete","qualname":"::integer::arith::SubMulU64Incomplete","value":"SubMulU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":11076},{"krate":0,"index":11077}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11083},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307307,"byte_end":307330,"line_start":344,"line_end":344,"column_start":44,"column_end":67},"name":"SubMulFromU64Incomplete","qualname":"::integer::arith::SubMulFromU64Incomplete","value":"SubMulFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":11085},{"krate":0,"index":11086}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11103},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307355,"byte_end":307375,"line_start":345,"line_end":345,"column_start":24,"column_end":44},"name":"SubMulU128Incomplete","qualname":"::integer::arith::SubMulU128Incomplete","value":"SubMulU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":11105},{"krate":0,"index":11106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11112},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307377,"byte_end":307401,"line_start":345,"line_end":345,"column_start":46,"column_end":70},"name":"SubMulFromU128Incomplete","qualname":"::integer::arith::SubMulFromU128Incomplete","value":"SubMulFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":11114},{"krate":0,"index":11115}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":762},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":308383,"byte_end":308387,"line_start":366,"line_end":366,"column_start":10,"column_end":14},"name":"Long","qualname":"::integer::arith::AsLong::Long","value":"type Long;","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":328213,"byte_end":328220,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"Integer","qualname":"::integer::big::Integer","value":"Integer {  }","parent":null,"children":[{"krate":0,"index":827}],"decl_id":null,"docs":"An arbitrary-precision integer.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":328181,"byte_end":328201,"line_start":188,"line_end":188,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":329148,"byte_end":329151,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<Integer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new arbitrary-precision [`Integer`] with value 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":329127,"byte_end":329136,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":329668,"byte_end":329681,"line_start":251,"line_end":251,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Integer>::with_capacity","value":"fn (bits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new arbitrary-precision [`Integer`] with at least\n the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":329647,"byte_end":329656,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":330150,"byte_end":330158,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Integer>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity in bits that can be stored without\n reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":330129,"byte_end":330138,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":331042,"byte_end":331049,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Integer>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bits in the\n [`Integer`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":332166,"byte_end":332179,"line_start":335,"line_end":335,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<Integer>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the [`Integer`] as much as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":333574,"byte_end":333582,"line_start":376,"line_end":376,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Integer>::from_raw","value":"fn (raw: mpz_t) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an [`Integer`] from an initialized\n [GMP integer][`mpz_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":333546,"byte_end":333555,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":334317,"byte_end":334325,"line_start":402,"line_end":402,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Integer>::into_raw","value":"fn (self) -> mpz_t","parent":null,"children":[],"decl_id":null,"docs":" Converts an [`Integer`] into a [GMP integer][`mpz_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":334296,"byte_end":334305,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":335038,"byte_end":335044,"line_start":430,"line_end":430,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Integer>::as_raw","value":"fn (&self) -> *const mpz_t","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the inner [GMP integer][`mpz_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":335017,"byte_end":335026,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":335692,"byte_end":335702,"line_start":455,"line_end":455,"column_start":12,"column_end":22},"name":"as_raw_mut","qualname":"<Integer>::as_raw_mut","value":"fn (&mut self) -> *mut mpz_t","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the inner\n [GMP integer][`mpz_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":335671,"byte_end":335680,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":336390,"byte_end":336401,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"from_digits","qualname":"<Integer>::from_digits","value":"fn <T> (digits: &[T], order: Order) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an [`Integer`] from a [slice] of digits of type `T`,\n where `T` can be any [unsigned integer primitive type][upt].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":337254,"byte_end":337267,"line_start":500,"line_end":500,"column_start":12,"column_end":25},"name":"assign_digits","qualname":"<Integer>::assign_digits","value":"fn <T> (&mut self, digits: &[T], order: Order) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assigns from a [slice] of digits of type `T`, where `T` can be\n any [unsigned integer primitive type][upt].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":338810,"byte_end":338833,"line_start":544,"line_end":544,"column_start":19,"column_end":42},"name":"assign_digits_unaligned","qualname":"<Integer>::assign_digits_unaligned","value":"fn <T> (&mut self, src: *const T, len: usize, order: Order) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assigns from digits of type `T` in a memory area, where `T`\n can be any [unsigned integer primitive type][upt].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":339933,"byte_end":339951,"line_start":583,"line_end":583,"column_start":12,"column_end":30},"name":"significant_digits","qualname":"<Integer>::significant_digits","value":"fn <T> (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of digits of type `T` required to represent\n the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":339912,"byte_end":339921,"line_start":582,"line_end":582,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":340801,"byte_end":340810,"line_start":606,"line_end":606,"column_start":12,"column_end":21},"name":"to_digits","qualname":"<Integer>::to_digits","value":"fn <T> (&self, order: Order) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the absolute value to a [`Vec`] of digits of type\n `T`, where `T` can be any\n [unsigned integer primitive type][upt].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":342495,"byte_end":342507,"line_start":653,"line_end":653,"column_start":12,"column_end":24},"name":"write_digits","qualname":"<Integer>::write_digits","value":"fn <T> (&self, digits: &mut [T], order: Order) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes the absolute value into a [slice] of digits of type\n `T`, where `T` can be any\n [unsigned integer primitive type][upt].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":345461,"byte_end":345483,"line_start":735,"line_end":735,"column_start":19,"column_end":41},"name":"write_digits_unaligned","qualname":"<Integer>::write_digits_unaligned","value":"fn <T> (&self, dst: *mut T, len: usize, order: Order) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes the absolute value into a memory area of digits of type\n `T`, where `T` can be any\n [unsigned integer primitive type][upt].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":347052,"byte_end":347060,"line_start":781,"line_end":781,"column_start":12,"column_end":20},"name":"from_f32","qualname":"<Integer>::from_f32","value":"fn (val: f32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an [`Integer`] from an [`f32`] if it is\n [finite][`is_finite`], rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":347031,"byte_end":347040,"line_start":780,"line_end":780,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":347811,"byte_end":347819,"line_start":803,"line_end":803,"column_start":12,"column_end":20},"name":"from_f64","qualname":"<Integer>::from_f64","value":"fn (val: f64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates an [`Integer`] from an [`f64`] if it is\n [finite][`is_finite`], rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":347790,"byte_end":347799,"line_start":802,"line_end":802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":348516,"byte_end":348530,"line_start":831,"line_end":831,"column_start":12,"column_end":26},"name":"from_str_radix","qualname":"<Integer>::from_str_radix","value":"fn (src: &str, radix: i32) -> Result<Self, ParseIntegerError>","parent":null,"children":[],"decl_id":null,"docs":" Parses an [`Integer`] using the given radix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":348495,"byte_end":348504,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":350260,"byte_end":350265,"line_start":874,"line_end":874,"column_start":12,"column_end":17},"name":"parse","qualname":"<Integer>::parse","value":"fn <S> (src: S) -> Result<ParseIncomplete, ParseIntegerError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a decimal string slice (<code>&amp;[str]</code>) or\n byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into an\n [`Integer`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":350239,"byte_end":350248,"line_start":873,"line_end":873,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":352106,"byte_end":352117,"line_start":920,"line_end":920,"column_start":12,"column_end":23},"name":"parse_radix","qualname":"<Integer>::parse_radix","value":"fn <S> (src: S, radix: i32) -> Result<ParseIncomplete, ParseIntegerError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string slice (<code>&amp;[str]</code>) or byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into an\n [`Integer`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":352085,"byte_end":352094,"line_start":919,"line_end":919,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":353064,"byte_end":353069,"line_start":948,"line_end":948,"column_start":12,"column_end":17},"name":"to_i8","qualname":"<Integer>::to_i8","value":"fn (&self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i8`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":353043,"byte_end":353052,"line_start":947,"line_end":947,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":354036,"byte_end":354042,"line_start":977,"line_end":977,"column_start":12,"column_end":18},"name":"to_i16","qualname":"<Integer>::to_i16","value":"fn (&self) -> Option<i16>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i16`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":354015,"byte_end":354024,"line_start":976,"line_end":976,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":355030,"byte_end":355036,"line_start":1006,"line_end":1006,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Integer>::to_i32","value":"fn (&self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i32`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":355009,"byte_end":355018,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":356068,"byte_end":356074,"line_start":1035,"line_end":1035,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Integer>::to_i64","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i64`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":356047,"byte_end":356056,"line_start":1034,"line_end":1034,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":357068,"byte_end":357075,"line_start":1064,"line_end":1064,"column_start":12,"column_end":19},"name":"to_i128","qualname":"<Integer>::to_i128","value":"fn (&self) -> Option<i128>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i128`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":357047,"byte_end":357056,"line_start":1063,"line_end":1063,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":357994,"byte_end":358002,"line_start":1091,"line_end":1091,"column_start":12,"column_end":20},"name":"to_isize","qualname":"<Integer>::to_isize","value":"fn (&self) -> Option<isize>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`isize`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":357973,"byte_end":357982,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":359028,"byte_end":359033,"line_start":1123,"line_end":1123,"column_start":12,"column_end":17},"name":"to_u8","qualname":"<Integer>::to_u8","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u8`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":359007,"byte_end":359016,"line_start":1122,"line_end":1122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":359988,"byte_end":359994,"line_start":1152,"line_end":1152,"column_start":12,"column_end":18},"name":"to_u16","qualname":"<Integer>::to_u16","value":"fn (&self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u16`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":359967,"byte_end":359976,"line_start":1151,"line_end":1151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":360973,"byte_end":360979,"line_start":1181,"line_end":1181,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Integer>::to_u32","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u32`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":360952,"byte_end":360961,"line_start":1180,"line_end":1180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":361992,"byte_end":361998,"line_start":1210,"line_end":1210,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Integer>::to_u64","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u64`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":361971,"byte_end":361980,"line_start":1209,"line_end":1209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":363073,"byte_end":363080,"line_start":1241,"line_end":1241,"column_start":12,"column_end":19},"name":"to_u128","qualname":"<Integer>::to_u128","value":"fn (&self) -> Option<u128>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u128`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":363052,"byte_end":363061,"line_start":1240,"line_end":1240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":364077,"byte_end":364085,"line_start":1270,"line_end":1270,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Integer>::to_usize","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`usize`] if the value fits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":364056,"byte_end":364065,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":364677,"byte_end":364691,"line_start":1293,"line_end":1293,"column_start":12,"column_end":26},"name":"to_i8_wrapping","qualname":"<Integer>::to_i8_wrapping","value":"fn (&self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i8`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":364656,"byte_end":364665,"line_start":1292,"line_end":1292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":365115,"byte_end":365130,"line_start":1309,"line_end":1309,"column_start":12,"column_end":27},"name":"to_i16_wrapping","qualname":"<Integer>::to_i16_wrapping","value":"fn (&self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i16`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":365094,"byte_end":365103,"line_start":1308,"line_end":1308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":365587,"byte_end":365602,"line_start":1325,"line_end":1325,"column_start":12,"column_end":27},"name":"to_i32_wrapping","qualname":"<Integer>::to_i32_wrapping","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i32`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":365566,"byte_end":365575,"line_start":1324,"line_end":1324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":366075,"byte_end":366090,"line_start":1341,"line_end":1341,"column_start":12,"column_end":27},"name":"to_i64_wrapping","qualname":"<Integer>::to_i64_wrapping","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i64`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":366054,"byte_end":366063,"line_start":1340,"line_end":1340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":366656,"byte_end":366672,"line_start":1361,"line_end":1361,"column_start":12,"column_end":28},"name":"to_i128_wrapping","qualname":"<Integer>::to_i128_wrapping","value":"fn (&self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i128`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":366635,"byte_end":366644,"line_start":1360,"line_end":1360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":367132,"byte_end":367149,"line_start":1377,"line_end":1377,"column_start":12,"column_end":29},"name":"to_isize_wrapping","qualname":"<Integer>::to_isize_wrapping","value":"fn (&self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`isize`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":367111,"byte_end":367120,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":367655,"byte_end":367669,"line_start":1395,"line_end":1395,"column_start":12,"column_end":26},"name":"to_u8_wrapping","qualname":"<Integer>::to_u8_wrapping","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u8`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":367634,"byte_end":367643,"line_start":1394,"line_end":1394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":368304,"byte_end":368319,"line_start":1418,"line_end":1418,"column_start":12,"column_end":27},"name":"to_u16_wrapping","qualname":"<Integer>::to_u16_wrapping","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u16`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":368283,"byte_end":368292,"line_start":1417,"line_end":1417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":368980,"byte_end":368995,"line_start":1441,"line_end":1441,"column_start":12,"column_end":27},"name":"to_u32_wrapping","qualname":"<Integer>::to_u32_wrapping","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u32`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":368959,"byte_end":368968,"line_start":1440,"line_end":1440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":369686,"byte_end":369701,"line_start":1464,"line_end":1464,"column_start":12,"column_end":27},"name":"to_u64_wrapping","qualname":"<Integer>::to_u64_wrapping","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u64`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":369665,"byte_end":369674,"line_start":1463,"line_end":1463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":370540,"byte_end":370556,"line_start":1494,"line_end":1494,"column_start":12,"column_end":28},"name":"to_u128_wrapping","qualname":"<Integer>::to_u128_wrapping","value":"fn (&self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u128`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":370519,"byte_end":370528,"line_start":1493,"line_end":1493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":371130,"byte_end":371147,"line_start":1515,"line_end":1515,"column_start":12,"column_end":29},"name":"to_usize_wrapping","qualname":"<Integer>::to_usize_wrapping","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`usize`], wrapping if the value does not fit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":371109,"byte_end":371118,"line_start":1514,"line_end":1514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":371994,"byte_end":372000,"line_start":1544,"line_end":1544,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Integer>::to_f32","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f32`], rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":371973,"byte_end":371982,"line_start":1543,"line_end":1543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":373126,"byte_end":373132,"line_start":1579,"line_end":1579,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Integer>::to_f64","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f64`], rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":373105,"byte_end":373114,"line_start":1578,"line_end":1578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":373868,"byte_end":373878,"line_start":1602,"line_end":1602,"column_start":12,"column_end":22},"name":"to_f32_exp","qualname":"<Integer>::to_f32_exp","value":"fn (&self) -> (f32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f32`] and an exponent, rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":373847,"byte_end":373856,"line_start":1601,"line_end":1601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":374686,"byte_end":374696,"line_start":1627,"line_end":1627,"column_start":12,"column_end":22},"name":"to_f64_exp","qualname":"<Integer>::to_f64_exp","value":"fn (&self) -> (f64, u32)","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f64`] and an exponent, rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":374665,"byte_end":374674,"line_start":1626,"line_end":1626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":375564,"byte_end":375579,"line_start":1654,"line_end":1654,"column_start":12,"column_end":27},"name":"to_string_radix","qualname":"<Integer>::to_string_radix","value":"fn (&self, radix: i32) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of the number for the\n specified `radix`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":375543,"byte_end":375552,"line_start":1653,"line_end":1653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":376362,"byte_end":376372,"line_start":1680,"line_end":1680,"column_start":12,"column_end":22},"name":"assign_f32","qualname":"<Integer>::assign_f32","value":"fn (&mut self, val: f32) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Assigns from an [`f32`] if it is [finite][`is_finite`],\n rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":376341,"byte_end":376350,"line_start":1679,"line_end":1679,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":377077,"byte_end":377087,"line_start":1703,"line_end":1703,"column_start":12,"column_end":22},"name":"assign_f64","qualname":"<Integer>::assign_f64","value":"fn (&mut self, val: f64) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Assigns from an [`f64`] if it is [finite][`is_finite`],\n rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":377056,"byte_end":377065,"line_start":1702,"line_end":1702,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":378059,"byte_end":378065,"line_start":1731,"line_end":1731,"column_start":12,"column_end":18},"name":"as_neg","qualname":"<Integer>::as_neg","value":"fn (&self) -> BorrowInteger<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a negated copy of the [`Integer`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":379153,"byte_end":379159,"line_start":1761,"line_end":1761,"column_start":12,"column_end":18},"name":"as_abs","qualname":"<Integer>::as_abs","value":"fn (&self) -> BorrowInteger<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows an absolute copy of the [`Integer`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":379683,"byte_end":379690,"line_start":1779,"line_end":1779,"column_start":12,"column_end":19},"name":"is_even","qualname":"<Integer>::is_even","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is even.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":379662,"byte_end":379671,"line_start":1778,"line_end":1778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":380107,"byte_end":380113,"line_start":1795,"line_end":1795,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<Integer>::is_odd","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is odd.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":380086,"byte_end":380095,"line_start":1794,"line_end":1794,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":380715,"byte_end":380727,"line_start":1814,"line_end":1814,"column_start":12,"column_end":24},"name":"is_divisible","qualname":"<Integer>::is_divisible","value":"fn (&self, divisor: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is divisible by `divisor`. Unlike\n other division functions, `divisor` can be zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":380694,"byte_end":380703,"line_start":1813,"line_end":1813,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":381329,"byte_end":381343,"line_start":1833,"line_end":1833,"column_start":12,"column_end":26},"name":"is_divisible_u","qualname":"<Integer>::is_divisible_u","value":"fn (&self, divisor: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is divisible by `divisor`. Unlike\n other division functions, `divisor` can be zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":381308,"byte_end":381317,"line_start":1832,"line_end":1832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":381904,"byte_end":381921,"line_start":1851,"line_end":1851,"column_start":12,"column_end":29},"name":"is_divisible_2pow","qualname":"<Integer>::is_divisible_2pow","value":"fn (&self, b: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is divisible by 2<sup><i>b</i></sup>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":381883,"byte_end":381892,"line_start":1850,"line_end":1850,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":382858,"byte_end":382870,"line_start":1875,"line_end":1875,"column_start":12,"column_end":24},"name":"is_congruent","qualname":"<Integer>::is_congruent","value":"fn (&self, c: &Self, divisor: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is congruent to <i>c</i> mod\n <i>divisor</i>, that is, if there exists a <i>q</i> such that\n `self` = <i>c</i> + <i>q</i> × <i>divisor</i>. Unlike other\n division functions, `divisor` can be zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":382837,"byte_end":382846,"line_start":1874,"line_end":1874,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":383688,"byte_end":383702,"line_start":1897,"line_end":1897,"column_start":12,"column_end":26},"name":"is_congruent_u","qualname":"<Integer>::is_congruent_u","value":"fn (&self, c: u32, divisor: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is congruent to <i>c</i> mod\n <i>divisor</i>, that is, if there exists a <i>q</i> such that\n `self` = <i>c</i> + <i>q</i> × <i>divisor</i>. Unlike other\n division functions, `divisor` can be zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":383667,"byte_end":383676,"line_start":1896,"line_end":1896,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":384434,"byte_end":384451,"line_start":1916,"line_end":1916,"column_start":12,"column_end":29},"name":"is_congruent_2pow","qualname":"<Integer>::is_congruent_2pow","value":"fn (&self, c: &Self, b: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is congruent to <i>c</i> mod\n 2<sup><i>b</i></sup>, that is, if there exists a <i>q</i> such\n that `self` = <i>c</i> + <i>q</i> × 2<sup><i>b</i></sup>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":384413,"byte_end":384422,"line_start":1915,"line_end":1915,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":385249,"byte_end":385265,"line_start":1939,"line_end":1939,"column_start":12,"column_end":28},"name":"is_perfect_power","qualname":"<Integer>::is_perfect_power","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is a perfect power.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":385228,"byte_end":385237,"line_start":1938,"line_end":1938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":385954,"byte_end":385971,"line_start":1960,"line_end":1960,"column_start":12,"column_end":29},"name":"is_perfect_square","qualname":"<Integer>::is_perfect_square","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is a perfect square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":385933,"byte_end":385942,"line_start":1959,"line_end":1959,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":386653,"byte_end":386668,"line_start":1981,"line_end":1981,"column_start":12,"column_end":27},"name":"is_power_of_two","qualname":"<Integer>::is_power_of_two","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the number is a power of two.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":386632,"byte_end":386641,"line_start":1980,"line_end":1980,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":387369,"byte_end":387373,"line_start":2001,"line_end":2001,"column_start":12,"column_end":16},"name":"cmp0","qualname":"<Integer>::cmp0","value":"fn (&self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Returns the same result as\n <code>self.[cmp][`cmp`](&amp;0.[into][`into`]())</code>, but is faster.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":387348,"byte_end":387357,"line_start":2000,"line_end":2000,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":387813,"byte_end":387820,"line_start":2018,"line_end":2018,"column_start":12,"column_end":19},"name":"cmp_abs","qualname":"<Integer>::cmp_abs","value":"fn (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compares the absolute values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":387792,"byte_end":387801,"line_start":2017,"line_end":2017,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":388662,"byte_end":388678,"line_start":2039,"line_end":2039,"column_start":12,"column_end":28},"name":"significant_bits","qualname":"<Integer>::significant_bits","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits required to represent the absolute\n value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":388641,"byte_end":388650,"line_start":2038,"line_end":2038,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":389944,"byte_end":389955,"line_start":2069,"line_end":2069,"column_start":12,"column_end":23},"name":"signed_bits","qualname":"<Integer>::signed_bits","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits required to represent the value\n using a two’s-complement representation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":389923,"byte_end":389932,"line_start":2068,"line_end":2068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":390363,"byte_end":390373,"line_start":2084,"line_end":2084,"column_start":12,"column_end":22},"name":"count_ones","qualname":"<Integer>::count_ones","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of one bits if the value ≥ 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":390342,"byte_end":390351,"line_start":2083,"line_end":2083,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":390970,"byte_end":390981,"line_start":2102,"line_end":2102,"column_start":12,"column_end":23},"name":"count_zeros","qualname":"<Integer>::count_zeros","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of zero bits if the value < 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":390949,"byte_end":390958,"line_start":2101,"line_end":2101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":391567,"byte_end":391576,"line_start":2119,"line_end":2119,"column_start":12,"column_end":21},"name":"find_zero","qualname":"<Integer>::find_zero","value":"fn (&self, start: u32) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the location of the first zero, starting at `start`.\n If the bit at location `start` is zero, returns `start`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":391546,"byte_end":391555,"line_start":2118,"line_end":2118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":392171,"byte_end":392179,"line_start":2136,"line_end":2136,"column_start":12,"column_end":20},"name":"find_one","qualname":"<Integer>::find_one","value":"fn (&self, start: u32) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the location of the first one, starting at `start`.\n If the bit at location `start` is one, returns `start`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":392150,"byte_end":392159,"line_start":2135,"line_end":2135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":392802,"byte_end":392809,"line_start":2156,"line_end":2156,"column_start":12,"column_end":19},"name":"set_bit","qualname":"<Integer>::set_bit","value":"fn (&mut self, index: u32, val: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the bit at location `index` to 1 if `val` is [`true`] or\n 0 if `val` is [`false`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":392781,"byte_end":392790,"line_start":2155,"line_end":2155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":393676,"byte_end":393683,"line_start":2185,"line_end":2185,"column_start":12,"column_end":19},"name":"get_bit","qualname":"<Integer>::get_bit","value":"fn (&self, index: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the bit at location `index` is 1 or\n [`false`] if the bit is 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":393655,"byte_end":393664,"line_start":2184,"line_end":2184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":394048,"byte_end":394058,"line_start":2200,"line_end":2200,"column_start":12,"column_end":22},"name":"toggle_bit","qualname":"<Integer>::toggle_bit","value":"fn (&mut self, index: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Toggles the bit at location `index`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":394027,"byte_end":394036,"line_start":2199,"line_end":2199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":394756,"byte_end":394768,"line_start":2223,"line_end":2223,"column_start":12,"column_end":24},"name":"hamming_dist","qualname":"<Integer>::hamming_dist","value":"fn (&self, other: &Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Retuns the Hamming distance if the two numbers have the same\n sign.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":394735,"byte_end":394744,"line_start":2222,"line_end":2222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":396170,"byte_end":396173,"line_start":2261,"line_end":2261,"column_start":12,"column_end":15},"name":"sum","qualname":"<Integer>::sum","value":"fn <'a, I> (values: I) -> SumIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Adds a list of [`Integer`] values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":396149,"byte_end":396158,"line_start":2260,"line_end":2260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":397610,"byte_end":397613,"line_start":2298,"line_end":2298,"column_start":12,"column_end":15},"name":"dot","qualname":"<Integer>::dot","value":"fn <'a, I> (values: I) -> DotIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Finds the dot product of a list of [`Integer`] value pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":397589,"byte_end":397598,"line_start":2297,"line_end":2297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":399103,"byte_end":399110,"line_start":2339,"line_end":2339,"column_start":12,"column_end":19},"name":"product","qualname":"<Integer>::product","value":"fn <'a, I> (values: I) -> ProductIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies a list of [`Integer`] values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":399082,"byte_end":399091,"line_start":2338,"line_end":2338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":399500,"byte_end":399503,"line_start":2357,"line_end":2357,"column_start":12,"column_end":15},"name":"abs","qualname":"<Integer>::abs","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":399479,"byte_end":399488,"line_start":2356,"line_end":2356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":399809,"byte_end":399816,"line_start":2373,"line_end":2373,"column_start":12,"column_end":19},"name":"abs_mut","qualname":"<Integer>::abs_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":399788,"byte_end":399797,"line_start":2372,"line_end":2372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":400678,"byte_end":400685,"line_start":2400,"line_end":2400,"column_start":12,"column_end":19},"name":"abs_ref","qualname":"<Integer>::abs_ref","value":"fn (&self) -> AbsIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":400657,"byte_end":400666,"line_start":2399,"line_end":2399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":401183,"byte_end":401189,"line_start":2419,"line_end":2419,"column_start":12,"column_end":18},"name":"signum","qualname":"<Integer>::signum","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":401162,"byte_end":401171,"line_start":2418,"line_end":2418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":401616,"byte_end":401626,"line_start":2439,"line_end":2439,"column_start":12,"column_end":22},"name":"signum_mut","qualname":"<Integer>::signum_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":401595,"byte_end":401604,"line_start":2438,"line_end":2438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":402614,"byte_end":402624,"line_start":2470,"line_end":2470,"column_start":12,"column_end":22},"name":"signum_ref","qualname":"<Integer>::signum_ref","value":"fn (&self) -> SignumIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":402593,"byte_end":402602,"line_start":2469,"line_end":2469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":403276,"byte_end":403281,"line_start":2494,"line_end":2494,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Integer>::clamp","value":"fn <Min, Max> (mut self, min: &Min, max: &Max) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":403255,"byte_end":403264,"line_start":2493,"line_end":2493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":404047,"byte_end":404056,"line_start":2521,"line_end":2521,"column_start":12,"column_end":21},"name":"clamp_mut","qualname":"<Integer>::clamp_mut","value":"fn <Min, Max> (&mut self, min: &Min, max: &Max) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":405652,"byte_end":405661,"line_start":2566,"line_end":2566,"column_start":12,"column_end":21},"name":"clamp_ref","qualname":"<Integer>::clamp_ref","value":"fn <'min, 'max, Min, Max> (&self, min: &'min Min, max: &'max Max) -> ClampIncomplete<'_, 'min, 'max, Min, Max>","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":405631,"byte_end":405640,"line_start":2565,"line_end":2565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":406355,"byte_end":406364,"line_start":2593,"line_end":2593,"column_start":12,"column_end":21},"name":"keep_bits","qualname":"<Integer>::keep_bits","value":"fn (mut self, n: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Keeps the <i>n</i> least significant bits only, producing\n a result that is greater or equal to 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":406334,"byte_end":406343,"line_start":2592,"line_end":2592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":406768,"byte_end":406781,"line_start":2610,"line_end":2610,"column_start":12,"column_end":25},"name":"keep_bits_mut","qualname":"<Integer>::keep_bits_mut","value":"fn (&mut self, n: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keeps the <i>n</i> least significant bits only, producing\n a result that is greater or equal to 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":406747,"byte_end":406756,"line_start":2609,"line_end":2609,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":407715,"byte_end":407728,"line_start":2636,"line_end":2636,"column_start":12,"column_end":25},"name":"keep_bits_ref","qualname":"<Integer>::keep_bits_ref","value":"fn (&self, n: u32) -> KeepBitsIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Keeps the <i>n</i> least significant bits only, producing\n a result that is greater or equal to 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":408326,"byte_end":408342,"line_start":2656,"line_end":2656,"column_start":12,"column_end":28},"name":"keep_signed_bits","qualname":"<Integer>::keep_signed_bits","value":"fn (mut self, n: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Keeps the <i>n</i> least significant bits only, producing\n a negative result if the <i>n</i>th least significant bit\n is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":408305,"byte_end":408314,"line_start":2655,"line_end":2655,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":408903,"byte_end":408923,"line_start":2677,"line_end":2677,"column_start":12,"column_end":32},"name":"keep_signed_bits_mut","qualname":"<Integer>::keep_signed_bits_mut","value":"fn (&mut self, n: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keeps the <i>n</i> least significant bits only, producing\n a negative result if the <i>n</i>th least significant bit\n is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":408882,"byte_end":408891,"line_start":2676,"line_end":2676,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":409916,"byte_end":409936,"line_start":2705,"line_end":2705,"column_start":12,"column_end":32},"name":"keep_signed_bits_ref","qualname":"<Integer>::keep_signed_bits_ref","value":"fn (&self, n: u32) -> KeepSignedBitsIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Keeps the <i>n</i> least significant bits only, producing\n a negative result if the <i>n</i>th least significant bit\n is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":409895,"byte_end":409904,"line_start":2704,"line_end":2704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":410466,"byte_end":410483,"line_start":2723,"line_end":2723,"column_start":12,"column_end":29},"name":"next_power_of_two","qualname":"<Integer>::next_power_of_two","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Finds the next power of two, or 1 if the number ≤ 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":410445,"byte_end":410454,"line_start":2722,"line_end":2722,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":410840,"byte_end":410861,"line_start":2739,"line_end":2739,"column_start":12,"column_end":33},"name":"next_power_of_two_mut","qualname":"<Integer>::next_power_of_two_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the next power of two, or 1 if the number ≤ 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":410819,"byte_end":410828,"line_start":2738,"line_end":2738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":411745,"byte_end":411766,"line_start":2765,"line_end":2765,"column_start":12,"column_end":33},"name":"next_power_of_two_ref","qualname":"<Integer>::next_power_of_two_ref","value":"fn (&self) -> NextPowerOfTwoIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the next power of two, or 1 if the number ≤ 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":411724,"byte_end":411733,"line_start":2764,"line_end":2764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":412398,"byte_end":412405,"line_start":2789,"line_end":2789,"column_start":12,"column_end":19},"name":"div_rem","qualname":"<Integer>::div_rem","value":"fn (mut self, mut divisor: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":412377,"byte_end":412386,"line_start":2788,"line_end":2788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":413193,"byte_end":413204,"line_start":2817,"line_end":2817,"column_start":12,"column_end":23},"name":"div_rem_mut","qualname":"<Integer>::div_rem_mut","value":"fn (&mut self, divisor: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":413172,"byte_end":413181,"line_start":2816,"line_end":2816,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":414679,"byte_end":414690,"line_start":2856,"line_end":2856,"column_start":12,"column_end":23},"name":"div_rem_ref","qualname":"<Integer>::div_rem_ref","value":"fn <'a> (&'a self, divisor: &'a Self) -> DivRemIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":414658,"byte_end":414667,"line_start":2855,"line_end":2855,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":415435,"byte_end":415447,"line_start":2884,"line_end":2884,"column_start":12,"column_end":24},"name":"div_rem_ceil","qualname":"<Integer>::div_rem_ceil","value":"fn (mut self, mut divisor: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded up.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":415414,"byte_end":415423,"line_start":2883,"line_end":2883,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":416301,"byte_end":416317,"line_start":2913,"line_end":2913,"column_start":12,"column_end":28},"name":"div_rem_ceil_mut","qualname":"<Integer>::div_rem_ceil_mut","value":"fn (&mut self, divisor: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded up.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":416280,"byte_end":416289,"line_start":2912,"line_end":2912,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":417852,"byte_end":417868,"line_start":2953,"line_end":2953,"column_start":12,"column_end":28},"name":"div_rem_ceil_ref","qualname":"<Integer>::div_rem_ceil_ref","value":"fn <'a> (&'a self, divisor: &'a Self) -> DivRemCeilIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded up.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":417831,"byte_end":417840,"line_start":2952,"line_end":2952,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":418598,"byte_end":418611,"line_start":2980,"line_end":2980,"column_start":12,"column_end":25},"name":"div_rem_floor","qualname":"<Integer>::div_rem_floor","value":"fn (mut self, mut divisor: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded down.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":418577,"byte_end":418586,"line_start":2979,"line_end":2979,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":419441,"byte_end":419458,"line_start":3008,"line_end":3008,"column_start":12,"column_end":29},"name":"div_rem_floor_mut","qualname":"<Integer>::div_rem_floor_mut","value":"fn (&mut self, divisor: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded down.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":419420,"byte_end":419429,"line_start":3007,"line_end":3007,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":420970,"byte_end":420987,"line_start":3047,"line_end":3047,"column_start":12,"column_end":29},"name":"div_rem_floor_ref","qualname":"<Integer>::div_rem_floor_ref","value":"fn <'a> (&'a self, divisor: &'a Self) -> DivRemFloorIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded down.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":420949,"byte_end":420958,"line_start":3046,"line_end":3046,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":422021,"byte_end":422034,"line_start":3080,"line_end":3080,"column_start":12,"column_end":25},"name":"div_rem_round","qualname":"<Integer>::div_rem_round","value":"fn (mut self, mut divisor: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded to the nearest\n integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":422000,"byte_end":422009,"line_start":3079,"line_end":3079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":422887,"byte_end":422904,"line_start":3108,"line_end":3108,"column_start":12,"column_end":29},"name":"div_rem_round_mut","qualname":"<Integer>::div_rem_round_mut","value":"fn (&mut self, divisor: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded to the nearest\n integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":422866,"byte_end":422875,"line_start":3107,"line_end":3107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":424537,"byte_end":424554,"line_start":3150,"line_end":3150,"column_start":12,"column_end":29},"name":"div_rem_round_ref","qualname":"<Integer>::div_rem_round_ref","value":"fn <'a> (&'a self, divisor: &'a Self) -> DivRemRoundIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Performs a division producing both the quotient and\n remainder, with the quotient rounded to the nearest\n integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":424516,"byte_end":424525,"line_start":3149,"line_end":3149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":425222,"byte_end":425233,"line_start":3175,"line_end":3175,"column_start":12,"column_end":23},"name":"div_rem_euc","qualname":"<Integer>::div_rem_euc","value":"fn (mut self, mut divisor: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Performs Euclidean division producing both the quotient\n and remainder, with a positive remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":425201,"byte_end":425210,"line_start":3174,"line_end":3174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":425998,"byte_end":426013,"line_start":3201,"line_end":3201,"column_start":12,"column_end":27},"name":"div_rem_euc_mut","qualname":"<Integer>::div_rem_euc_mut","value":"fn (&mut self, divisor: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs Euclidean division producing both the quotient\n and remainder, with a positive remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":425977,"byte_end":425986,"line_start":3200,"line_end":3200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":427460,"byte_end":427475,"line_start":3238,"line_end":3238,"column_start":12,"column_end":27},"name":"div_rem_euc_ref","qualname":"<Integer>::div_rem_euc_ref","value":"fn <'a> (&'a self, divisor: &'a Self) -> DivRemEucIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Performs Euclidan division producing both the quotient and\n remainder, with a positive remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":427439,"byte_end":427448,"line_start":3237,"line_end":3237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":428348,"byte_end":428353,"line_start":3270,"line_end":3270,"column_start":12,"column_end":17},"name":"mod_u","qualname":"<Integer>::mod_u","value":"fn (&self, modulo: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the modulo, or the remainder of Euclidean division by\n a [`u32`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":428327,"byte_end":428336,"line_start":3269,"line_end":3269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":428917,"byte_end":428926,"line_start":3292,"line_end":3292,"column_start":12,"column_end":21},"name":"div_exact","qualname":"<Integer>::div_exact","value":"fn (mut self, divisor: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Performs an exact division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":428896,"byte_end":428905,"line_start":3291,"line_end":3291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":429496,"byte_end":429509,"line_start":3315,"line_end":3315,"column_start":12,"column_end":25},"name":"div_exact_mut","qualname":"<Integer>::div_exact_mut","value":"fn (&mut self, divisor: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an exact division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":429475,"byte_end":429484,"line_start":3314,"line_end":3314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":430071,"byte_end":430085,"line_start":3336,"line_end":3336,"column_start":12,"column_end":26},"name":"div_exact_from","qualname":"<Integer>::div_exact_from","value":"fn (&mut self, dividend: &Integer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an exact division `dividend` / `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":431256,"byte_end":431269,"line_start":3369,"line_end":3369,"column_start":12,"column_end":25},"name":"div_exact_ref","qualname":"<Integer>::div_exact_ref","value":"fn <'a> (&'a self, divisor: &'a Self) -> DivExactIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Performs an exact division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":431235,"byte_end":431244,"line_start":3368,"line_end":3368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":431888,"byte_end":431899,"line_start":3394,"line_end":3394,"column_start":12,"column_end":23},"name":"div_exact_u","qualname":"<Integer>::div_exact_u","value":"fn (mut self, divisor: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Performs an exact division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":431867,"byte_end":431876,"line_start":3393,"line_end":3393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":432455,"byte_end":432470,"line_start":3417,"line_end":3417,"column_start":12,"column_end":27},"name":"div_exact_u_mut","qualname":"<Integer>::div_exact_u_mut","value":"fn (&mut self, divisor: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an exact division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":432434,"byte_end":432443,"line_start":3416,"line_end":3416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":433463,"byte_end":433478,"line_start":3445,"line_end":3445,"column_start":12,"column_end":27},"name":"div_exact_u_ref","qualname":"<Integer>::div_exact_u_ref","value":"fn (&self, divisor: u32) -> DivExactUIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Performs an exact division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":433442,"byte_end":433451,"line_start":3444,"line_end":3444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":434838,"byte_end":434844,"line_start":3483,"line_end":3483,"column_start":12,"column_end":18},"name":"invert","qualname":"<Integer>::invert","value":"fn (mut self, modulo: &Self) -> Result<Self, Self>","parent":null,"children":[],"decl_id":null,"docs":" Finds the inverse modulo `modulo` and returns\n [`Ok(inverse)`][`Ok`] if it exists, or\n [`Err(unchanged)`][`Err`] if the inverse does not exist.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":434817,"byte_end":434826,"line_start":3482,"line_end":3482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":435775,"byte_end":435785,"line_start":3512,"line_end":3512,"column_start":12,"column_end":22},"name":"invert_mut","qualname":"<Integer>::invert_mut","value":"fn (&mut self, modulo: &Self) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Finds the inverse modulo `modulo` if an inverse exists.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":435754,"byte_end":435763,"line_start":3511,"line_end":3511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":437425,"byte_end":437435,"line_start":3555,"line_end":3555,"column_start":12,"column_end":22},"name":"invert_ref","qualname":"<Integer>::invert_ref","value":"fn <'a> (&'a self, modulo: &'a Self) -> Option<InvertIncomplete<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Finds the inverse modulo `modulo` if an inverse exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":439143,"byte_end":439150,"line_start":3604,"line_end":3604,"column_start":12,"column_end":19},"name":"pow_mod","qualname":"<Integer>::pow_mod","value":"fn (mut self, exponent: &Self, modulo: &Self) -> Result<Self, Self>","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to the power of `exponent` modulo `modulo` and\n returns [`Ok(power)`][`Ok`] if an answer exists, or\n [`Err(unchanged)`][`Err`] if it does not.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":439122,"byte_end":439131,"line_start":3603,"line_end":3603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":440273,"byte_end":440284,"line_start":3638,"line_end":3638,"column_start":12,"column_end":23},"name":"pow_mod_mut","qualname":"<Integer>::pow_mod_mut","value":"fn (&mut self, exponent: &Self, modulo: &Self) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to the power of `exponent` modulo `modulo` if\n an answer exists.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":440252,"byte_end":440261,"line_start":3637,"line_end":3637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":442017,"byte_end":442028,"line_start":3681,"line_end":3681,"column_start":12,"column_end":23},"name":"pow_mod_ref","qualname":"<Integer>::pow_mod_ref","value":"fn <'a> (&'a self, exponent: &'a Self, modulo: &'a Self) -> Option<PowModIncomplete<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to the power of `exponent` modulo `modulo` if\n an answer exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":443827,"byte_end":443841,"line_start":3738,"line_end":3738,"column_start":12,"column_end":26},"name":"secure_pow_mod","qualname":"<Integer>::secure_pow_mod","value":"fn (mut self, exponent: &Self, modulo: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to the power of `exponent` modulo `modulo`,\n with resilience to side-channel attacks.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":443806,"byte_end":443815,"line_start":3737,"line_end":3737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":444961,"byte_end":444979,"line_start":3772,"line_end":3772,"column_start":12,"column_end":30},"name":"secure_pow_mod_mut","qualname":"<Integer>::secure_pow_mod_mut","value":"fn (&mut self, exponent: &Self, modulo: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to the power of `exponent` modulo `modulo`,\n with resilience to side-channel attacks.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":444940,"byte_end":444949,"line_start":3771,"line_end":3771,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":446607,"byte_end":446625,"line_start":3815,"line_end":3815,"column_start":12,"column_end":30},"name":"secure_pow_mod_ref","qualname":"<Integer>::secure_pow_mod_ref","value":"fn <'a> (&'a self, exponent: &'a Self, modulo: &'a Self) -> SecurePowModIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Raises a number to the power of `exponent` modulo `modulo`,\n with resilience to side-channel attacks.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":446586,"byte_end":446595,"line_start":3814,"line_end":3814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":447638,"byte_end":447645,"line_start":3848,"line_end":3848,"column_start":12,"column_end":19},"name":"u_pow_u","qualname":"<Integer>::u_pow_u","value":"fn (base: u32, exponent: u32) -> UPowUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Raises `base` to the power of `exponent`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":447617,"byte_end":447626,"line_start":3847,"line_end":3847,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":448649,"byte_end":448656,"line_start":3876,"line_end":3876,"column_start":12,"column_end":19},"name":"i_pow_u","qualname":"<Integer>::i_pow_u","value":"fn (base: i32, exponent: u32) -> IPowUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Raises `base` to the power of `exponent`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":448628,"byte_end":448637,"line_start":3875,"line_end":3875,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":449154,"byte_end":449158,"line_start":3896,"line_end":3896,"column_start":12,"column_end":16},"name":"root","qualname":"<Integer>::root","value":"fn (mut self, n: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>n</i>th root and truncates the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":449133,"byte_end":449142,"line_start":3895,"line_end":3895,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":449627,"byte_end":449635,"line_start":3917,"line_end":3917,"column_start":12,"column_end":20},"name":"root_mut","qualname":"<Integer>::root_mut","value":"fn (&mut self, n: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>n</i>th root and truncates the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":449606,"byte_end":449615,"line_start":3916,"line_end":3916,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":450465,"byte_end":450473,"line_start":3941,"line_end":3941,"column_start":12,"column_end":20},"name":"root_ref","qualname":"<Integer>::root_ref","value":"fn (&self, n: u32) -> RootIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>n</i>th root and truncates the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":450444,"byte_end":450453,"line_start":3940,"line_end":3940,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":451232,"byte_end":451240,"line_start":3968,"line_end":3968,"column_start":12,"column_end":20},"name":"root_rem","qualname":"<Integer>::root_rem","value":"fn (mut self, mut remainder: Self, n: u32) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>n</i>th root and returns the truncated\n root and the remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":451211,"byte_end":451220,"line_start":3967,"line_end":3967,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":452063,"byte_end":452075,"line_start":3997,"line_end":3997,"column_start":12,"column_end":24},"name":"root_rem_mut","qualname":"<Integer>::root_rem_mut","value":"fn (&mut self, remainder: &mut Self, n: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>n</i>th root and returns the truncated\n root and the remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":452042,"byte_end":452051,"line_start":3996,"line_end":3996,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":453805,"byte_end":453817,"line_start":4042,"line_end":4042,"column_start":12,"column_end":24},"name":"root_rem_ref","qualname":"<Integer>::root_rem_ref","value":"fn (&self, n: u32) -> RootRemIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>n</i>th root and returns the truncated\n root and the remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":453784,"byte_end":453793,"line_start":4041,"line_end":4041,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":454159,"byte_end":454165,"line_start":4057,"line_end":4057,"column_start":12,"column_end":18},"name":"square","qualname":"<Integer>::square","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":454138,"byte_end":454147,"line_start":4056,"line_end":4056,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":454467,"byte_end":454477,"line_start":4073,"line_end":4073,"column_start":12,"column_end":22},"name":"square_mut","qualname":"<Integer>::square_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":454446,"byte_end":454455,"line_start":4072,"line_end":4072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":455264,"byte_end":455274,"line_start":4097,"line_end":4097,"column_start":12,"column_end":22},"name":"square_ref","qualname":"<Integer>::square_ref","value":"fn (&self) -> SquareIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":455243,"byte_end":455252,"line_start":4096,"line_end":4096,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":455701,"byte_end":455705,"line_start":4116,"line_end":4116,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Integer>::sqrt","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root and truncates the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":455680,"byte_end":455689,"line_start":4115,"line_end":4115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":456107,"byte_end":456115,"line_start":4136,"line_end":4136,"column_start":12,"column_end":20},"name":"sqrt_mut","qualname":"<Integer>::sqrt_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root and truncates the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":456086,"byte_end":456095,"line_start":4135,"line_end":4135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":456928,"byte_end":456936,"line_start":4160,"line_end":4160,"column_start":12,"column_end":20},"name":"sqrt_ref","qualname":"<Integer>::sqrt_ref","value":"fn (&self) -> SqrtIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root and truncates the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":456907,"byte_end":456916,"line_start":4159,"line_end":4159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":457561,"byte_end":457569,"line_start":4185,"line_end":4185,"column_start":12,"column_end":20},"name":"sqrt_rem","qualname":"<Integer>::sqrt_rem","value":"fn (mut self, mut remainder: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root and the remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":457540,"byte_end":457549,"line_start":4184,"line_end":4184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":458258,"byte_end":458270,"line_start":4212,"line_end":4212,"column_start":12,"column_end":24},"name":"sqrt_rem_mut","qualname":"<Integer>::sqrt_rem_mut","value":"fn (&mut self, remainder: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root and the remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":458237,"byte_end":458246,"line_start":4211,"line_end":4211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":459919,"byte_end":459931,"line_start":4256,"line_end":4256,"column_start":12,"column_end":24},"name":"sqrt_rem_ref","qualname":"<Integer>::sqrt_rem_ref","value":"fn (&self) -> SqrtRemIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root and the remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":459898,"byte_end":459907,"line_start":4255,"line_end":4255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":460779,"byte_end":460796,"line_start":4279,"line_end":4279,"column_start":12,"column_end":29},"name":"is_probably_prime","qualname":"<Integer>::is_probably_prime","value":"fn (&self, reps: u32) -> IsPrime","parent":null,"children":[],"decl_id":null,"docs":" Determines wheter a number is prime.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":460758,"byte_end":460767,"line_start":4278,"line_end":4278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":461440,"byte_end":461450,"line_start":4301,"line_end":4301,"column_start":12,"column_end":22},"name":"next_prime","qualname":"<Integer>::next_prime","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Identifies primes using a probabilistic algorithm; the\n chance of a composite passing will be extremely small.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":461419,"byte_end":461428,"line_start":4300,"line_end":4300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":461874,"byte_end":461888,"line_start":4318,"line_end":4318,"column_start":12,"column_end":26},"name":"next_prime_mut","qualname":"<Integer>::next_prime_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Identifies primes using a probabilistic algorithm; the\n chance of a composite passing will be extremely small.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":461853,"byte_end":461862,"line_start":4317,"line_end":4317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":462842,"byte_end":462856,"line_start":4345,"line_end":4345,"column_start":12,"column_end":26},"name":"next_prime_ref","qualname":"<Integer>::next_prime_ref","value":"fn (&self) -> NextPrimeIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Identifies primes using a probabilistic algorithm; the\n chance of a composite passing will be extremely small.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":462821,"byte_end":462830,"line_start":4344,"line_end":4344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":463586,"byte_end":463589,"line_start":4373,"line_end":4373,"column_start":12,"column_end":15},"name":"gcd","qualname":"<Integer>::gcd","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":463565,"byte_end":463574,"line_start":4372,"line_end":4372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":464280,"byte_end":464287,"line_start":4402,"line_end":4402,"column_start":12,"column_end":19},"name":"gcd_mut","qualname":"<Integer>::gcd_mut","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":464259,"byte_end":464268,"line_start":4401,"line_end":4401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":465281,"byte_end":465288,"line_start":4432,"line_end":4432,"column_start":12,"column_end":19},"name":"gcd_ref","qualname":"<Integer>::gcd_ref","value":"fn <'a> (&'a self, other: &'a Self) -> GcdIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":465260,"byte_end":465269,"line_start":4431,"line_end":4431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":465985,"byte_end":465990,"line_start":4460,"line_end":4460,"column_start":12,"column_end":17},"name":"gcd_u","qualname":"<Integer>::gcd_u","value":"fn (mut self, other: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":465964,"byte_end":465973,"line_start":4459,"line_end":4459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":466596,"byte_end":466605,"line_start":4486,"line_end":4486,"column_start":12,"column_end":21},"name":"gcd_u_mut","qualname":"<Integer>::gcd_u_mut","value":"fn (&mut self, other: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":466575,"byte_end":466584,"line_start":4485,"line_end":4485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":468139,"byte_end":468148,"line_start":4525,"line_end":4525,"column_start":12,"column_end":21},"name":"gcd_u_ref","qualname":"<Integer>::gcd_u_ref","value":"fn (&self, other: u32) -> GcdUIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":468118,"byte_end":468127,"line_start":4524,"line_end":4524,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":469727,"byte_end":469740,"line_start":4569,"line_end":4569,"column_start":12,"column_end":25},"name":"gcd_cofactors","qualname":"<Integer>::gcd_cofactors","value":"fn (mut self, mut other: Self, mut rop: Self) -> (Self, Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor (GCD) of the two inputs\n (`self` and `other`), and two cofactors to obtain the GCD\n from the two inputs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":469706,"byte_end":469715,"line_start":4568,"line_end":4568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":471490,"byte_end":471507,"line_start":4615,"line_end":4615,"column_start":12,"column_end":29},"name":"gcd_cofactors_mut","qualname":"<Integer>::gcd_cofactors_mut","value":"fn (&mut self, other: &mut Self, rop: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor (GCD) of the two inputs\n (`self` and `other`), and two cofactors to obtain the GCD\n from the two inputs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":471469,"byte_end":471478,"line_start":4614,"line_end":4614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":475441,"byte_end":475458,"line_start":4714,"line_end":4714,"column_start":12,"column_end":29},"name":"gcd_cofactors_ref","qualname":"<Integer>::gcd_cofactors_ref","value":"fn <'a> (&'a self, other: &'a Self) -> GcdIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the greatest common divisor (GCD) of the two inputs\n (`self` and `other`), and two cofactors to obtain the GCD\n from the two inputs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":475420,"byte_end":475429,"line_start":4713,"line_end":4713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":476138,"byte_end":476141,"line_start":4741,"line_end":4741,"column_start":12,"column_end":15},"name":"lcm","qualname":"<Integer>::lcm","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Finds the least common multiple.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":476117,"byte_end":476126,"line_start":4740,"line_end":4740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":476743,"byte_end":476750,"line_start":4766,"line_end":4766,"column_start":12,"column_end":19},"name":"lcm_mut","qualname":"<Integer>::lcm_mut","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the least common multiple.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":476722,"byte_end":476731,"line_start":4765,"line_end":4765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":477751,"byte_end":477758,"line_start":4796,"line_end":4796,"column_start":12,"column_end":19},"name":"lcm_ref","qualname":"<Integer>::lcm_ref","value":"fn <'a> (&'a self, other: &'a Self) -> LcmIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the least common multiple.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":477730,"byte_end":477739,"line_start":4795,"line_end":4795,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":478371,"byte_end":478376,"line_start":4821,"line_end":4821,"column_start":12,"column_end":17},"name":"lcm_u","qualname":"<Integer>::lcm_u","value":"fn (mut self, other: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Finds the least common multiple.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":478350,"byte_end":478359,"line_start":4820,"line_end":4820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":478911,"byte_end":478920,"line_start":4844,"line_end":4844,"column_start":12,"column_end":21},"name":"lcm_u_mut","qualname":"<Integer>::lcm_u_mut","value":"fn (&mut self, other: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the least common multiple.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":478890,"byte_end":478899,"line_start":4843,"line_end":4843,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":479890,"byte_end":479899,"line_start":4873,"line_end":4873,"column_start":12,"column_end":21},"name":"lcm_u_ref","qualname":"<Integer>::lcm_u_ref","value":"fn (&self, other: u32) -> LcmUIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the least common multiple.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":479869,"byte_end":479878,"line_start":4872,"line_end":4872,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":480442,"byte_end":480448,"line_start":4895,"line_end":4895,"column_start":12,"column_end":18},"name":"jacobi","qualname":"<Integer>::jacobi","value":"fn (&self, n: &Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Jacobi symbol (`self`/<i>n</i>).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":480421,"byte_end":480430,"line_start":4894,"line_end":4894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":480906,"byte_end":480914,"line_start":4912,"line_end":4912,"column_start":12,"column_end":20},"name":"legendre","qualname":"<Integer>::legendre","value":"fn (&self, p: &Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Legendre symbol (`self`/<i>p</i>).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":480885,"byte_end":480894,"line_start":4911,"line_end":4911,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":481474,"byte_end":481483,"line_start":4932,"line_end":4932,"column_start":12,"column_end":21},"name":"kronecker","qualname":"<Integer>::kronecker","value":"fn (&self, n: &Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Jacobi symbol (`self`/<i>n</i>) with the\n Kronecker extension.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":481453,"byte_end":481462,"line_start":4931,"line_end":4931,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":482015,"byte_end":482028,"line_start":4950,"line_end":4950,"column_start":12,"column_end":25},"name":"remove_factor","qualname":"<Integer>::remove_factor","value":"fn (mut self, factor: &Self) -> (Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Removes all occurrences of `factor`, and returns the number of\n occurrences removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":481994,"byte_end":482003,"line_start":4949,"line_end":4949,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":482567,"byte_end":482584,"line_start":4969,"line_end":4969,"column_start":12,"column_end":29},"name":"remove_factor_mut","qualname":"<Integer>::remove_factor_mut","value":"fn (&mut self, factor: &Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Removes all occurrences of `factor`, and returns the number of\n occurrences removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":482546,"byte_end":482555,"line_start":4968,"line_end":4968,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":483211,"byte_end":483228,"line_start":4990,"line_end":4990,"column_start":12,"column_end":29},"name":"remove_factor_ref","qualname":"<Integer>::remove_factor_ref","value":"fn <'a> (&'a self, factor: &'a Self) -> RemoveFactorIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes all occurrences of `factor`, and counts the number of\n occurrences removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":483190,"byte_end":483199,"line_start":4989,"line_end":4989,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":484212,"byte_end":484221,"line_start":5019,"line_end":5019,"column_start":12,"column_end":21},"name":"factorial","qualname":"<Integer>::factorial","value":"fn (n: u32) -> FactorialIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the factorial of <i>n</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":484191,"byte_end":484200,"line_start":5018,"line_end":5018,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":485098,"byte_end":485109,"line_start":5045,"line_end":5045,"column_start":12,"column_end":23},"name":"factorial_2","qualname":"<Integer>::factorial_2","value":"fn (n: u32) -> Factorial2Incomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the double factorial of <i>n</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":485077,"byte_end":485086,"line_start":5044,"line_end":5044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":485993,"byte_end":486004,"line_start":5071,"line_end":5071,"column_start":12,"column_end":23},"name":"factorial_m","qualname":"<Integer>::factorial_m","value":"fn (n: u32, m: u32) -> FactorialMIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>m</i>-multi factorial of <i>n</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":485972,"byte_end":485981,"line_start":5070,"line_end":5070,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":486878,"byte_end":486887,"line_start":5097,"line_end":5097,"column_start":12,"column_end":21},"name":"primorial","qualname":"<Integer>::primorial","value":"fn (n: u32) -> PrimorialIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the primorial of <i>n</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":486857,"byte_end":486866,"line_start":5096,"line_end":5096,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":487257,"byte_end":487265,"line_start":5113,"line_end":5113,"column_start":12,"column_end":20},"name":"binomial","qualname":"<Integer>::binomial","value":"fn (mut self, k: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the binomial coefficient over <i>k</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":487236,"byte_end":487245,"line_start":5112,"line_end":5112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":487635,"byte_end":487647,"line_start":5130,"line_end":5130,"column_start":12,"column_end":24},"name":"binomial_mut","qualname":"<Integer>::binomial_mut","value":"fn (&mut self, k: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the binomial coefficient over <i>k</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":487614,"byte_end":487623,"line_start":5129,"line_end":5129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":488502,"byte_end":488514,"line_start":5155,"line_end":5155,"column_start":12,"column_end":24},"name":"binomial_ref","qualname":"<Integer>::binomial_ref","value":"fn (&self, k: u32) -> BinomialIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the binomial coefficient over <i>k</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":488481,"byte_end":488490,"line_start":5154,"line_end":5154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":489424,"byte_end":489434,"line_start":5181,"line_end":5181,"column_start":12,"column_end":22},"name":"binomial_u","qualname":"<Integer>::binomial_u","value":"fn (n: u32, k: u32) -> BinomialUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the binomial coefficient <i>n</i> over <i>k</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":489403,"byte_end":489412,"line_start":5180,"line_end":5180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":490574,"byte_end":490583,"line_start":5212,"line_end":5212,"column_start":12,"column_end":21},"name":"fibonacci","qualname":"<Integer>::fibonacci","value":"fn (n: u32) -> FibonacciIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the Fibonacci number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":490553,"byte_end":490562,"line_start":5211,"line_end":5211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":492292,"byte_end":492303,"line_start":5256,"line_end":5256,"column_start":12,"column_end":23},"name":"fibonacci_2","qualname":"<Integer>::fibonacci_2","value":"fn (n: u32) -> FibonacciIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes a Fibonacci number, and the previous Fibonacci\n number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":492271,"byte_end":492280,"line_start":5255,"line_end":5255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":493408,"byte_end":493413,"line_start":5287,"line_end":5287,"column_start":12,"column_end":17},"name":"lucas","qualname":"<Integer>::lucas","value":"fn (n: u32) -> LucasIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the Lucas number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":493387,"byte_end":493396,"line_start":5286,"line_end":5286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":495047,"byte_end":495054,"line_start":5329,"line_end":5329,"column_start":12,"column_end":19},"name":"lucas_2","qualname":"<Integer>::lucas_2","value":"fn (n: u32) -> LucasIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes a Lucas number, and the previous Lucas number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":495026,"byte_end":495035,"line_start":5328,"line_end":5328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":496110,"byte_end":496121,"line_start":5358,"line_end":5358,"column_start":12,"column_end":23},"name":"random_bits","qualname":"<Integer>::random_bits","value":"fn (bits: u32, rng: &mut dyn MutRandState) -> RandomBitsIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number with a specified maximum number of\n bits.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":495125,"byte_end":495149,"line_start":5333,"line_end":5333,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":496089,"byte_end":496098,"line_start":5357,"line_end":5357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":496781,"byte_end":496793,"line_start":5381,"line_end":5381,"column_start":12,"column_end":24},"name":"random_below","qualname":"<Integer>::random_below","value":"fn (mut self, rng: &mut dyn MutRandState) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a non-negative random number below the given\n boundary value.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":496241,"byte_end":496265,"line_start":5362,"line_end":5362,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":496760,"byte_end":496769,"line_start":5380,"line_end":5380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":497430,"byte_end":497446,"line_start":5405,"line_end":5405,"column_start":12,"column_end":28},"name":"random_below_mut","qualname":"<Integer>::random_below_mut","value":"fn (&mut self, rng: &mut dyn MutRandState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generates a non-negative random number below the given\n boundary value.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":496902,"byte_end":496926,"line_start":5386,"line_end":5386,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":497409,"byte_end":497418,"line_start":5404,"line_end":5404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":498615,"byte_end":498631,"line_start":5438,"line_end":5438,"column_start":12,"column_end":28},"name":"random_below_ref","qualname":"<Integer>::random_below_ref","value":"fn <'a> (&'a self, rng: &'a mut dyn MutRandState) -> RandomBelowIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Generates a non-negative random number below the given\n boundary value.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":497552,"byte_end":497576,"line_start":5409,"line_end":5409,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":498594,"byte_end":498603,"line_start":5437,"line_end":5437,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11175},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":498855,"byte_end":498868,"line_start":5450,"line_end":5450,"column_start":12,"column_end":25},"name":"SumIncomplete","qualname":"::integer::big::SumIncomplete","value":"SumIncomplete {  }","parent":null,"children":[{"krate":0,"index":11178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11183},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":500194,"byte_end":500207,"line_start":5513,"line_end":5513,"column_start":12,"column_end":25},"name":"DotIncomplete","qualname":"::integer::big::DotIncomplete","value":"DotIncomplete {  }","parent":null,"children":[{"krate":0,"index":11186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11191},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":501727,"byte_end":501744,"line_start":5577,"line_end":5577,"column_start":12,"column_end":29},"name":"ProductIncomplete","qualname":"::integer::big::ProductIncomplete","value":"ProductIncomplete {  }","parent":null,"children":[{"krate":0,"index":11194}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11201},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":503792,"byte_end":503805,"line_start":5662,"line_end":5662,"column_start":44,"column_end":57},"name":"AbsIncomplete","qualname":"::integer::big::AbsIncomplete","value":"AbsIncomplete {  }","parent":null,"children":[{"krate":0,"index":11203}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11211},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":503857,"byte_end":503873,"line_start":5663,"line_end":5663,"column_start":47,"column_end":63},"name":"SignumIncomplete","qualname":"::integer::big::SignumIncomplete","value":"SignumIncomplete {  }","parent":null,"children":[{"krate":0,"index":11213}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11219},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":503908,"byte_end":503923,"line_start":5666,"line_end":5666,"column_start":12,"column_end":27},"name":"ClampIncomplete","qualname":"::integer::big::ClampIncomplete","value":"ClampIncomplete {  }","parent":null,"children":[{"krate":0,"index":11227},{"krate":0,"index":11228},{"krate":0,"index":11229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11241},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505134,"byte_end":505152,"line_start":5705,"line_end":5705,"column_start":52,"column_end":70},"name":"KeepBitsIncomplete","qualname":"::integer::big::KeepBitsIncomplete","value":"KeepBitsIncomplete {  }","parent":null,"children":[{"krate":0,"index":11243},{"krate":0,"index":11244}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11252},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505222,"byte_end":505246,"line_start":5706,"line_end":5706,"column_start":57,"column_end":81},"name":"KeepSignedBitsIncomplete","qualname":"::integer::big::KeepSignedBitsIncomplete","value":"KeepSignedBitsIncomplete {  }","parent":null,"children":[{"krate":0,"index":11254},{"krate":0,"index":11255}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11263},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505315,"byte_end":505339,"line_start":5707,"line_end":5707,"column_start":56,"column_end":80},"name":"NextPowerOfTwoIncomplete","qualname":"::integer::big::NextPowerOfTwoIncomplete","value":"NextPowerOfTwoIncomplete {  }","parent":null,"children":[{"krate":0,"index":11265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11275},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505394,"byte_end":505410,"line_start":5708,"line_end":5708,"column_start":50,"column_end":66},"name":"DivRemIncomplete","qualname":"::integer::big::DivRemIncomplete","value":"DivRemIncomplete {  }","parent":null,"children":[{"krate":0,"index":11277},{"krate":0,"index":11278}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11288},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505474,"byte_end":505494,"line_start":5709,"line_end":5709,"column_start":50,"column_end":70},"name":"DivRemCeilIncomplete","qualname":"::integer::big::DivRemCeilIncomplete","value":"DivRemCeilIncomplete {  }","parent":null,"children":[{"krate":0,"index":11290},{"krate":0,"index":11291}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11301},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505558,"byte_end":505579,"line_start":5710,"line_end":5710,"column_start":50,"column_end":71},"name":"DivRemFloorIncomplete","qualname":"::integer::big::DivRemFloorIncomplete","value":"DivRemFloorIncomplete {  }","parent":null,"children":[{"krate":0,"index":11303},{"krate":0,"index":11304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11314},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505643,"byte_end":505664,"line_start":5711,"line_end":5711,"column_start":50,"column_end":71},"name":"DivRemRoundIncomplete","qualname":"::integer::big::DivRemRoundIncomplete","value":"DivRemRoundIncomplete {  }","parent":null,"children":[{"krate":0,"index":11316},{"krate":0,"index":11317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11327},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505728,"byte_end":505747,"line_start":5712,"line_end":5712,"column_start":50,"column_end":69},"name":"DivRemEucIncomplete","qualname":"::integer::big::DivRemEucIncomplete","value":"DivRemEucIncomplete {  }","parent":null,"children":[{"krate":0,"index":11329},{"krate":0,"index":11330}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11338},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505810,"byte_end":505828,"line_start":5713,"line_end":5713,"column_start":49,"column_end":67},"name":"DivExactIncomplete","qualname":"::integer::big::DivExactIncomplete","value":"DivExactIncomplete {  }","parent":null,"children":[{"krate":0,"index":11340},{"krate":0,"index":11341}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11349},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505895,"byte_end":505914,"line_start":5714,"line_end":5714,"column_start":53,"column_end":72},"name":"DivExactUIncomplete","qualname":"::integer::big::DivExactUIncomplete","value":"DivExactUIncomplete {  }","parent":null,"children":[{"krate":0,"index":11351},{"krate":0,"index":11352}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11358},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":505963,"byte_end":505979,"line_start":5717,"line_end":5717,"column_start":12,"column_end":28},"name":"PowModIncomplete","qualname":"::integer::big::PowModIncomplete","value":"PowModIncomplete {  }","parent":null,"children":[{"krate":0,"index":11360},{"krate":0,"index":11361},{"krate":0,"index":11362},{"krate":0,"index":11363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":507487,"byte_end":507509,"line_start":5762,"line_end":5762,"column_start":12,"column_end":34},"name":"SecurePowModIncomplete","qualname":"::integer::big::SecurePowModIncomplete","value":"SecurePowModIncomplete {  }","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11371},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":507916,"byte_end":507931,"line_start":5777,"line_end":5777,"column_start":50,"column_end":65},"name":"UPowUIncomplete","qualname":"::integer::big::UPowUIncomplete","value":"UPowUIncomplete {  }","parent":null,"children":[{"krate":0,"index":11372},{"krate":0,"index":11373}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11380},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508012,"byte_end":508027,"line_start":5778,"line_end":5778,"column_start":50,"column_end":65},"name":"IPowUIncomplete","qualname":"::integer::big::IPowUIncomplete","value":"IPowUIncomplete {  }","parent":null,"children":[{"krate":0,"index":11381},{"krate":0,"index":11382}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11389},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508103,"byte_end":508117,"line_start":5779,"line_end":5779,"column_start":45,"column_end":59},"name":"RootIncomplete","qualname":"::integer::big::RootIncomplete","value":"RootIncomplete {  }","parent":null,"children":[{"krate":0,"index":11391},{"krate":0,"index":11392}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11402},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508180,"byte_end":508197,"line_start":5780,"line_end":5780,"column_start":50,"column_end":67},"name":"RootRemIncomplete","qualname":"::integer::big::RootRemIncomplete","value":"RootRemIncomplete {  }","parent":null,"children":[{"krate":0,"index":11404},{"krate":0,"index":11405}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11413},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508257,"byte_end":508273,"line_start":5781,"line_end":5781,"column_start":47,"column_end":63},"name":"SquareIncomplete","qualname":"::integer::big::SquareIncomplete","value":"SquareIncomplete {  }","parent":null,"children":[{"krate":0,"index":11415}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11423},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508323,"byte_end":508337,"line_start":5782,"line_end":5782,"column_start":45,"column_end":59},"name":"SqrtIncomplete","qualname":"::integer::big::SqrtIncomplete","value":"SqrtIncomplete {  }","parent":null,"children":[{"krate":0,"index":11425}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11435},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508392,"byte_end":508409,"line_start":5783,"line_end":5783,"column_start":50,"column_end":67},"name":"SqrtRemIncomplete","qualname":"::integer::big::SqrtRemIncomplete","value":"SqrtRemIncomplete {  }","parent":null,"children":[{"krate":0,"index":11437}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11445},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508464,"byte_end":508483,"line_start":5784,"line_end":5784,"column_start":50,"column_end":69},"name":"NextPrimeIncomplete","qualname":"::integer::big::NextPrimeIncomplete","value":"NextPrimeIncomplete {  }","parent":null,"children":[{"krate":0,"index":11447}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11455},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508532,"byte_end":508545,"line_start":5785,"line_end":5785,"column_start":44,"column_end":57},"name":"GcdIncomplete","qualname":"::integer::big::GcdIncomplete","value":"GcdIncomplete {  }","parent":null,"children":[{"krate":0,"index":11457},{"krate":0,"index":11458}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11466},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508605,"byte_end":508619,"line_start":5786,"line_end":5786,"column_start":48,"column_end":62},"name":"GcdUIncomplete","qualname":"::integer::big::GcdUIncomplete","value":"GcdUIncomplete {  }","parent":null,"children":[{"krate":0,"index":11468},{"krate":0,"index":11469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11481},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510042,"byte_end":510055,"line_start":5838,"line_end":5838,"column_start":44,"column_end":57},"name":"LcmIncomplete","qualname":"::integer::big::LcmIncomplete","value":"LcmIncomplete {  }","parent":null,"children":[{"krate":0,"index":11483},{"krate":0,"index":11484}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11492},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510115,"byte_end":510129,"line_start":5839,"line_end":5839,"column_start":48,"column_end":62},"name":"LcmUIncomplete","qualname":"::integer::big::LcmUIncomplete","value":"LcmUIncomplete {  }","parent":null,"children":[{"krate":0,"index":11494},{"krate":0,"index":11495}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11501},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510176,"byte_end":510192,"line_start":5842,"line_end":5842,"column_start":12,"column_end":28},"name":"InvertIncomplete","qualname":"::integer::big::InvertIncomplete","value":"InvertIncomplete {  }","parent":null,"children":[{"krate":0,"index":11503},{"krate":0,"index":11504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11508},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510731,"byte_end":510753,"line_start":5864,"line_end":5864,"column_start":12,"column_end":34},"name":"RemoveFactorIncomplete","qualname":"::integer::big::RemoveFactorIncomplete","value":"RemoveFactorIncomplete {  }","parent":null,"children":[{"krate":0,"index":11510},{"krate":0,"index":11511}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11517},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":511520,"byte_end":511539,"line_start":5892,"line_end":5892,"column_start":47,"column_end":66},"name":"FactorialIncomplete","qualname":"::integer::big::FactorialIncomplete","value":"FactorialIncomplete {  }","parent":null,"children":[{"krate":0,"index":11518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11525},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":511602,"byte_end":511622,"line_start":5893,"line_end":5893,"column_start":50,"column_end":70},"name":"Factorial2Incomplete","qualname":"::integer::big::Factorial2Incomplete","value":"Factorial2Incomplete {  }","parent":null,"children":[{"krate":0,"index":11526}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11533},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":511685,"byte_end":511705,"line_start":5894,"line_end":5894,"column_start":50,"column_end":70},"name":"FactorialMIncomplete","qualname":"::integer::big::FactorialMIncomplete","value":"FactorialMIncomplete {  }","parent":null,"children":[{"krate":0,"index":11534},{"krate":0,"index":11535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11542},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":511779,"byte_end":511798,"line_start":5895,"line_end":5895,"column_start":53,"column_end":72},"name":"PrimorialIncomplete","qualname":"::integer::big::PrimorialIncomplete","value":"PrimorialIncomplete {  }","parent":null,"children":[{"krate":0,"index":11543}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11550},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":511858,"byte_end":511876,"line_start":5896,"line_end":5896,"column_start":47,"column_end":65},"name":"BinomialIncomplete","qualname":"::integer::big::BinomialIncomplete","value":"BinomialIncomplete {  }","parent":null,"children":[{"krate":0,"index":11552},{"krate":0,"index":11553}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11561},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":511938,"byte_end":511957,"line_start":5897,"line_end":5897,"column_start":49,"column_end":68},"name":"BinomialUIncomplete","qualname":"::integer::big::BinomialUIncomplete","value":"BinomialUIncomplete {  }","parent":null,"children":[{"krate":0,"index":11562},{"krate":0,"index":11563}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11570},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":512025,"byte_end":512044,"line_start":5898,"line_end":5898,"column_start":47,"column_end":66},"name":"FibonacciIncomplete","qualname":"::integer::big::FibonacciIncomplete","value":"FibonacciIncomplete {  }","parent":null,"children":[{"krate":0,"index":11571}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11580},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":512605,"byte_end":512620,"line_start":5918,"line_end":5918,"column_start":50,"column_end":65},"name":"LucasIncomplete","qualname":"::integer::big::LucasIncomplete","value":"LucasIncomplete {  }","parent":null,"children":[{"krate":0,"index":11581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513151,"byte_end":513171,"line_start":5939,"line_end":5939,"column_start":12,"column_end":32},"name":"RandomBitsIncomplete","qualname":"::integer::big::RandomBitsIncomplete","value":"RandomBitsIncomplete {  }","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513115,"byte_end":513139,"line_start":5938,"line_end":5938,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513758,"byte_end":513779,"line_start":5965,"line_end":5965,"column_start":12,"column_end":33},"name":"RandomBelowIncomplete","qualname":"::integer::big::RandomBelowIncomplete","value":"RandomBelowIncomplete {  }","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513722,"byte_end":513746,"line_start":5964,"line_end":5964,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":11588},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514351,"byte_end":514364,"line_start":5990,"line_end":5990,"column_start":12,"column_end":25},"name":"BorrowInteger","qualname":"::integer::big::BorrowInteger","value":"BorrowInteger {  }","parent":null,"children":[{"krate":0,"index":11590},{"krate":0,"index":11591}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514319,"byte_end":514339,"line_start":5989,"line_end":5989,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":11603},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":516149,"byte_end":516164,"line_start":6051,"line_end":6051,"column_start":12,"column_end":27},"name":"ParseIncomplete","qualname":"::integer::big::ParseIncomplete","value":"ParseIncomplete {  }","parent":null,"children":[{"krate":0,"index":11604},{"krate":0,"index":11605},{"krate":0,"index":11606}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11611},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":518959,"byte_end":518976,"line_start":6156,"line_end":6156,"column_start":12,"column_end":29},"name":"ParseIntegerError","qualname":"::integer::big::ParseIntegerError","value":"ParseIntegerError {  }","parent":null,"children":[{"krate":0,"index":11612}],"decl_id":null,"docs":"An error which can be returned when parsing an [`Integer`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11623},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":520353,"byte_end":520355,"line_start":6214,"line_end":6214,"column_start":5,"column_end":7},"name":"No","qualname":"::integer::big::IsPrime::No","value":"IsPrime::No","parent":{"krate":0,"index":11622},"children":[],"decl_id":null,"docs":" The number is definitely not prime.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11625},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":520399,"byte_end":520407,"line_start":6216,"line_end":6216,"column_start":5,"column_end":13},"name":"Probably","qualname":"::integer::big::IsPrime::Probably","value":"IsPrime::Probably","parent":{"krate":0,"index":11622},"children":[],"decl_id":null,"docs":" The number is probably prime.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11627},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":520453,"byte_end":520456,"line_start":6218,"line_end":6218,"column_start":5,"column_end":8},"name":"Yes","qualname":"::integer::big::IsPrime::Yes","value":"IsPrime::Yes","parent":{"krate":0,"index":11622},"children":[],"decl_id":null,"docs":" The number is definitely prime.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11622},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":520295,"byte_end":520302,"line_start":6212,"line_end":6212,"column_start":10,"column_end":17},"name":"IsPrime","qualname":"::integer::big::IsPrime","value":"IsPrime::{No, Probably, Yes}","parent":null,"children":[{"krate":0,"index":11623},{"krate":0,"index":11625},{"krate":0,"index":11627}],"decl_id":null,"docs":"Whether a number is prime.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":522183,"byte_end":522200,"line_start":6251,"line_end":6251,"column_start":11,"column_end":28},"name":"UnsignedPrimitive","qualname":"::integer::big::UnsignedPrimitive","value":"UnsignedPrimitive: SealedUnsignedPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Conversions between [`Integer`] and a [slice] of digits of this\n type are provided.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":522241,"byte_end":522265,"line_start":6253,"line_end":6253,"column_start":12,"column_end":36},"name":"PrivateUnsignedPrimitive","qualname":"::integer::big::PrivateUnsignedPrimitive","value":"PrivateUnsignedPrimitive {  }","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":522341,"byte_end":522364,"line_start":6259,"line_end":6259,"column_start":18,"column_end":41},"name":"SealedUnsignedPrimitive","qualname":"::integer::big::SealedUnsignedPrimitive","value":"SealedUnsignedPrimitive: Sized","parent":null,"children":[{"krate":0,"index":1211}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":522384,"byte_end":522391,"line_start":6260,"line_end":6260,"column_start":11,"column_end":18},"name":"PRIVATE","qualname":"::integer::big::SealedUnsignedPrimitive::PRIVATE","value":"PrivateUnsignedPrimitive","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11800},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":551782,"byte_end":551803,"line_start":617,"line_end":617,"column_start":5,"column_end":26},"name":"DivRoundingIncomplete","qualname":"::integer::division::DivRoundingIncomplete","value":"DivRoundingIncomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":11802},{"krate":0,"index":11806},{"krate":0,"index":11810},{"krate":0,"index":11814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11870},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552100,"byte_end":552121,"line_start":624,"line_end":624,"column_start":5,"column_end":26},"name":"RemRoundingIncomplete","qualname":"::integer::division::RemRoundingIncomplete","value":"RemRoundingIncomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":11872},{"krate":0,"index":11876},{"krate":0,"index":11880},{"krate":0,"index":11884}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12701},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552529,"byte_end":552552,"line_start":633,"line_end":633,"column_start":9,"column_end":32},"name":"DivRoundingI8Incomplete","qualname":"::integer::division::DivRoundingI8Incomplete","value":"DivRoundingI8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12703},{"krate":0,"index":12707},{"krate":0,"index":12711},{"krate":0,"index":12715}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12722},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552554,"byte_end":552581,"line_start":633,"line_end":633,"column_start":34,"column_end":61},"name":"DivRoundingFromI8Incomplete","qualname":"::integer::division::DivRoundingFromI8Incomplete","value":"DivRoundingFromI8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12724},{"krate":0,"index":12728},{"krate":0,"index":12732},{"krate":0,"index":12736}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12743},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552592,"byte_end":552616,"line_start":634,"line_end":634,"column_start":10,"column_end":34},"name":"DivRoundingI16Incomplete","qualname":"::integer::division::DivRoundingI16Incomplete","value":"DivRoundingI16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12745},{"krate":0,"index":12749},{"krate":0,"index":12753},{"krate":0,"index":12757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12764},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552618,"byte_end":552646,"line_start":634,"line_end":634,"column_start":36,"column_end":64},"name":"DivRoundingFromI16Incomplete","qualname":"::integer::division::DivRoundingFromI16Incomplete","value":"DivRoundingFromI16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12766},{"krate":0,"index":12770},{"krate":0,"index":12774},{"krate":0,"index":12778}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12785},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552657,"byte_end":552681,"line_start":635,"line_end":635,"column_start":10,"column_end":34},"name":"DivRoundingI32Incomplete","qualname":"::integer::division::DivRoundingI32Incomplete","value":"DivRoundingI32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12787},{"krate":0,"index":12791},{"krate":0,"index":12795},{"krate":0,"index":12799}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12806},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552683,"byte_end":552711,"line_start":635,"line_end":635,"column_start":36,"column_end":64},"name":"DivRoundingFromI32Incomplete","qualname":"::integer::division::DivRoundingFromI32Incomplete","value":"DivRoundingFromI32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12808},{"krate":0,"index":12812},{"krate":0,"index":12816},{"krate":0,"index":12820}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12827},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552722,"byte_end":552746,"line_start":636,"line_end":636,"column_start":10,"column_end":34},"name":"DivRoundingI64Incomplete","qualname":"::integer::division::DivRoundingI64Incomplete","value":"DivRoundingI64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12829},{"krate":0,"index":12833},{"krate":0,"index":12837},{"krate":0,"index":12841}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12848},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552748,"byte_end":552776,"line_start":636,"line_end":636,"column_start":36,"column_end":64},"name":"DivRoundingFromI64Incomplete","qualname":"::integer::division::DivRoundingFromI64Incomplete","value":"DivRoundingFromI64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12850},{"krate":0,"index":12854},{"krate":0,"index":12858},{"krate":0,"index":12862}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12869},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552788,"byte_end":552813,"line_start":637,"line_end":637,"column_start":11,"column_end":36},"name":"DivRoundingI128Incomplete","qualname":"::integer::division::DivRoundingI128Incomplete","value":"DivRoundingI128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12871},{"krate":0,"index":12875},{"krate":0,"index":12879},{"krate":0,"index":12883}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12890},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552815,"byte_end":552844,"line_start":637,"line_end":637,"column_start":38,"column_end":67},"name":"DivRoundingFromI128Incomplete","qualname":"::integer::division::DivRoundingFromI128Incomplete","value":"DivRoundingFromI128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12892},{"krate":0,"index":12896},{"krate":0,"index":12900},{"krate":0,"index":12904}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12911},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552854,"byte_end":552877,"line_start":638,"line_end":638,"column_start":9,"column_end":32},"name":"DivRoundingU8Incomplete","qualname":"::integer::division::DivRoundingU8Incomplete","value":"DivRoundingU8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12913},{"krate":0,"index":12917},{"krate":0,"index":12921},{"krate":0,"index":12925}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12932},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552879,"byte_end":552906,"line_start":638,"line_end":638,"column_start":34,"column_end":61},"name":"DivRoundingFromU8Incomplete","qualname":"::integer::division::DivRoundingFromU8Incomplete","value":"DivRoundingFromU8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12934},{"krate":0,"index":12938},{"krate":0,"index":12942},{"krate":0,"index":12946}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12953},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552917,"byte_end":552941,"line_start":639,"line_end":639,"column_start":10,"column_end":34},"name":"DivRoundingU16Incomplete","qualname":"::integer::division::DivRoundingU16Incomplete","value":"DivRoundingU16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12955},{"krate":0,"index":12959},{"krate":0,"index":12963},{"krate":0,"index":12967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12974},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552943,"byte_end":552971,"line_start":639,"line_end":639,"column_start":36,"column_end":64},"name":"DivRoundingFromU16Incomplete","qualname":"::integer::division::DivRoundingFromU16Incomplete","value":"DivRoundingFromU16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12976},{"krate":0,"index":12980},{"krate":0,"index":12984},{"krate":0,"index":12988}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":12995},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":552982,"byte_end":553006,"line_start":640,"line_end":640,"column_start":10,"column_end":34},"name":"DivRoundingU32Incomplete","qualname":"::integer::division::DivRoundingU32Incomplete","value":"DivRoundingU32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":12997},{"krate":0,"index":13001},{"krate":0,"index":13005},{"krate":0,"index":13009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13016},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553008,"byte_end":553036,"line_start":640,"line_end":640,"column_start":36,"column_end":64},"name":"DivRoundingFromU32Incomplete","qualname":"::integer::division::DivRoundingFromU32Incomplete","value":"DivRoundingFromU32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13018},{"krate":0,"index":13022},{"krate":0,"index":13026},{"krate":0,"index":13030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13037},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553047,"byte_end":553071,"line_start":641,"line_end":641,"column_start":10,"column_end":34},"name":"DivRoundingU64Incomplete","qualname":"::integer::division::DivRoundingU64Incomplete","value":"DivRoundingU64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13039},{"krate":0,"index":13043},{"krate":0,"index":13047},{"krate":0,"index":13051}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13058},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553073,"byte_end":553101,"line_start":641,"line_end":641,"column_start":36,"column_end":64},"name":"DivRoundingFromU64Incomplete","qualname":"::integer::division::DivRoundingFromU64Incomplete","value":"DivRoundingFromU64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13060},{"krate":0,"index":13064},{"krate":0,"index":13068},{"krate":0,"index":13072}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13079},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553113,"byte_end":553138,"line_start":642,"line_end":642,"column_start":11,"column_end":36},"name":"DivRoundingU128Incomplete","qualname":"::integer::division::DivRoundingU128Incomplete","value":"DivRoundingU128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13081},{"krate":0,"index":13085},{"krate":0,"index":13089},{"krate":0,"index":13093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13100},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553140,"byte_end":553169,"line_start":642,"line_end":642,"column_start":38,"column_end":67},"name":"DivRoundingFromU128Incomplete","qualname":"::integer::division::DivRoundingFromU128Incomplete","value":"DivRoundingFromU128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13102},{"krate":0,"index":13106},{"krate":0,"index":13110},{"krate":0,"index":13114}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13931},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553577,"byte_end":553600,"line_start":650,"line_end":650,"column_start":9,"column_end":32},"name":"RemRoundingI8Incomplete","qualname":"::integer::division::RemRoundingI8Incomplete","value":"RemRoundingI8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13933},{"krate":0,"index":13937},{"krate":0,"index":13941},{"krate":0,"index":13945}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13952},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553602,"byte_end":553629,"line_start":650,"line_end":650,"column_start":34,"column_end":61},"name":"RemRoundingFromI8Incomplete","qualname":"::integer::division::RemRoundingFromI8Incomplete","value":"RemRoundingFromI8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13954},{"krate":0,"index":13958},{"krate":0,"index":13962},{"krate":0,"index":13966}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13973},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553640,"byte_end":553664,"line_start":651,"line_end":651,"column_start":10,"column_end":34},"name":"RemRoundingI16Incomplete","qualname":"::integer::division::RemRoundingI16Incomplete","value":"RemRoundingI16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13975},{"krate":0,"index":13979},{"krate":0,"index":13983},{"krate":0,"index":13987}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13994},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553666,"byte_end":553694,"line_start":651,"line_end":651,"column_start":36,"column_end":64},"name":"RemRoundingFromI16Incomplete","qualname":"::integer::division::RemRoundingFromI16Incomplete","value":"RemRoundingFromI16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":13996},{"krate":0,"index":14000},{"krate":0,"index":14004},{"krate":0,"index":14008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14015},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553705,"byte_end":553729,"line_start":652,"line_end":652,"column_start":10,"column_end":34},"name":"RemRoundingI32Incomplete","qualname":"::integer::division::RemRoundingI32Incomplete","value":"RemRoundingI32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14017},{"krate":0,"index":14021},{"krate":0,"index":14025},{"krate":0,"index":14029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14036},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553731,"byte_end":553759,"line_start":652,"line_end":652,"column_start":36,"column_end":64},"name":"RemRoundingFromI32Incomplete","qualname":"::integer::division::RemRoundingFromI32Incomplete","value":"RemRoundingFromI32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14038},{"krate":0,"index":14042},{"krate":0,"index":14046},{"krate":0,"index":14050}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14057},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553770,"byte_end":553794,"line_start":653,"line_end":653,"column_start":10,"column_end":34},"name":"RemRoundingI64Incomplete","qualname":"::integer::division::RemRoundingI64Incomplete","value":"RemRoundingI64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14059},{"krate":0,"index":14063},{"krate":0,"index":14067},{"krate":0,"index":14071}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14078},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553796,"byte_end":553824,"line_start":653,"line_end":653,"column_start":36,"column_end":64},"name":"RemRoundingFromI64Incomplete","qualname":"::integer::division::RemRoundingFromI64Incomplete","value":"RemRoundingFromI64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14080},{"krate":0,"index":14084},{"krate":0,"index":14088},{"krate":0,"index":14092}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14099},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553836,"byte_end":553861,"line_start":654,"line_end":654,"column_start":11,"column_end":36},"name":"RemRoundingI128Incomplete","qualname":"::integer::division::RemRoundingI128Incomplete","value":"RemRoundingI128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14101},{"krate":0,"index":14105},{"krate":0,"index":14109},{"krate":0,"index":14113}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14120},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553863,"byte_end":553892,"line_start":654,"line_end":654,"column_start":38,"column_end":67},"name":"RemRoundingFromI128Incomplete","qualname":"::integer::division::RemRoundingFromI128Incomplete","value":"RemRoundingFromI128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14122},{"krate":0,"index":14126},{"krate":0,"index":14130},{"krate":0,"index":14134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14141},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553902,"byte_end":553925,"line_start":655,"line_end":655,"column_start":9,"column_end":32},"name":"RemRoundingU8Incomplete","qualname":"::integer::division::RemRoundingU8Incomplete","value":"RemRoundingU8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14143},{"krate":0,"index":14147},{"krate":0,"index":14151},{"krate":0,"index":14155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14162},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553927,"byte_end":553954,"line_start":655,"line_end":655,"column_start":34,"column_end":61},"name":"RemRoundingFromU8Incomplete","qualname":"::integer::division::RemRoundingFromU8Incomplete","value":"RemRoundingFromU8Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14164},{"krate":0,"index":14168},{"krate":0,"index":14172},{"krate":0,"index":14176}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14183},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553965,"byte_end":553989,"line_start":656,"line_end":656,"column_start":10,"column_end":34},"name":"RemRoundingU16Incomplete","qualname":"::integer::division::RemRoundingU16Incomplete","value":"RemRoundingU16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14185},{"krate":0,"index":14189},{"krate":0,"index":14193},{"krate":0,"index":14197}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14204},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":553991,"byte_end":554019,"line_start":656,"line_end":656,"column_start":36,"column_end":64},"name":"RemRoundingFromU16Incomplete","qualname":"::integer::division::RemRoundingFromU16Incomplete","value":"RemRoundingFromU16Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14206},{"krate":0,"index":14210},{"krate":0,"index":14214},{"krate":0,"index":14218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14225},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":554030,"byte_end":554054,"line_start":657,"line_end":657,"column_start":10,"column_end":34},"name":"RemRoundingU32Incomplete","qualname":"::integer::division::RemRoundingU32Incomplete","value":"RemRoundingU32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14227},{"krate":0,"index":14231},{"krate":0,"index":14235},{"krate":0,"index":14239}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14246},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":554056,"byte_end":554084,"line_start":657,"line_end":657,"column_start":36,"column_end":64},"name":"RemRoundingFromU32Incomplete","qualname":"::integer::division::RemRoundingFromU32Incomplete","value":"RemRoundingFromU32Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14248},{"krate":0,"index":14252},{"krate":0,"index":14256},{"krate":0,"index":14260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14267},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":554095,"byte_end":554119,"line_start":658,"line_end":658,"column_start":10,"column_end":34},"name":"RemRoundingU64Incomplete","qualname":"::integer::division::RemRoundingU64Incomplete","value":"RemRoundingU64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14269},{"krate":0,"index":14273},{"krate":0,"index":14277},{"krate":0,"index":14281}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14288},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":554121,"byte_end":554149,"line_start":658,"line_end":658,"column_start":36,"column_end":64},"name":"RemRoundingFromU64Incomplete","qualname":"::integer::division::RemRoundingFromU64Incomplete","value":"RemRoundingFromU64Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14290},{"krate":0,"index":14294},{"krate":0,"index":14298},{"krate":0,"index":14302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14309},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":554161,"byte_end":554186,"line_start":659,"line_end":659,"column_start":11,"column_end":36},"name":"RemRoundingU128Incomplete","qualname":"::integer::division::RemRoundingU128Incomplete","value":"RemRoundingU128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14311},{"krate":0,"index":14315},{"krate":0,"index":14319},{"krate":0,"index":14323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14330},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":554188,"byte_end":554217,"line_start":659,"line_end":659,"column_start":38,"column_end":67},"name":"RemRoundingFromU128Incomplete","qualname":"::integer::division::RemRoundingFromU128Incomplete","value":"RemRoundingFromU128Incomplete::{Trunc, Ceil, Floor, Euc}","parent":null,"children":[{"krate":0,"index":14332},{"krate":0,"index":14336},{"krate":0,"index":14340},{"krate":0,"index":14344}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":555413,"byte_end":555417,"line_start":682,"line_end":682,"column_start":10,"column_end":14},"name":"Long","qualname":"::integer::division::AsLong::Long","value":"type Long;","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14407},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":569337,"byte_end":569349,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"SmallInteger","qualname":"::integer::small::SmallInteger","value":"SmallInteger {  }","parent":null,"children":[{"krate":0,"index":14408},{"krate":0,"index":14409}],"decl_id":null,"docs":"A small integer that does not require any memory allocation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570510,"byte_end":570513,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallInteger>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`SmallInteger`] with value 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570489,"byte_end":570498,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":571811,"byte_end":571837,"line_start":163,"line_end":163,"column_start":19,"column_end":45},"name":"as_nonreallocating_integer","qualname":"<SmallInteger>::as_nonreallocating_integer","value":"fn (&mut self) -> &mut Integer","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to an [`Integer`] for simple\n operations that do not need to allocate more space for the\n number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":571783,"byte_end":571792,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":573637,"byte_end":573644,"line_start":210,"line_end":210,"column_start":11,"column_end":18},"name":"ToSmall","qualname":"::integer::small::ToSmall","value":"ToSmall: SealedToSmall","parent":null,"children":[],"decl_id":null,"docs":" Types implementing this trait can be converted to [`SmallInteger`].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":573674,"byte_end":573687,"line_start":212,"line_end":212,"column_start":11,"column_end":24},"name":"SealedToSmall","qualname":"::integer::small::SealedToSmall","value":"SealedToSmall: Sized","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":573704,"byte_end":573708,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"copy","qualname":"::integer::small::SealedToSmall::copy","value":"fn (self, size: &mut c_int, limbs: &mut Limbs) -> ()","parent":{"krate":0,"index":1336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":573760,"byte_end":573767,"line_start":214,"line_end":214,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::integer::small::SealedToSmall::is_zero","value":"fn (&self) -> bool","parent":{"krate":0,"index":1336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14626},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":277271,"byte_end":277290,"line_start":78,"line_end":78,"column_start":12,"column_end":31},"name":"TryFromIntegerError","qualname":"::integer::TryFromIntegerError","value":"TryFromIntegerError {  }","parent":null,"children":[{"krate":0,"index":14627}],"decl_id":null,"docs":"An error which can be returned when a checked conversion from\n[`Integer`] fails.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":14634},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278095,"byte_end":278098,"line_start":107,"line_end":107,"column_start":5,"column_end":8},"name":"Lsf","qualname":"::integer::Order::Lsf","value":"Order::Lsf","parent":{"krate":0,"index":14633},"children":[],"decl_id":null,"docs":" Least significant digit first, with each digit in the target’s\n endianness.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":14636},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278170,"byte_end":278175,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"LsfLe","qualname":"::integer::Order::LsfLe","value":"Order::LsfLe","parent":{"krate":0,"index":14633},"children":[],"decl_id":null,"docs":" Least significant digit first, with little endian digits.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":14638},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278244,"byte_end":278249,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"LsfBe","qualname":"::integer::Order::LsfBe","value":"Order::LsfBe","parent":{"krate":0,"index":14633},"children":[],"decl_id":null,"docs":" Least significant digit first, with big endian digits.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":14640},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278347,"byte_end":278350,"line_start":114,"line_end":114,"column_start":5,"column_end":8},"name":"Msf","qualname":"::integer::Order::Msf","value":"Order::Msf","parent":{"krate":0,"index":14633},"children":[],"decl_id":null,"docs":" Most significant digit first, with each digit in the target’s\n endianness.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":14642},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278421,"byte_end":278426,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"MsfLe","qualname":"::integer::Order::MsfLe","value":"Order::MsfLe","parent":{"krate":0,"index":14633},"children":[],"decl_id":null,"docs":" Most significant digit first, with little endian digits.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":14644},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278494,"byte_end":278499,"line_start":118,"line_end":118,"column_start":5,"column_end":10},"name":"MsfBe","qualname":"::integer::Order::MsfBe","value":"Order::MsfBe","parent":{"krate":0,"index":14633},"children":[],"decl_id":null,"docs":" Most significant digit first, with big endian digits.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":14633},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":277990,"byte_end":277995,"line_start":104,"line_end":104,"column_start":10,"column_end":15},"name":"Order","qualname":"::integer::Order","value":"Order::{Lsf, LsfLe, LsfBe, Msf, MsfLe, MsfBe}","parent":null,"children":[{"krate":0,"index":14634},{"krate":0,"index":14636},{"krate":0,"index":14638},{"krate":0,"index":14640},{"krate":0,"index":14642},{"krate":0,"index":14644}],"decl_id":null,"docs":"The ordering of digits inside a [slice], and bytes inside a digit.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rational","qualname":"::rational","value":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/mod.rs","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1510},{"krate":0,"index":1739},{"krate":0,"index":1775},{"krate":0,"index":1838},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":19093},{"krate":0,"index":19098},{"krate":0,"index":19097},{"krate":0,"index":19095}],"decl_id":null,"docs":"Arbitrary-precision rational numbers.","sig":null,"attributes":[{"value":"cfg(feature = \"rational\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17054,"byte_end":17082,"line_start":456,"line_end":456,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":14675},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":600518,"byte_end":600531,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"NegIncomplete","qualname":"::rational::arith::NegIncomplete","value":"NegIncomplete {  }","parent":null,"children":[{"krate":0,"index":14677}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14706},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":600658,"byte_end":600671,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"name":"AddIncomplete","qualname":"::rational::arith::AddIncomplete","value":"AddIncomplete {  }","parent":null,"children":[{"krate":0,"index":14708},{"krate":0,"index":14709}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14738},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":600822,"byte_end":600835,"line_start":55,"line_end":55,"column_start":5,"column_end":18},"name":"SubIncomplete","qualname":"::rational::arith::SubIncomplete","value":"SubIncomplete {  }","parent":null,"children":[{"krate":0,"index":14740},{"krate":0,"index":14741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14770},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":600986,"byte_end":600999,"line_start":64,"line_end":64,"column_start":5,"column_end":18},"name":"MulIncomplete","qualname":"::rational::arith::MulIncomplete","value":"MulIncomplete {  }","parent":null,"children":[{"krate":0,"index":14772},{"krate":0,"index":14773}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14802},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601150,"byte_end":601163,"line_start":73,"line_end":73,"column_start":5,"column_end":18},"name":"DivIncomplete","qualname":"::rational::arith::DivIncomplete","value":"DivIncomplete {  }","parent":null,"children":[{"krate":0,"index":14804},{"krate":0,"index":14805}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14851},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601325,"byte_end":601345,"line_start":84,"line_end":84,"column_start":5,"column_end":25},"name":"AddIntegerIncomplete","qualname":"::rational::arith::AddIntegerIncomplete","value":"AddIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":14853},{"krate":0,"index":14854}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14860},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601347,"byte_end":601372,"line_start":84,"line_end":84,"column_start":27,"column_end":52},"name":"AddOwnedIntegerIncomplete","qualname":"::rational::arith::AddOwnedIntegerIncomplete","value":"AddOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":14862},{"krate":0,"index":14863}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14913},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601529,"byte_end":601549,"line_start":94,"line_end":94,"column_start":5,"column_end":25},"name":"SubIntegerIncomplete","qualname":"::rational::arith::SubIntegerIncomplete","value":"SubIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":14915},{"krate":0,"index":14916}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14922},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601551,"byte_end":601576,"line_start":94,"line_end":94,"column_start":27,"column_end":52},"name":"SubOwnedIntegerIncomplete","qualname":"::rational::arith::SubOwnedIntegerIncomplete","value":"SubOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":14924},{"krate":0,"index":14925}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14931},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601582,"byte_end":601606,"line_start":95,"line_end":95,"column_start":5,"column_end":29},"name":"SubFromIntegerIncomplete","qualname":"::rational::arith::SubFromIntegerIncomplete","value":"SubFromIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":14933},{"krate":0,"index":14934}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14940},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601608,"byte_end":601637,"line_start":95,"line_end":95,"column_start":31,"column_end":60},"name":"SubFromOwnedIntegerIncomplete","qualname":"::rational::arith::SubFromOwnedIntegerIncomplete","value":"SubFromOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":14942},{"krate":0,"index":14943}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14989},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601774,"byte_end":601794,"line_start":104,"line_end":104,"column_start":5,"column_end":25},"name":"MulIntegerIncomplete","qualname":"::rational::arith::MulIntegerIncomplete","value":"MulIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":14991},{"krate":0,"index":14992}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14998},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601796,"byte_end":601821,"line_start":104,"line_end":104,"column_start":27,"column_end":52},"name":"MulOwnedIntegerIncomplete","qualname":"::rational::arith::MulOwnedIntegerIncomplete","value":"MulOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":15000},{"krate":0,"index":15001}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15051},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":601978,"byte_end":601998,"line_start":114,"line_end":114,"column_start":5,"column_end":25},"name":"DivIntegerIncomplete","qualname":"::rational::arith::DivIntegerIncomplete","value":"DivIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":15053},{"krate":0,"index":15054}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15060},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602000,"byte_end":602025,"line_start":114,"line_end":114,"column_start":27,"column_end":52},"name":"DivOwnedIntegerIncomplete","qualname":"::rational::arith::DivOwnedIntegerIncomplete","value":"DivOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":15062},{"krate":0,"index":15063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15069},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602031,"byte_end":602055,"line_start":115,"line_end":115,"column_start":5,"column_end":29},"name":"DivFromIntegerIncomplete","qualname":"::rational::arith::DivFromIntegerIncomplete","value":"DivFromIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":15071},{"krate":0,"index":15072}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15078},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602057,"byte_end":602086,"line_start":115,"line_end":115,"column_start":31,"column_end":60},"name":"DivFromOwnedIntegerIncomplete","qualname":"::rational::arith::DivFromOwnedIntegerIncomplete","value":"DivFromOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":15080},{"krate":0,"index":15081}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15287},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602221,"byte_end":602236,"line_start":124,"line_end":124,"column_start":9,"column_end":24},"name":"AddI8Incomplete","qualname":"::rational::arith::AddI8Incomplete","value":"AddI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":15289},{"krate":0,"index":15290}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15316},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602247,"byte_end":602263,"line_start":125,"line_end":125,"column_start":10,"column_end":26},"name":"AddI16Incomplete","qualname":"::rational::arith::AddI16Incomplete","value":"AddI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":15318},{"krate":0,"index":15319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15345},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602274,"byte_end":602290,"line_start":126,"line_end":126,"column_start":10,"column_end":26},"name":"AddI32Incomplete","qualname":"::rational::arith::AddI32Incomplete","value":"AddI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":15347},{"krate":0,"index":15348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15374},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602301,"byte_end":602317,"line_start":127,"line_end":127,"column_start":10,"column_end":26},"name":"AddI64Incomplete","qualname":"::rational::arith::AddI64Incomplete","value":"AddI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":15376},{"krate":0,"index":15377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15403},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602329,"byte_end":602346,"line_start":128,"line_end":128,"column_start":11,"column_end":28},"name":"AddI128Incomplete","qualname":"::rational::arith::AddI128Incomplete","value":"AddI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":15405},{"krate":0,"index":15406}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15432},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602356,"byte_end":602371,"line_start":129,"line_end":129,"column_start":9,"column_end":24},"name":"AddU8Incomplete","qualname":"::rational::arith::AddU8Incomplete","value":"AddU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":15434},{"krate":0,"index":15435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15461},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602382,"byte_end":602398,"line_start":130,"line_end":130,"column_start":10,"column_end":26},"name":"AddU16Incomplete","qualname":"::rational::arith::AddU16Incomplete","value":"AddU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":15463},{"krate":0,"index":15464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15490},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602409,"byte_end":602425,"line_start":131,"line_end":131,"column_start":10,"column_end":26},"name":"AddU32Incomplete","qualname":"::rational::arith::AddU32Incomplete","value":"AddU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":15492},{"krate":0,"index":15493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15519},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602436,"byte_end":602452,"line_start":132,"line_end":132,"column_start":10,"column_end":26},"name":"AddU64Incomplete","qualname":"::rational::arith::AddU64Incomplete","value":"AddU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":15521},{"krate":0,"index":15522}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15548},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602464,"byte_end":602481,"line_start":133,"line_end":133,"column_start":11,"column_end":28},"name":"AddU128Incomplete","qualname":"::rational::arith::AddU128Incomplete","value":"AddU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":15550},{"krate":0,"index":15551}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15777},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602638,"byte_end":602653,"line_start":141,"line_end":141,"column_start":9,"column_end":24},"name":"SubI8Incomplete","qualname":"::rational::arith::SubI8Incomplete","value":"SubI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":15779},{"krate":0,"index":15780}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15786},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602655,"byte_end":602674,"line_start":141,"line_end":141,"column_start":26,"column_end":45},"name":"SubFromI8Incomplete","qualname":"::rational::arith::SubFromI8Incomplete","value":"SubFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":15788},{"krate":0,"index":15789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15815},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602685,"byte_end":602701,"line_start":142,"line_end":142,"column_start":10,"column_end":26},"name":"SubI16Incomplete","qualname":"::rational::arith::SubI16Incomplete","value":"SubI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":15817},{"krate":0,"index":15818}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15824},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602703,"byte_end":602723,"line_start":142,"line_end":142,"column_start":28,"column_end":48},"name":"SubFromI16Incomplete","qualname":"::rational::arith::SubFromI16Incomplete","value":"SubFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":15826},{"krate":0,"index":15827}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15853},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602734,"byte_end":602750,"line_start":143,"line_end":143,"column_start":10,"column_end":26},"name":"SubI32Incomplete","qualname":"::rational::arith::SubI32Incomplete","value":"SubI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":15855},{"krate":0,"index":15856}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15862},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602752,"byte_end":602772,"line_start":143,"line_end":143,"column_start":28,"column_end":48},"name":"SubFromI32Incomplete","qualname":"::rational::arith::SubFromI32Incomplete","value":"SubFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":15864},{"krate":0,"index":15865}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15891},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602783,"byte_end":602799,"line_start":144,"line_end":144,"column_start":10,"column_end":26},"name":"SubI64Incomplete","qualname":"::rational::arith::SubI64Incomplete","value":"SubI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":15893},{"krate":0,"index":15894}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15900},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602801,"byte_end":602821,"line_start":144,"line_end":144,"column_start":28,"column_end":48},"name":"SubFromI64Incomplete","qualname":"::rational::arith::SubFromI64Incomplete","value":"SubFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":15902},{"krate":0,"index":15903}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15929},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602833,"byte_end":602850,"line_start":145,"line_end":145,"column_start":11,"column_end":28},"name":"SubI128Incomplete","qualname":"::rational::arith::SubI128Incomplete","value":"SubI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":15931},{"krate":0,"index":15932}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15938},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602852,"byte_end":602873,"line_start":145,"line_end":145,"column_start":30,"column_end":51},"name":"SubFromI128Incomplete","qualname":"::rational::arith::SubFromI128Incomplete","value":"SubFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":15940},{"krate":0,"index":15941}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15967},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602883,"byte_end":602898,"line_start":146,"line_end":146,"column_start":9,"column_end":24},"name":"SubU8Incomplete","qualname":"::rational::arith::SubU8Incomplete","value":"SubU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":15969},{"krate":0,"index":15970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15976},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602900,"byte_end":602919,"line_start":146,"line_end":146,"column_start":26,"column_end":45},"name":"SubFromU8Incomplete","qualname":"::rational::arith::SubFromU8Incomplete","value":"SubFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":15978},{"krate":0,"index":15979}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16005},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602930,"byte_end":602946,"line_start":147,"line_end":147,"column_start":10,"column_end":26},"name":"SubU16Incomplete","qualname":"::rational::arith::SubU16Incomplete","value":"SubU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":16007},{"krate":0,"index":16008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16014},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602948,"byte_end":602968,"line_start":147,"line_end":147,"column_start":28,"column_end":48},"name":"SubFromU16Incomplete","qualname":"::rational::arith::SubFromU16Incomplete","value":"SubFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":16016},{"krate":0,"index":16017}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16043},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602979,"byte_end":602995,"line_start":148,"line_end":148,"column_start":10,"column_end":26},"name":"SubU32Incomplete","qualname":"::rational::arith::SubU32Incomplete","value":"SubU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":16045},{"krate":0,"index":16046}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16052},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":602997,"byte_end":603017,"line_start":148,"line_end":148,"column_start":28,"column_end":48},"name":"SubFromU32Incomplete","qualname":"::rational::arith::SubFromU32Incomplete","value":"SubFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":16054},{"krate":0,"index":16055}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16081},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603028,"byte_end":603044,"line_start":149,"line_end":149,"column_start":10,"column_end":26},"name":"SubU64Incomplete","qualname":"::rational::arith::SubU64Incomplete","value":"SubU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":16083},{"krate":0,"index":16084}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16090},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603046,"byte_end":603066,"line_start":149,"line_end":149,"column_start":28,"column_end":48},"name":"SubFromU64Incomplete","qualname":"::rational::arith::SubFromU64Incomplete","value":"SubFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":16092},{"krate":0,"index":16093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16119},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603078,"byte_end":603095,"line_start":150,"line_end":150,"column_start":11,"column_end":28},"name":"SubU128Incomplete","qualname":"::rational::arith::SubU128Incomplete","value":"SubU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":16121},{"krate":0,"index":16122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16128},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603097,"byte_end":603118,"line_start":150,"line_end":150,"column_start":30,"column_end":51},"name":"SubFromU128Incomplete","qualname":"::rational::arith::SubFromU128Incomplete","value":"SubFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":16130},{"krate":0,"index":16131}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16337},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603253,"byte_end":603268,"line_start":158,"line_end":158,"column_start":9,"column_end":24},"name":"MulI8Incomplete","qualname":"::rational::arith::MulI8Incomplete","value":"MulI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":16339},{"krate":0,"index":16340}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16366},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603279,"byte_end":603295,"line_start":159,"line_end":159,"column_start":10,"column_end":26},"name":"MulI16Incomplete","qualname":"::rational::arith::MulI16Incomplete","value":"MulI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":16368},{"krate":0,"index":16369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16395},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603306,"byte_end":603322,"line_start":160,"line_end":160,"column_start":10,"column_end":26},"name":"MulI32Incomplete","qualname":"::rational::arith::MulI32Incomplete","value":"MulI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":16397},{"krate":0,"index":16398}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16424},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603333,"byte_end":603349,"line_start":161,"line_end":161,"column_start":10,"column_end":26},"name":"MulI64Incomplete","qualname":"::rational::arith::MulI64Incomplete","value":"MulI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":16426},{"krate":0,"index":16427}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16453},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603361,"byte_end":603378,"line_start":162,"line_end":162,"column_start":11,"column_end":28},"name":"MulI128Incomplete","qualname":"::rational::arith::MulI128Incomplete","value":"MulI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":16455},{"krate":0,"index":16456}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16482},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603388,"byte_end":603403,"line_start":163,"line_end":163,"column_start":9,"column_end":24},"name":"MulU8Incomplete","qualname":"::rational::arith::MulU8Incomplete","value":"MulU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":16484},{"krate":0,"index":16485}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16511},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603414,"byte_end":603430,"line_start":164,"line_end":164,"column_start":10,"column_end":26},"name":"MulU16Incomplete","qualname":"::rational::arith::MulU16Incomplete","value":"MulU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":16513},{"krate":0,"index":16514}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16540},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603441,"byte_end":603457,"line_start":165,"line_end":165,"column_start":10,"column_end":26},"name":"MulU32Incomplete","qualname":"::rational::arith::MulU32Incomplete","value":"MulU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":16542},{"krate":0,"index":16543}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16569},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603468,"byte_end":603484,"line_start":166,"line_end":166,"column_start":10,"column_end":26},"name":"MulU64Incomplete","qualname":"::rational::arith::MulU64Incomplete","value":"MulU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":16571},{"krate":0,"index":16572}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16598},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603496,"byte_end":603513,"line_start":167,"line_end":167,"column_start":11,"column_end":28},"name":"MulU128Incomplete","qualname":"::rational::arith::MulU128Incomplete","value":"MulU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":16600},{"krate":0,"index":16601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16827},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603670,"byte_end":603685,"line_start":175,"line_end":175,"column_start":9,"column_end":24},"name":"DivI8Incomplete","qualname":"::rational::arith::DivI8Incomplete","value":"DivI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":16829},{"krate":0,"index":16830}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16836},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603687,"byte_end":603706,"line_start":175,"line_end":175,"column_start":26,"column_end":45},"name":"DivFromI8Incomplete","qualname":"::rational::arith::DivFromI8Incomplete","value":"DivFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":16838},{"krate":0,"index":16839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16865},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603717,"byte_end":603733,"line_start":176,"line_end":176,"column_start":10,"column_end":26},"name":"DivI16Incomplete","qualname":"::rational::arith::DivI16Incomplete","value":"DivI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":16867},{"krate":0,"index":16868}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16874},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603735,"byte_end":603755,"line_start":176,"line_end":176,"column_start":28,"column_end":48},"name":"DivFromI16Incomplete","qualname":"::rational::arith::DivFromI16Incomplete","value":"DivFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":16876},{"krate":0,"index":16877}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16903},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603766,"byte_end":603782,"line_start":177,"line_end":177,"column_start":10,"column_end":26},"name":"DivI32Incomplete","qualname":"::rational::arith::DivI32Incomplete","value":"DivI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":16905},{"krate":0,"index":16906}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16912},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603784,"byte_end":603804,"line_start":177,"line_end":177,"column_start":28,"column_end":48},"name":"DivFromI32Incomplete","qualname":"::rational::arith::DivFromI32Incomplete","value":"DivFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":16914},{"krate":0,"index":16915}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16941},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603815,"byte_end":603831,"line_start":178,"line_end":178,"column_start":10,"column_end":26},"name":"DivI64Incomplete","qualname":"::rational::arith::DivI64Incomplete","value":"DivI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":16943},{"krate":0,"index":16944}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16950},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603833,"byte_end":603853,"line_start":178,"line_end":178,"column_start":28,"column_end":48},"name":"DivFromI64Incomplete","qualname":"::rational::arith::DivFromI64Incomplete","value":"DivFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":16952},{"krate":0,"index":16953}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16979},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603865,"byte_end":603882,"line_start":179,"line_end":179,"column_start":11,"column_end":28},"name":"DivI128Incomplete","qualname":"::rational::arith::DivI128Incomplete","value":"DivI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":16981},{"krate":0,"index":16982}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16988},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603884,"byte_end":603905,"line_start":179,"line_end":179,"column_start":30,"column_end":51},"name":"DivFromI128Incomplete","qualname":"::rational::arith::DivFromI128Incomplete","value":"DivFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":16990},{"krate":0,"index":16991}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17017},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603915,"byte_end":603930,"line_start":180,"line_end":180,"column_start":9,"column_end":24},"name":"DivU8Incomplete","qualname":"::rational::arith::DivU8Incomplete","value":"DivU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":17019},{"krate":0,"index":17020}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17026},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603932,"byte_end":603951,"line_start":180,"line_end":180,"column_start":26,"column_end":45},"name":"DivFromU8Incomplete","qualname":"::rational::arith::DivFromU8Incomplete","value":"DivFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":17028},{"krate":0,"index":17029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17055},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603962,"byte_end":603978,"line_start":181,"line_end":181,"column_start":10,"column_end":26},"name":"DivU16Incomplete","qualname":"::rational::arith::DivU16Incomplete","value":"DivU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":17057},{"krate":0,"index":17058}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17064},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":603980,"byte_end":604000,"line_start":181,"line_end":181,"column_start":28,"column_end":48},"name":"DivFromU16Incomplete","qualname":"::rational::arith::DivFromU16Incomplete","value":"DivFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":17066},{"krate":0,"index":17067}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17093},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604011,"byte_end":604027,"line_start":182,"line_end":182,"column_start":10,"column_end":26},"name":"DivU32Incomplete","qualname":"::rational::arith::DivU32Incomplete","value":"DivU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17095},{"krate":0,"index":17096}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17102},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604029,"byte_end":604049,"line_start":182,"line_end":182,"column_start":28,"column_end":48},"name":"DivFromU32Incomplete","qualname":"::rational::arith::DivFromU32Incomplete","value":"DivFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17104},{"krate":0,"index":17105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17131},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604060,"byte_end":604076,"line_start":183,"line_end":183,"column_start":10,"column_end":26},"name":"DivU64Incomplete","qualname":"::rational::arith::DivU64Incomplete","value":"DivU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":17133},{"krate":0,"index":17134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17140},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604078,"byte_end":604098,"line_start":183,"line_end":183,"column_start":28,"column_end":48},"name":"DivFromU64Incomplete","qualname":"::rational::arith::DivFromU64Incomplete","value":"DivFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":17142},{"krate":0,"index":17143}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17169},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604110,"byte_end":604127,"line_start":184,"line_end":184,"column_start":11,"column_end":28},"name":"DivU128Incomplete","qualname":"::rational::arith::DivU128Incomplete","value":"DivU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":17171},{"krate":0,"index":17172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17178},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604129,"byte_end":604150,"line_start":184,"line_end":184,"column_start":30,"column_end":51},"name":"DivFromU128Incomplete","qualname":"::rational::arith::DivFromU128Incomplete","value":"DivFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":17180},{"krate":0,"index":17181}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17207},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604259,"byte_end":604275,"line_start":192,"line_end":192,"column_start":10,"column_end":26},"name":"ShlI32Incomplete","qualname":"::rational::arith::ShlI32Incomplete","value":"ShlI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17209},{"krate":0,"index":17210}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17236},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604383,"byte_end":604399,"line_start":199,"line_end":199,"column_start":10,"column_end":26},"name":"ShrI32Incomplete","qualname":"::rational::arith::ShrI32Incomplete","value":"ShrI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17238},{"krate":0,"index":17239}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17265},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604504,"byte_end":604520,"line_start":206,"line_end":206,"column_start":10,"column_end":26},"name":"PowI32Incomplete","qualname":"::rational::arith::PowI32Incomplete","value":"PowI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17267},{"krate":0,"index":17268}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17294},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604627,"byte_end":604643,"line_start":214,"line_end":214,"column_start":10,"column_end":26},"name":"ShlU32Incomplete","qualname":"::rational::arith::ShlU32Incomplete","value":"ShlU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17296},{"krate":0,"index":17297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17323},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604749,"byte_end":604765,"line_start":221,"line_end":221,"column_start":10,"column_end":26},"name":"ShrU32Incomplete","qualname":"::rational::arith::ShrU32Incomplete","value":"ShrU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17325},{"krate":0,"index":17326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17352},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604870,"byte_end":604886,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"name":"PowU32Incomplete","qualname":"::rational::arith::PowU32Incomplete","value":"PowU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":17354},{"krate":0,"index":17355}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":616465,"byte_end":616473,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"Rational","qualname":"::rational::big::Rational","value":"Rational {  }","parent":null,"children":[{"krate":0,"index":1543}],"decl_id":null,"docs":"An arbitrary-precision rational number.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":616433,"byte_end":616453,"line_start":89,"line_end":89,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":618643,"byte_end":618646,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<Rational>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new arbitrary-precision [`Rational`] number with\n value 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":618622,"byte_end":618631,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":620454,"byte_end":620462,"line_start":220,"line_end":220,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Rational>::from_raw","value":"fn (raw: mpq_t) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Rational`] number from an initialized\n [GMP rational number][`mpq_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":620426,"byte_end":620435,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":621235,"byte_end":621243,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Rational>::into_raw","value":"fn (self) -> mpq_t","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Rational`] number into a\n [GMP rational number][`mpq_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":621214,"byte_end":621223,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":621984,"byte_end":621990,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Rational>::as_raw","value":"fn (&self) -> *const mpq_t","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the inner [GMP rational number][`mpq_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":621963,"byte_end":621972,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":622657,"byte_end":622667,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"as_raw_mut","qualname":"<Rational>::as_raw_mut","value":"fn (&mut self) -> *mut mpq_t","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the inner\n [GMP rational number][`mpq_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":622636,"byte_end":622645,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":623671,"byte_end":623679,"line_start":327,"line_end":327,"column_start":12,"column_end":20},"name":"from_f32","qualname":"<Rational>::from_f32","value":"fn (value: f32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Rational`] number from an [`f32`] if it is\n [finite][`is_finite`], losing no precision.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":623650,"byte_end":623659,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":624703,"byte_end":624711,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"from_f64","qualname":"<Rational>::from_f64","value":"fn (value: f64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Rational`] number from an [`f64`] if it is\n [finite][`is_finite`], losing no precision.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":624682,"byte_end":624691,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":625503,"byte_end":625517,"line_start":384,"line_end":384,"column_start":12,"column_end":26},"name":"from_str_radix","qualname":"<Rational>::from_str_radix","value":"fn (src: &str, radix: i32) -> Result<Self, ParseRationalError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a [`Rational`] number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":625482,"byte_end":625491,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":627521,"byte_end":627526,"line_start":432,"line_end":432,"column_start":12,"column_end":17},"name":"parse","qualname":"<Rational>::parse","value":"fn <S> (src: S) -> Result<ParseIncomplete, ParseRationalError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a decimal string slice (<code>&amp;[str]</code>) or\n byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into a\n [`Rational`] number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":627500,"byte_end":627509,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":629646,"byte_end":629657,"line_start":483,"line_end":483,"column_start":12,"column_end":23},"name":"parse_radix","qualname":"<Rational>::parse_radix","value":"fn <S> (src: S, radix: i32) -> Result<ParseIncomplete, ParseRationalError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string slice (<code>&amp;[str]</code>) or byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into a\n [`Rational`] number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":629625,"byte_end":629634,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":630510,"byte_end":630516,"line_start":508,"line_end":508,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Rational>::to_f32","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f32`], rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":630489,"byte_end":630498,"line_start":507,"line_end":507,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":631803,"byte_end":631809,"line_start":544,"line_end":544,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Rational>::to_f64","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f64`], rounding towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":631782,"byte_end":631791,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":632481,"byte_end":632496,"line_start":567,"line_end":567,"column_start":12,"column_end":27},"name":"to_string_radix","qualname":"<Rational>::to_string_radix","value":"fn (&self, radix: i32) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation for the specified `radix`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":632460,"byte_end":632469,"line_start":566,"line_end":566,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":633295,"byte_end":633305,"line_start":593,"line_end":593,"column_start":12,"column_end":22},"name":"assign_f32","qualname":"<Rational>::assign_f32","value":"fn (&mut self, val: f32) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Assigns from an [`f32`] if it is [finite][`is_finite`], losing\n no precision.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":633274,"byte_end":633283,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":634029,"byte_end":634039,"line_start":616,"line_end":616,"column_start":12,"column_end":22},"name":"assign_f64","qualname":"<Rational>::assign_f64","value":"fn (&mut self, val: f64) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Assigns from an [`f64`] if it is [finite][`is_finite`], losing\n no precision.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":634008,"byte_end":634017,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":634969,"byte_end":634983,"line_start":648,"line_end":648,"column_start":19,"column_end":33},"name":"from_canonical","qualname":"<Rational>::from_canonical","value":"fn <Num, Den> (num: Num, den: Den) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Rational`] number from a numerator and\n denominator without canonicalizing aftwerwards.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":636175,"byte_end":636191,"line_start":685,"line_end":685,"column_start":19,"column_end":35},"name":"assign_canonical","qualname":"<Rational>::assign_canonical","value":"fn <Num, Den> (&mut self, num: Num, den: Den) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assigns to the numerator and denominator without\n canonicalizing aftwerwards.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":636774,"byte_end":636779,"line_start":707,"line_end":707,"column_start":12,"column_end":17},"name":"numer","qualname":"<Rational>::numer","value":"fn (&self) -> &Integer","parent":null,"children":[],"decl_id":null,"docs":" Borrows the numerator as an [`Integer`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":636753,"byte_end":636762,"line_start":706,"line_end":706,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":637224,"byte_end":637229,"line_start":724,"line_end":724,"column_start":12,"column_end":17},"name":"denom","qualname":"<Rational>::denom","value":"fn (&self) -> &Integer","parent":null,"children":[],"decl_id":null,"docs":" Borrows the denominator as an [`Integer`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":637203,"byte_end":637212,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":638902,"byte_end":638920,"line_start":772,"line_end":772,"column_start":12,"column_end":30},"name":"mutate_numer_denom","qualname":"<Rational>::mutate_numer_denom","value":"fn <F> (&mut self, func: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calls a function with mutable references to the numerator and\n denominator, then canonicalizes the number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":641250,"byte_end":641288,"line_start":836,"line_end":836,"column_start":19,"column_end":57},"name":"as_mut_numer_denom_no_canonicalization","qualname":"<Rational>::as_mut_numer_denom_no_canonicalization","value":"fn (&mut self) -> (&mut Integer, &mut Integer)","parent":null,"children":[],"decl_id":null,"docs":" Borrows the numerator and denominator mutably without\n canonicalizing aftwerwards.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":641222,"byte_end":641231,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":642060,"byte_end":642076,"line_start":863,"line_end":863,"column_start":12,"column_end":28},"name":"into_numer_denom","qualname":"<Rational>::into_numer_denom","value":"fn (self) -> (Integer, Integer)","parent":null,"children":[],"decl_id":null,"docs":" Converts into numerator and denominator [`Integer`] values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":642039,"byte_end":642048,"line_start":862,"line_end":862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":643272,"byte_end":643278,"line_start":896,"line_end":896,"column_start":12,"column_end":18},"name":"as_neg","qualname":"<Rational>::as_neg","value":"fn (&self) -> BorrowRational<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a negated copy of the [`Rational`] number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":644405,"byte_end":644411,"line_start":926,"line_end":926,"column_start":12,"column_end":18},"name":"as_abs","qualname":"<Rational>::as_abs","value":"fn (&self) -> BorrowRational<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows an absolute copy of the [`Rational`] number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":645636,"byte_end":645644,"line_start":960,"line_end":960,"column_start":12,"column_end":20},"name":"as_recip","qualname":"<Rational>::as_recip","value":"fn (&self) -> BorrowRational<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a reciprocal copy of the [`Rational`] number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":646742,"byte_end":646746,"line_start":990,"line_end":990,"column_start":12,"column_end":16},"name":"cmp0","qualname":"<Rational>::cmp0","value":"fn (&self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Returns the same result as\n <code>self.[cmp][`cmp`](&amp;0.[into][`into`]())</code>, but\n is faster.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":646721,"byte_end":646730,"line_start":989,"line_end":989,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":647175,"byte_end":647182,"line_start":1007,"line_end":1007,"column_start":12,"column_end":19},"name":"cmp_abs","qualname":"<Rational>::cmp_abs","value":"fn (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compares the absolute values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":647154,"byte_end":647163,"line_start":1006,"line_end":1006,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":648596,"byte_end":648599,"line_start":1044,"line_end":1044,"column_start":12,"column_end":15},"name":"sum","qualname":"<Rational>::sum","value":"fn <'a, I> (values: I) -> SumIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Adds a list of [`Rational`] values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":648575,"byte_end":648584,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":650069,"byte_end":650072,"line_start":1081,"line_end":1081,"column_start":12,"column_end":15},"name":"dot","qualname":"<Rational>::dot","value":"fn <'a, I> (values: I) -> DotIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Finds the dot product of a list of [`Rational`] value pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":650048,"byte_end":650057,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":651558,"byte_end":651565,"line_start":1121,"line_end":1121,"column_start":12,"column_end":19},"name":"product","qualname":"<Rational>::product","value":"fn <'a, I> (values: I) -> ProductIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies a list of [`Rational`] values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":651537,"byte_end":651546,"line_start":1120,"line_end":1120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":651969,"byte_end":651972,"line_start":1139,"line_end":1139,"column_start":12,"column_end":15},"name":"abs","qualname":"<Rational>::abs","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":651948,"byte_end":651957,"line_start":1138,"line_end":1138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":652292,"byte_end":652299,"line_start":1155,"line_end":1155,"column_start":12,"column_end":19},"name":"abs_mut","qualname":"<Rational>::abs_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":652271,"byte_end":652280,"line_start":1154,"line_end":1154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":653161,"byte_end":653168,"line_start":1181,"line_end":1181,"column_start":12,"column_end":19},"name":"abs_ref","qualname":"<Rational>::abs_ref","value":"fn (&self) -> AbsIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":653140,"byte_end":653149,"line_start":1180,"line_end":1180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":653624,"byte_end":653630,"line_start":1200,"line_end":1200,"column_start":12,"column_end":18},"name":"signum","qualname":"<Rational>::signum","value":"fn (mut self) -> Rational","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":653603,"byte_end":653612,"line_start":1199,"line_end":1199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":654069,"byte_end":654079,"line_start":1220,"line_end":1220,"column_start":12,"column_end":22},"name":"signum_mut","qualname":"<Rational>::signum_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":654048,"byte_end":654057,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":655281,"byte_end":655291,"line_start":1253,"line_end":1253,"column_start":12,"column_end":22},"name":"signum_ref","qualname":"<Rational>::signum_ref","value":"fn (&self) -> SignumIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":655260,"byte_end":655269,"line_start":1252,"line_end":1252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":655975,"byte_end":655980,"line_start":1277,"line_end":1277,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Rational>::clamp","value":"fn <Min, Max> (mut self, min: &Min, max: &Max) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":655954,"byte_end":655963,"line_start":1276,"line_end":1276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":656774,"byte_end":656783,"line_start":1304,"line_end":1304,"column_start":12,"column_end":21},"name":"clamp_mut","qualname":"<Rational>::clamp_mut","value":"fn <Min, Max> (&mut self, min: &Min, max: &Max) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":658415,"byte_end":658424,"line_start":1349,"line_end":1349,"column_start":12,"column_end":21},"name":"clamp_ref","qualname":"<Rational>::clamp_ref","value":"fn <'min, 'max, Min, Max> (&self, min: &'min Min, max: &'max Max) -> ClampIncomplete<'_, 'min, 'max, Min, Max>","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":658394,"byte_end":658403,"line_start":1348,"line_end":1348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":659116,"byte_end":659121,"line_start":1379,"line_end":1379,"column_start":12,"column_end":17},"name":"recip","qualname":"<Rational>::recip","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":659095,"byte_end":659104,"line_start":1378,"line_end":1378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":659729,"byte_end":659738,"line_start":1404,"line_end":1404,"column_start":12,"column_end":21},"name":"recip_mut","qualname":"<Rational>::recip_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":659708,"byte_end":659717,"line_start":1403,"line_end":1403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":660603,"byte_end":660612,"line_start":1430,"line_end":1430,"column_start":12,"column_end":21},"name":"recip_ref","qualname":"<Rational>::recip_ref","value":"fn (&self) -> RecipIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":660582,"byte_end":660591,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":661099,"byte_end":661104,"line_start":1450,"line_end":1450,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Rational>::trunc","value":"fn (mut self) -> Rational","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":661078,"byte_end":661087,"line_start":1449,"line_end":1449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":661547,"byte_end":661556,"line_start":1471,"line_end":1471,"column_start":12,"column_end":21},"name":"trunc_mut","qualname":"<Rational>::trunc_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":661526,"byte_end":661535,"line_start":1470,"line_end":1470,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":662794,"byte_end":662803,"line_start":1505,"line_end":1505,"column_start":12,"column_end":21},"name":"trunc_ref","qualname":"<Rational>::trunc_ref","value":"fn (&self) -> TruncIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":662773,"byte_end":662782,"line_start":1504,"line_end":1504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":663204,"byte_end":663213,"line_start":1521,"line_end":1521,"column_start":12,"column_end":21},"name":"rem_trunc","qualname":"<Rational>::rem_trunc","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional part of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":663183,"byte_end":663192,"line_start":1520,"line_end":1520,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":663598,"byte_end":663611,"line_start":1538,"line_end":1538,"column_start":12,"column_end":25},"name":"rem_trunc_mut","qualname":"<Rational>::rem_trunc_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional part of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":663577,"byte_end":663586,"line_start":1537,"line_end":1537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":664540,"byte_end":664553,"line_start":1565,"line_end":1565,"column_start":12,"column_end":25},"name":"rem_trunc_ref","qualname":"<Rational>::rem_trunc_ref","value":"fn (&self) -> RemTruncIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional part of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":664519,"byte_end":664528,"line_start":1564,"line_end":1564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":665103,"byte_end":665114,"line_start":1584,"line_end":1584,"column_start":12,"column_end":23},"name":"fract_trunc","qualname":"<Rational>::fract_trunc","value":"fn (mut self, mut trunc: Integer) -> (Self, Integer)","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and truncated parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":665082,"byte_end":665091,"line_start":1583,"line_end":1583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":665717,"byte_end":665732,"line_start":1605,"line_end":1605,"column_start":12,"column_end":27},"name":"fract_trunc_mut","qualname":"<Rational>::fract_trunc_mut","value":"fn (&mut self, trunc: &mut Integer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and truncated parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":665696,"byte_end":665705,"line_start":1604,"line_end":1604,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":667258,"byte_end":667273,"line_start":1643,"line_end":1643,"column_start":12,"column_end":27},"name":"fract_trunc_ref","qualname":"<Rational>::fract_trunc_ref","value":"fn (&self) -> FractTruncIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and truncated parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":667237,"byte_end":667246,"line_start":1642,"line_end":1642,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":667783,"byte_end":667787,"line_start":1663,"line_end":1663,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Rational>::ceil","value":"fn (mut self) -> Rational","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number upwards (towards plus infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":667762,"byte_end":667771,"line_start":1662,"line_end":1662,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":668246,"byte_end":668254,"line_start":1684,"line_end":1684,"column_start":12,"column_end":20},"name":"ceil_mut","qualname":"<Rational>::ceil_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number upwards (towards plus infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":668225,"byte_end":668234,"line_start":1683,"line_end":1683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":669503,"byte_end":669511,"line_start":1718,"line_end":1718,"column_start":12,"column_end":20},"name":"ceil_ref","qualname":"<Rational>::ceil_ref","value":"fn (&self) -> CeilIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number upwards (towards plus infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":669482,"byte_end":669491,"line_start":1717,"line_end":1717,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":669911,"byte_end":669919,"line_start":1734,"line_end":1734,"column_start":12,"column_end":20},"name":"rem_ceil","qualname":"<Rational>::rem_ceil","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the non-positive remainder after rounding up.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":669890,"byte_end":669899,"line_start":1733,"line_end":1733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":670304,"byte_end":670316,"line_start":1751,"line_end":1751,"column_start":12,"column_end":24},"name":"rem_ceil_mut","qualname":"<Rational>::rem_ceil_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the non-positive remainder after rounding up.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":670283,"byte_end":670292,"line_start":1750,"line_end":1750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":671245,"byte_end":671257,"line_start":1778,"line_end":1778,"column_start":12,"column_end":24},"name":"rem_ceil_ref","qualname":"<Rational>::rem_ceil_ref","value":"fn (&self) -> RemCeilIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the non-positive remainder after rounding up.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":671224,"byte_end":671233,"line_start":1777,"line_end":1777,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":671848,"byte_end":671858,"line_start":1799,"line_end":1799,"column_start":12,"column_end":22},"name":"fract_ceil","qualname":"<Rational>::fract_ceil","value":"fn (mut self, mut ceil: Integer) -> (Self, Integer)","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and ceil parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":671827,"byte_end":671836,"line_start":1798,"line_end":1798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":672502,"byte_end":672516,"line_start":1822,"line_end":1822,"column_start":12,"column_end":26},"name":"fract_ceil_mut","qualname":"<Rational>::fract_ceil_mut","value":"fn (&mut self, ceil: &mut Integer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and ceil parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":672481,"byte_end":672490,"line_start":1821,"line_end":1821,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":674085,"byte_end":674099,"line_start":1862,"line_end":1862,"column_start":12,"column_end":26},"name":"fract_ceil_ref","qualname":"<Rational>::fract_ceil_ref","value":"fn (&self) -> FractCeilIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and ceil parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":674064,"byte_end":674073,"line_start":1861,"line_end":1861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":674616,"byte_end":674621,"line_start":1882,"line_end":1882,"column_start":12,"column_end":17},"name":"floor","qualname":"<Rational>::floor","value":"fn (mut self) -> Rational","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number downwards (towards minus infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":674595,"byte_end":674604,"line_start":1881,"line_end":1881,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":675059,"byte_end":675068,"line_start":1901,"line_end":1901,"column_start":12,"column_end":21},"name":"floor_mut","qualname":"<Rational>::floor_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number downwards (towards minus infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":675038,"byte_end":675047,"line_start":1900,"line_end":1900,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":676328,"byte_end":676337,"line_start":1935,"line_end":1935,"column_start":12,"column_end":21},"name":"floor_ref","qualname":"<Rational>::floor_ref","value":"fn (&self) -> FloorIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number downwards (towards minus infinity).","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":676307,"byte_end":676316,"line_start":1934,"line_end":1934,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":676746,"byte_end":676755,"line_start":1951,"line_end":1951,"column_start":12,"column_end":21},"name":"rem_floor","qualname":"<Rational>::rem_floor","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the non-negative remainder after rounding down.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":676725,"byte_end":676734,"line_start":1950,"line_end":1950,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":677148,"byte_end":677161,"line_start":1968,"line_end":1968,"column_start":12,"column_end":25},"name":"rem_floor_mut","qualname":"<Rational>::rem_floor_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the non-negative remainder after rounding down.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":677127,"byte_end":677136,"line_start":1967,"line_end":1967,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":678098,"byte_end":678111,"line_start":1995,"line_end":1995,"column_start":12,"column_end":25},"name":"rem_floor_ref","qualname":"<Rational>::rem_floor_ref","value":"fn (&self) -> RemFloorIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the non-negative remainder after rounding down.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":678077,"byte_end":678086,"line_start":1994,"line_end":1994,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":678708,"byte_end":678719,"line_start":2016,"line_end":2016,"column_start":12,"column_end":23},"name":"fract_floor","qualname":"<Rational>::fract_floor","value":"fn (mut self, mut floor: Integer) -> (Self, Integer)","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and floor parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":678687,"byte_end":678696,"line_start":2015,"line_end":2015,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":679369,"byte_end":679384,"line_start":2039,"line_end":2039,"column_start":12,"column_end":27},"name":"fract_floor_mut","qualname":"<Rational>::fract_floor_mut","value":"fn (&mut self, floor: &mut Integer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and floor parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":679348,"byte_end":679357,"line_start":2038,"line_end":2038,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":680957,"byte_end":680972,"line_start":2079,"line_end":2079,"column_start":12,"column_end":27},"name":"fract_floor_ref","qualname":"<Rational>::fract_floor_ref","value":"fn (&self) -> FractFloorIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and floor parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":680936,"byte_end":680945,"line_start":2078,"line_end":2078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":681584,"byte_end":681589,"line_start":2102,"line_end":2102,"column_start":12,"column_end":17},"name":"round","qualname":"<Rational>::round","value":"fn (mut self) -> Rational","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number to the nearest integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":681563,"byte_end":681572,"line_start":2101,"line_end":2101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":682147,"byte_end":682156,"line_start":2126,"line_end":2126,"column_start":12,"column_end":21},"name":"round_mut","qualname":"<Rational>::round_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number to the nearest integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":682126,"byte_end":682135,"line_start":2125,"line_end":2125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":683509,"byte_end":683518,"line_start":2163,"line_end":2163,"column_start":12,"column_end":21},"name":"round_ref","qualname":"<Rational>::round_ref","value":"fn (&self) -> RoundIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds the number to the nearest integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":683488,"byte_end":683497,"line_start":2162,"line_end":2162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":684105,"byte_end":684114,"line_start":2184,"line_end":2184,"column_start":12,"column_end":21},"name":"rem_round","qualname":"<Rational>::rem_round","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder after rounding to the nearest\n integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":684084,"byte_end":684093,"line_start":2183,"line_end":2183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":684679,"byte_end":684692,"line_start":2206,"line_end":2206,"column_start":12,"column_end":25},"name":"rem_round_mut","qualname":"<Rational>::rem_round_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder after rounding to the nearest\n integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":684658,"byte_end":684667,"line_start":2205,"line_end":2205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":685858,"byte_end":685871,"line_start":2239,"line_end":2239,"column_start":12,"column_end":25},"name":"rem_round_ref","qualname":"<Rational>::rem_round_ref","value":"fn (&self) -> RemRoundIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder after rounding to the nearest\n integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":685837,"byte_end":685846,"line_start":2238,"line_end":2238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":686871,"byte_end":686882,"line_start":2268,"line_end":2268,"column_start":12,"column_end":23},"name":"fract_round","qualname":"<Rational>::fract_round","value":"fn (mut self, mut round: Integer) -> (Self, Integer)","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and rounded parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":686850,"byte_end":686859,"line_start":2267,"line_end":2267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":687952,"byte_end":687967,"line_start":2300,"line_end":2300,"column_start":12,"column_end":27},"name":"fract_round_mut","qualname":"<Rational>::fract_round_mut","value":"fn (&mut self, round: &mut Integer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and round parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":687931,"byte_end":687940,"line_start":2299,"line_end":2299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":690050,"byte_end":690065,"line_start":2350,"line_end":2350,"column_start":12,"column_end":27},"name":"fract_round_ref","qualname":"<Rational>::fract_round_ref","value":"fn (&self) -> FractRoundIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the fractional and round parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":690029,"byte_end":690038,"line_start":2349,"line_end":2349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":690415,"byte_end":690421,"line_start":2365,"line_end":2365,"column_start":12,"column_end":18},"name":"square","qualname":"<Rational>::square","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":690394,"byte_end":690403,"line_start":2364,"line_end":2364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":690736,"byte_end":690746,"line_start":2381,"line_end":2381,"column_start":12,"column_end":22},"name":"square_mut","qualname":"<Rational>::square_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":690715,"byte_end":690724,"line_start":2380,"line_end":2380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":691553,"byte_end":691563,"line_start":2405,"line_end":2405,"column_start":12,"column_end":22},"name":"square_ref","qualname":"<Rational>::square_ref","value":"fn (&self) -> SquareIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":691532,"byte_end":691541,"line_start":2404,"line_end":2404,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17461},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":691678,"byte_end":691691,"line_start":2411,"line_end":2411,"column_start":12,"column_end":25},"name":"SumIncomplete","qualname":"::rational::big::SumIncomplete","value":"SumIncomplete {  }","parent":null,"children":[{"krate":0,"index":17464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17469},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":693023,"byte_end":693036,"line_start":2474,"line_end":2474,"column_start":12,"column_end":25},"name":"DotIncomplete","qualname":"::rational::big::DotIncomplete","value":"DotIncomplete {  }","parent":null,"children":[{"krate":0,"index":17472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17477},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":694641,"byte_end":694658,"line_start":2540,"line_end":2540,"column_start":12,"column_end":29},"name":"ProductIncomplete","qualname":"::rational::big::ProductIncomplete","value":"ProductIncomplete {  }","parent":null,"children":[{"krate":0,"index":17480}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17487},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":696714,"byte_end":696727,"line_start":2625,"line_end":2625,"column_start":45,"column_end":58},"name":"AbsIncomplete","qualname":"::rational::big::AbsIncomplete","value":"AbsIncomplete {  }","parent":null,"children":[{"krate":0,"index":17489}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17497},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":696772,"byte_end":696788,"line_start":2626,"line_end":2626,"column_start":40,"column_end":56},"name":"SignumIncomplete","qualname":"::rational::big::SignumIncomplete","value":"SignumIncomplete {  }","parent":null,"children":[{"krate":0,"index":17499}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17505},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":696823,"byte_end":696838,"line_start":2629,"line_end":2629,"column_start":12,"column_end":27},"name":"ClampIncomplete","qualname":"::rational::big::ClampIncomplete","value":"ClampIncomplete {  }","parent":null,"children":[{"krate":0,"index":17513},{"krate":0,"index":17514},{"krate":0,"index":17515}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17527},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698047,"byte_end":698062,"line_start":2668,"line_end":2668,"column_start":45,"column_end":60},"name":"RecipIncomplete","qualname":"::rational::big::RecipIncomplete","value":"RecipIncomplete {  }","parent":null,"children":[{"krate":0,"index":17529}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17537},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698106,"byte_end":698121,"line_start":2669,"line_end":2669,"column_start":39,"column_end":54},"name":"TruncIncomplete","qualname":"::rational::big::TruncIncomplete","value":"TruncIncomplete {  }","parent":null,"children":[{"krate":0,"index":17539}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17547},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698179,"byte_end":698197,"line_start":2670,"line_end":2670,"column_start":53,"column_end":71},"name":"RemTruncIncomplete","qualname":"::rational::big::RemTruncIncomplete","value":"RemTruncIncomplete {  }","parent":null,"children":[{"krate":0,"index":17549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17561},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698257,"byte_end":698277,"line_start":2671,"line_end":2671,"column_start":55,"column_end":75},"name":"FractTruncIncomplete","qualname":"::rational::big::FractTruncIncomplete","value":"FractTruncIncomplete {  }","parent":null,"children":[{"krate":0,"index":17563}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17569},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698320,"byte_end":698334,"line_start":2672,"line_end":2672,"column_start":38,"column_end":52},"name":"CeilIncomplete","qualname":"::rational::big::CeilIncomplete","value":"CeilIncomplete {  }","parent":null,"children":[{"krate":0,"index":17571}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17579},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698391,"byte_end":698408,"line_start":2673,"line_end":2673,"column_start":52,"column_end":69},"name":"RemCeilIncomplete","qualname":"::rational::big::RemCeilIncomplete","value":"RemCeilIncomplete {  }","parent":null,"children":[{"krate":0,"index":17581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17593},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698467,"byte_end":698486,"line_start":2674,"line_end":2674,"column_start":54,"column_end":73},"name":"FractCeilIncomplete","qualname":"::rational::big::FractCeilIncomplete","value":"FractCeilIncomplete {  }","parent":null,"children":[{"krate":0,"index":17595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17601},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698530,"byte_end":698545,"line_start":2675,"line_end":2675,"column_start":39,"column_end":54},"name":"FloorIncomplete","qualname":"::rational::big::FloorIncomplete","value":"FloorIncomplete {  }","parent":null,"children":[{"krate":0,"index":17603}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17611},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698603,"byte_end":698621,"line_start":2676,"line_end":2676,"column_start":53,"column_end":71},"name":"RemFloorIncomplete","qualname":"::rational::big::RemFloorIncomplete","value":"RemFloorIncomplete {  }","parent":null,"children":[{"krate":0,"index":17613}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17625},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698681,"byte_end":698701,"line_start":2677,"line_end":2677,"column_start":55,"column_end":75},"name":"FractFloorIncomplete","qualname":"::rational::big::FractFloorIncomplete","value":"FractFloorIncomplete {  }","parent":null,"children":[{"krate":0,"index":17627}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17633},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698745,"byte_end":698760,"line_start":2678,"line_end":2678,"column_start":39,"column_end":54},"name":"RoundIncomplete","qualname":"::rational::big::RoundIncomplete","value":"RoundIncomplete {  }","parent":null,"children":[{"krate":0,"index":17635}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17643},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698818,"byte_end":698836,"line_start":2679,"line_end":2679,"column_start":53,"column_end":71},"name":"RemRoundIncomplete","qualname":"::rational::big::RemRoundIncomplete","value":"RemRoundIncomplete {  }","parent":null,"children":[{"krate":0,"index":17645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17657},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698896,"byte_end":698916,"line_start":2680,"line_end":2680,"column_start":55,"column_end":75},"name":"FractRoundIncomplete","qualname":"::rational::big::FractRoundIncomplete","value":"FractRoundIncomplete {  }","parent":null,"children":[{"krate":0,"index":17659}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17665},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":698969,"byte_end":698985,"line_start":2681,"line_end":2681,"column_start":48,"column_end":64},"name":"SquareIncomplete","qualname":"::rational::big::SquareIncomplete","value":"SquareIncomplete {  }","parent":null,"children":[{"krate":0,"index":17667}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17673},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":699041,"byte_end":699055,"line_start":2685,"line_end":2685,"column_start":12,"column_end":26},"name":"BorrowRational","qualname":"::rational::big::BorrowRational","value":"BorrowRational {  }","parent":null,"children":[{"krate":0,"index":17675},{"krate":0,"index":17676}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":699009,"byte_end":699029,"line_start":2684,"line_end":2684,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":17680},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":700342,"byte_end":700357,"line_start":2731,"line_end":2731,"column_start":12,"column_end":27},"name":"ParseIncomplete","qualname":"::rational::big::ParseIncomplete","value":"ParseIncomplete {  }","parent":null,"children":[{"krate":0,"index":17681},{"krate":0,"index":17682},{"krate":0,"index":17683},{"krate":0,"index":17684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17689},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":704527,"byte_end":704545,"line_start":2873,"line_end":2873,"column_start":12,"column_end":30},"name":"ParseRationalError","qualname":"::rational::big::ParseRationalError","value":"ParseRationalError {  }","parent":null,"children":[{"krate":0,"index":17690}],"decl_id":null,"docs":"An error which can be returned when parsing a [`Rational`] number.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":724179,"byte_end":724192,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"SmallRational","qualname":"::rational::small::SmallRational","value":"SmallRational {  }","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800}],"decl_id":null,"docs":"A small rational number that does not require any memory allocation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":725436,"byte_end":725439,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallRational>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`SmallRational`] with value 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":725415,"byte_end":725424,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":727410,"byte_end":727437,"line_start":177,"line_end":177,"column_start":19,"column_end":46},"name":"as_nonreallocating_rational","qualname":"<SmallRational>::as_nonreallocating_rational","value":"fn (&mut self) -> &mut Rational","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a [`Rational`] number for\n simple operations that do not need to allocate more space for\n the numerator or denominator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":727382,"byte_end":727391,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":728352,"byte_end":728366,"line_start":203,"line_end":203,"column_start":19,"column_end":33},"name":"from_canonical","qualname":"<SmallRational>::from_canonical","value":"fn <Num, Den> (num: Num, den: Den) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`SmallRational`] from a numerator and denominator,\n assuming they are in canonical form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":729321,"byte_end":729337,"line_start":233,"line_end":233,"column_start":19,"column_end":35},"name":"assign_canonical","qualname":"<SmallRational>::assign_canonical","value":"fn <Num, Den> (&mut self, num: Num, den: Den) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assigns a numerator and denominator to a [`SmallRational`],\n assuming they are in canonical form.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19093},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/mod.rs","byte_start":589771,"byte_end":589788,"line_start":58,"line_end":58,"column_start":12,"column_end":29},"name":"TryFromFloatError","qualname":"::rational::TryFromFloatError","value":"TryFromFloatError {  }","parent":null,"children":[{"krate":0,"index":19094}],"decl_id":null,"docs":"An error which can be returned when a checked conversion from a\nfloating-point number to a [`Rational`] number fails.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":2075},{"krate":0,"index":2689},{"krate":0,"index":2718},{"krate":0,"index":2744},{"krate":0,"index":2820},{"krate":0,"index":2918},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":26863},{"krate":0,"index":26890},{"krate":0,"index":26889},{"krate":0,"index":26887},{"krate":0,"index":26884},{"krate":0,"index":26885},{"krate":0,"index":26881},{"krate":0,"index":26879},{"krate":0,"index":26876},{"krate":0,"index":26877},{"krate":0,"index":26874},{"krate":0,"index":2938},{"krate":0,"index":26892},{"krate":0,"index":26919},{"krate":0,"index":26918},{"krate":0,"index":26916},{"krate":0,"index":26913},{"krate":0,"index":26914},{"krate":0,"index":26910},{"krate":0,"index":26908},{"krate":0,"index":26905},{"krate":0,"index":26906},{"krate":0,"index":26903},{"krate":0,"index":26921},{"krate":0,"index":26950},{"krate":0,"index":26949},{"krate":0,"index":26947},{"krate":0,"index":26944},{"krate":0,"index":26945},{"krate":0,"index":26941},{"krate":0,"index":26939},{"krate":0,"index":26936},{"krate":0,"index":26937},{"krate":0,"index":26934},{"krate":0,"index":26952},{"krate":0,"index":26977},{"krate":0,"index":26976},{"krate":0,"index":26974},{"krate":0,"index":26971},{"krate":0,"index":26972},{"krate":0,"index":26968},{"krate":0,"index":26966},{"krate":0,"index":26963},{"krate":0,"index":26964},{"krate":0,"index":26961},{"krate":0,"index":2940}],"decl_id":null,"docs":"Multi-precision floating-point numbers with correct rounding.","sig":null,"attributes":[{"value":"cfg(feature = \"float\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17171,"byte_end":17196,"line_start":461,"line_end":461,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":19100},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":763937,"byte_end":763950,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"NegIncomplete","qualname":"::float::arith::NegIncomplete","value":"NegIncomplete {  }","parent":null,"children":[{"krate":0,"index":19102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19147},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":767641,"byte_end":767654,"line_start":189,"line_end":189,"column_start":5,"column_end":18},"name":"AddIncomplete","qualname":"::float::arith::AddIncomplete","value":"AddIncomplete {  }","parent":null,"children":[{"krate":0,"index":19149},{"krate":0,"index":19150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19195},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":767849,"byte_end":767862,"line_start":198,"line_end":198,"column_start":5,"column_end":18},"name":"SubIncomplete","qualname":"::float::arith::SubIncomplete","value":"SubIncomplete {  }","parent":null,"children":[{"krate":0,"index":19197},{"krate":0,"index":19198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19243},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":768057,"byte_end":768070,"line_start":207,"line_end":207,"column_start":5,"column_end":18},"name":"MulIncomplete","qualname":"::float::arith::MulIncomplete","value":"MulIncomplete {  }","parent":null,"children":[{"krate":0,"index":19245},{"krate":0,"index":19246}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19291},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":768265,"byte_end":768278,"line_start":216,"line_end":216,"column_start":5,"column_end":18},"name":"DivIncomplete","qualname":"::float::arith::DivIncomplete","value":"DivIncomplete {  }","parent":null,"children":[{"krate":0,"index":19293},{"krate":0,"index":19294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19339},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":768474,"byte_end":768487,"line_start":225,"line_end":225,"column_start":5,"column_end":18},"name":"RemIncomplete","qualname":"::float::arith::RemIncomplete","value":"RemIncomplete {  }","parent":null,"children":[{"krate":0,"index":19341},{"krate":0,"index":19342}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19387},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":768682,"byte_end":768695,"line_start":234,"line_end":234,"column_start":5,"column_end":18},"name":"PowIncomplete","qualname":"::float::arith::PowIncomplete","value":"PowIncomplete {  }","parent":null,"children":[{"krate":0,"index":19389},{"krate":0,"index":19390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19458},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":768929,"byte_end":768949,"line_start":246,"line_end":246,"column_start":5,"column_end":25},"name":"AddIntegerIncomplete","qualname":"::float::arith::AddIntegerIncomplete","value":"AddIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19460},{"krate":0,"index":19461}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19465},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":768951,"byte_end":768976,"line_start":246,"line_end":246,"column_start":27,"column_end":52},"name":"AddOwnedIntegerIncomplete","qualname":"::float::arith::AddOwnedIntegerIncomplete","value":"AddOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19467},{"krate":0,"index":19468}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19548},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769225,"byte_end":769245,"line_start":257,"line_end":257,"column_start":5,"column_end":25},"name":"SubIntegerIncomplete","qualname":"::float::arith::SubIntegerIncomplete","value":"SubIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19550},{"krate":0,"index":19551}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19555},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769247,"byte_end":769272,"line_start":257,"line_end":257,"column_start":27,"column_end":52},"name":"SubOwnedIntegerIncomplete","qualname":"::float::arith::SubOwnedIntegerIncomplete","value":"SubOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19557},{"krate":0,"index":19558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19562},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769278,"byte_end":769302,"line_start":258,"line_end":258,"column_start":5,"column_end":29},"name":"SubFromIntegerIncomplete","qualname":"::float::arith::SubFromIntegerIncomplete","value":"SubFromIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19564},{"krate":0,"index":19565}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19569},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769304,"byte_end":769333,"line_start":258,"line_end":258,"column_start":31,"column_end":60},"name":"SubFromOwnedIntegerIncomplete","qualname":"::float::arith::SubFromOwnedIntegerIncomplete","value":"SubFromOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19571},{"krate":0,"index":19572}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19640},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769566,"byte_end":769586,"line_start":269,"line_end":269,"column_start":5,"column_end":25},"name":"MulIntegerIncomplete","qualname":"::float::arith::MulIntegerIncomplete","value":"MulIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19642},{"krate":0,"index":19643}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19647},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769588,"byte_end":769613,"line_start":269,"line_end":269,"column_start":27,"column_end":52},"name":"MulOwnedIntegerIncomplete","qualname":"::float::arith::MulOwnedIntegerIncomplete","value":"MulOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19649},{"krate":0,"index":19650}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19730},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769863,"byte_end":769883,"line_start":280,"line_end":280,"column_start":5,"column_end":25},"name":"DivIntegerIncomplete","qualname":"::float::arith::DivIntegerIncomplete","value":"DivIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19732},{"krate":0,"index":19733}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19737},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769885,"byte_end":769910,"line_start":280,"line_end":280,"column_start":27,"column_end":52},"name":"DivOwnedIntegerIncomplete","qualname":"::float::arith::DivOwnedIntegerIncomplete","value":"DivOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19739},{"krate":0,"index":19740}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19744},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769916,"byte_end":769940,"line_start":281,"line_end":281,"column_start":5,"column_end":29},"name":"DivFromIntegerIncomplete","qualname":"::float::arith::DivFromIntegerIncomplete","value":"DivFromIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19746},{"krate":0,"index":19747}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19751},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":769942,"byte_end":769971,"line_start":281,"line_end":281,"column_start":31,"column_end":60},"name":"DivFromOwnedIntegerIncomplete","qualname":"::float::arith::DivFromOwnedIntegerIncomplete","value":"DivFromOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19753},{"krate":0,"index":19754}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19796},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770144,"byte_end":770164,"line_start":290,"line_end":290,"column_start":5,"column_end":25},"name":"PowIntegerIncomplete","qualname":"::float::arith::PowIntegerIncomplete","value":"PowIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19798},{"krate":0,"index":19799}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19803},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770166,"byte_end":770191,"line_start":290,"line_end":290,"column_start":27,"column_end":52},"name":"PowOwnedIntegerIncomplete","qualname":"::float::arith::PowOwnedIntegerIncomplete","value":"PowOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":19805},{"krate":0,"index":19806}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19874},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770427,"byte_end":770448,"line_start":302,"line_end":302,"column_start":5,"column_end":26},"name":"AddRationalIncomplete","qualname":"::float::arith::AddRationalIncomplete","value":"AddRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":19876},{"krate":0,"index":19877}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19881},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770450,"byte_end":770476,"line_start":302,"line_end":302,"column_start":28,"column_end":54},"name":"AddOwnedRationalIncomplete","qualname":"::float::arith::AddOwnedRationalIncomplete","value":"AddOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":19883},{"krate":0,"index":19884}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19964},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770728,"byte_end":770749,"line_start":313,"line_end":313,"column_start":5,"column_end":26},"name":"SubRationalIncomplete","qualname":"::float::arith::SubRationalIncomplete","value":"SubRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":19966},{"krate":0,"index":19967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19971},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770751,"byte_end":770777,"line_start":313,"line_end":313,"column_start":28,"column_end":54},"name":"SubOwnedRationalIncomplete","qualname":"::float::arith::SubOwnedRationalIncomplete","value":"SubOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":19973},{"krate":0,"index":19974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19978},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770783,"byte_end":770808,"line_start":314,"line_end":314,"column_start":5,"column_end":30},"name":"SubFromRationalIncomplete","qualname":"::float::arith::SubFromRationalIncomplete","value":"SubFromRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":19980},{"krate":0,"index":19981}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19985},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":770810,"byte_end":770840,"line_start":314,"line_end":314,"column_start":32,"column_end":62},"name":"SubFromOwnedRationalIncomplete","qualname":"::float::arith::SubFromOwnedRationalIncomplete","value":"SubFromOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":19987},{"krate":0,"index":19988}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20056},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":771075,"byte_end":771096,"line_start":325,"line_end":325,"column_start":5,"column_end":26},"name":"MulRationalIncomplete","qualname":"::float::arith::MulRationalIncomplete","value":"MulRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":20058},{"krate":0,"index":20059}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20063},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":771098,"byte_end":771124,"line_start":325,"line_end":325,"column_start":28,"column_end":54},"name":"MulOwnedRationalIncomplete","qualname":"::float::arith::MulOwnedRationalIncomplete","value":"MulOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":20065},{"krate":0,"index":20066}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20146},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":771376,"byte_end":771397,"line_start":336,"line_end":336,"column_start":5,"column_end":26},"name":"DivRationalIncomplete","qualname":"::float::arith::DivRationalIncomplete","value":"DivRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":20148},{"krate":0,"index":20149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20153},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":771399,"byte_end":771425,"line_start":336,"line_end":336,"column_start":28,"column_end":54},"name":"DivOwnedRationalIncomplete","qualname":"::float::arith::DivOwnedRationalIncomplete","value":"DivOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":20155},{"krate":0,"index":20156}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20160},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":771431,"byte_end":771456,"line_start":337,"line_end":337,"column_start":5,"column_end":30},"name":"DivFromRationalIncomplete","qualname":"::float::arith::DivFromRationalIncomplete","value":"DivFromRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":20162},{"krate":0,"index":20163}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20167},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":771458,"byte_end":771488,"line_start":337,"line_end":337,"column_start":32,"column_end":62},"name":"DivFromOwnedRationalIncomplete","qualname":"::float::arith::DivFromOwnedRationalIncomplete","value":"DivFromOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":20169},{"krate":0,"index":20170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20516},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773751,"byte_end":773766,"line_start":411,"line_end":411,"column_start":9,"column_end":24},"name":"AddI8Incomplete","qualname":"::float::arith::AddI8Incomplete","value":"AddI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":20518},{"krate":0,"index":20519}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20553},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773777,"byte_end":773793,"line_start":412,"line_end":412,"column_start":10,"column_end":26},"name":"AddI16Incomplete","qualname":"::float::arith::AddI16Incomplete","value":"AddI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":20555},{"krate":0,"index":20556}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20590},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773804,"byte_end":773820,"line_start":413,"line_end":413,"column_start":10,"column_end":26},"name":"AddI32Incomplete","qualname":"::float::arith::AddI32Incomplete","value":"AddI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":20592},{"krate":0,"index":20593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20627},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773831,"byte_end":773847,"line_start":414,"line_end":414,"column_start":10,"column_end":26},"name":"AddI64Incomplete","qualname":"::float::arith::AddI64Incomplete","value":"AddI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":20629},{"krate":0,"index":20630}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20664},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773859,"byte_end":773876,"line_start":415,"line_end":415,"column_start":11,"column_end":28},"name":"AddI128Incomplete","qualname":"::float::arith::AddI128Incomplete","value":"AddI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":20666},{"krate":0,"index":20667}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20701},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773886,"byte_end":773901,"line_start":416,"line_end":416,"column_start":9,"column_end":24},"name":"AddU8Incomplete","qualname":"::float::arith::AddU8Incomplete","value":"AddU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":20703},{"krate":0,"index":20704}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20738},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773912,"byte_end":773928,"line_start":417,"line_end":417,"column_start":10,"column_end":26},"name":"AddU16Incomplete","qualname":"::float::arith::AddU16Incomplete","value":"AddU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":20740},{"krate":0,"index":20741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20775},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773939,"byte_end":773955,"line_start":418,"line_end":418,"column_start":10,"column_end":26},"name":"AddU32Incomplete","qualname":"::float::arith::AddU32Incomplete","value":"AddU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":20777},{"krate":0,"index":20778}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20812},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773966,"byte_end":773982,"line_start":419,"line_end":419,"column_start":10,"column_end":26},"name":"AddU64Incomplete","qualname":"::float::arith::AddU64Incomplete","value":"AddU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":20814},{"krate":0,"index":20815}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20849},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":773994,"byte_end":774011,"line_start":420,"line_end":420,"column_start":11,"column_end":28},"name":"AddU128Incomplete","qualname":"::float::arith::AddU128Incomplete","value":"AddU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":20851},{"krate":0,"index":20852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20886},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774022,"byte_end":774038,"line_start":421,"line_end":421,"column_start":10,"column_end":26},"name":"AddF32Incomplete","qualname":"::float::arith::AddF32Incomplete","value":"AddF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":20888},{"krate":0,"index":20889}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20923},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774049,"byte_end":774065,"line_start":422,"line_end":422,"column_start":10,"column_end":26},"name":"AddF64Incomplete","qualname":"::float::arith::AddF64Incomplete","value":"AddF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":20925},{"krate":0,"index":20926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21320},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774290,"byte_end":774305,"line_start":431,"line_end":431,"column_start":9,"column_end":24},"name":"SubI8Incomplete","qualname":"::float::arith::SubI8Incomplete","value":"SubI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":21322},{"krate":0,"index":21323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21327},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774307,"byte_end":774326,"line_start":431,"line_end":431,"column_start":26,"column_end":45},"name":"SubFromI8Incomplete","qualname":"::float::arith::SubFromI8Incomplete","value":"SubFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":21329},{"krate":0,"index":21330}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21364},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774337,"byte_end":774353,"line_start":432,"line_end":432,"column_start":10,"column_end":26},"name":"SubI16Incomplete","qualname":"::float::arith::SubI16Incomplete","value":"SubI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":21366},{"krate":0,"index":21367}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21371},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774355,"byte_end":774375,"line_start":432,"line_end":432,"column_start":28,"column_end":48},"name":"SubFromI16Incomplete","qualname":"::float::arith::SubFromI16Incomplete","value":"SubFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":21373},{"krate":0,"index":21374}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21408},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774386,"byte_end":774402,"line_start":433,"line_end":433,"column_start":10,"column_end":26},"name":"SubI32Incomplete","qualname":"::float::arith::SubI32Incomplete","value":"SubI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":21410},{"krate":0,"index":21411}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21415},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774404,"byte_end":774424,"line_start":433,"line_end":433,"column_start":28,"column_end":48},"name":"SubFromI32Incomplete","qualname":"::float::arith::SubFromI32Incomplete","value":"SubFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":21417},{"krate":0,"index":21418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21452},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774435,"byte_end":774451,"line_start":434,"line_end":434,"column_start":10,"column_end":26},"name":"SubI64Incomplete","qualname":"::float::arith::SubI64Incomplete","value":"SubI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":21454},{"krate":0,"index":21455}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21459},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774453,"byte_end":774473,"line_start":434,"line_end":434,"column_start":28,"column_end":48},"name":"SubFromI64Incomplete","qualname":"::float::arith::SubFromI64Incomplete","value":"SubFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":21461},{"krate":0,"index":21462}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21496},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774485,"byte_end":774502,"line_start":435,"line_end":435,"column_start":11,"column_end":28},"name":"SubI128Incomplete","qualname":"::float::arith::SubI128Incomplete","value":"SubI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":21498},{"krate":0,"index":21499}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21503},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774504,"byte_end":774525,"line_start":435,"line_end":435,"column_start":30,"column_end":51},"name":"SubFromI128Incomplete","qualname":"::float::arith::SubFromI128Incomplete","value":"SubFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":21505},{"krate":0,"index":21506}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21540},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774535,"byte_end":774550,"line_start":436,"line_end":436,"column_start":9,"column_end":24},"name":"SubU8Incomplete","qualname":"::float::arith::SubU8Incomplete","value":"SubU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":21542},{"krate":0,"index":21543}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21547},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774552,"byte_end":774571,"line_start":436,"line_end":436,"column_start":26,"column_end":45},"name":"SubFromU8Incomplete","qualname":"::float::arith::SubFromU8Incomplete","value":"SubFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":21549},{"krate":0,"index":21550}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21584},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774582,"byte_end":774598,"line_start":437,"line_end":437,"column_start":10,"column_end":26},"name":"SubU16Incomplete","qualname":"::float::arith::SubU16Incomplete","value":"SubU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":21586},{"krate":0,"index":21587}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21591},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774600,"byte_end":774620,"line_start":437,"line_end":437,"column_start":28,"column_end":48},"name":"SubFromU16Incomplete","qualname":"::float::arith::SubFromU16Incomplete","value":"SubFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":21593},{"krate":0,"index":21594}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21628},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774631,"byte_end":774647,"line_start":438,"line_end":438,"column_start":10,"column_end":26},"name":"SubU32Incomplete","qualname":"::float::arith::SubU32Incomplete","value":"SubU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":21630},{"krate":0,"index":21631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21635},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774649,"byte_end":774669,"line_start":438,"line_end":438,"column_start":28,"column_end":48},"name":"SubFromU32Incomplete","qualname":"::float::arith::SubFromU32Incomplete","value":"SubFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":21637},{"krate":0,"index":21638}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21672},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774680,"byte_end":774696,"line_start":439,"line_end":439,"column_start":10,"column_end":26},"name":"SubU64Incomplete","qualname":"::float::arith::SubU64Incomplete","value":"SubU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":21674},{"krate":0,"index":21675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21679},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774698,"byte_end":774718,"line_start":439,"line_end":439,"column_start":28,"column_end":48},"name":"SubFromU64Incomplete","qualname":"::float::arith::SubFromU64Incomplete","value":"SubFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":21681},{"krate":0,"index":21682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21716},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774730,"byte_end":774747,"line_start":440,"line_end":440,"column_start":11,"column_end":28},"name":"SubU128Incomplete","qualname":"::float::arith::SubU128Incomplete","value":"SubU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":21718},{"krate":0,"index":21719}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21723},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774749,"byte_end":774770,"line_start":440,"line_end":440,"column_start":30,"column_end":51},"name":"SubFromU128Incomplete","qualname":"::float::arith::SubFromU128Incomplete","value":"SubFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":21725},{"krate":0,"index":21726}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21760},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774781,"byte_end":774797,"line_start":441,"line_end":441,"column_start":10,"column_end":26},"name":"SubF32Incomplete","qualname":"::float::arith::SubF32Incomplete","value":"SubF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":21762},{"krate":0,"index":21763}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21767},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774799,"byte_end":774819,"line_start":441,"line_end":441,"column_start":28,"column_end":48},"name":"SubFromF32Incomplete","qualname":"::float::arith::SubFromF32Incomplete","value":"SubFromF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":21769},{"krate":0,"index":21770}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21804},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774830,"byte_end":774846,"line_start":442,"line_end":442,"column_start":10,"column_end":26},"name":"SubF64Incomplete","qualname":"::float::arith::SubF64Incomplete","value":"SubF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":21806},{"krate":0,"index":21807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21811},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":774848,"byte_end":774868,"line_start":442,"line_end":442,"column_start":28,"column_end":48},"name":"SubFromF64Incomplete","qualname":"::float::arith::SubFromF64Incomplete","value":"SubFromF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":21813},{"krate":0,"index":21814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22160},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775071,"byte_end":775086,"line_start":451,"line_end":451,"column_start":9,"column_end":24},"name":"MulI8Incomplete","qualname":"::float::arith::MulI8Incomplete","value":"MulI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":22162},{"krate":0,"index":22163}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22197},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775097,"byte_end":775113,"line_start":452,"line_end":452,"column_start":10,"column_end":26},"name":"MulI16Incomplete","qualname":"::float::arith::MulI16Incomplete","value":"MulI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":22199},{"krate":0,"index":22200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22234},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775124,"byte_end":775140,"line_start":453,"line_end":453,"column_start":10,"column_end":26},"name":"MulI32Incomplete","qualname":"::float::arith::MulI32Incomplete","value":"MulI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":22236},{"krate":0,"index":22237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22271},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775151,"byte_end":775167,"line_start":454,"line_end":454,"column_start":10,"column_end":26},"name":"MulI64Incomplete","qualname":"::float::arith::MulI64Incomplete","value":"MulI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":22273},{"krate":0,"index":22274}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22308},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775179,"byte_end":775196,"line_start":455,"line_end":455,"column_start":11,"column_end":28},"name":"MulI128Incomplete","qualname":"::float::arith::MulI128Incomplete","value":"MulI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":22310},{"krate":0,"index":22311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22345},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775206,"byte_end":775221,"line_start":456,"line_end":456,"column_start":9,"column_end":24},"name":"MulU8Incomplete","qualname":"::float::arith::MulU8Incomplete","value":"MulU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":22347},{"krate":0,"index":22348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22382},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775232,"byte_end":775248,"line_start":457,"line_end":457,"column_start":10,"column_end":26},"name":"MulU16Incomplete","qualname":"::float::arith::MulU16Incomplete","value":"MulU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":22384},{"krate":0,"index":22385}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22419},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775259,"byte_end":775275,"line_start":458,"line_end":458,"column_start":10,"column_end":26},"name":"MulU32Incomplete","qualname":"::float::arith::MulU32Incomplete","value":"MulU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":22421},{"krate":0,"index":22422}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22456},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775286,"byte_end":775302,"line_start":459,"line_end":459,"column_start":10,"column_end":26},"name":"MulU64Incomplete","qualname":"::float::arith::MulU64Incomplete","value":"MulU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":22458},{"krate":0,"index":22459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22493},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775314,"byte_end":775331,"line_start":460,"line_end":460,"column_start":11,"column_end":28},"name":"MulU128Incomplete","qualname":"::float::arith::MulU128Incomplete","value":"MulU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":22495},{"krate":0,"index":22496}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22530},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775342,"byte_end":775358,"line_start":461,"line_end":461,"column_start":10,"column_end":26},"name":"MulF32Incomplete","qualname":"::float::arith::MulF32Incomplete","value":"MulF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":22532},{"krate":0,"index":22533}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22567},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775369,"byte_end":775385,"line_start":462,"line_end":462,"column_start":10,"column_end":26},"name":"MulF64Incomplete","qualname":"::float::arith::MulF64Incomplete","value":"MulF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":22569},{"krate":0,"index":22570}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22964},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775610,"byte_end":775625,"line_start":471,"line_end":471,"column_start":9,"column_end":24},"name":"DivI8Incomplete","qualname":"::float::arith::DivI8Incomplete","value":"DivI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":22966},{"krate":0,"index":22967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22971},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775627,"byte_end":775646,"line_start":471,"line_end":471,"column_start":26,"column_end":45},"name":"DivFromI8Incomplete","qualname":"::float::arith::DivFromI8Incomplete","value":"DivFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":22973},{"krate":0,"index":22974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23008},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775657,"byte_end":775673,"line_start":472,"line_end":472,"column_start":10,"column_end":26},"name":"DivI16Incomplete","qualname":"::float::arith::DivI16Incomplete","value":"DivI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":23010},{"krate":0,"index":23011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23015},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775675,"byte_end":775695,"line_start":472,"line_end":472,"column_start":28,"column_end":48},"name":"DivFromI16Incomplete","qualname":"::float::arith::DivFromI16Incomplete","value":"DivFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":23017},{"krate":0,"index":23018}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23052},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775706,"byte_end":775722,"line_start":473,"line_end":473,"column_start":10,"column_end":26},"name":"DivI32Incomplete","qualname":"::float::arith::DivI32Incomplete","value":"DivI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23054},{"krate":0,"index":23055}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23059},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775724,"byte_end":775744,"line_start":473,"line_end":473,"column_start":28,"column_end":48},"name":"DivFromI32Incomplete","qualname":"::float::arith::DivFromI32Incomplete","value":"DivFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23061},{"krate":0,"index":23062}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23096},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775755,"byte_end":775771,"line_start":474,"line_end":474,"column_start":10,"column_end":26},"name":"DivI64Incomplete","qualname":"::float::arith::DivI64Incomplete","value":"DivI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23098},{"krate":0,"index":23099}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23103},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775773,"byte_end":775793,"line_start":474,"line_end":474,"column_start":28,"column_end":48},"name":"DivFromI64Incomplete","qualname":"::float::arith::DivFromI64Incomplete","value":"DivFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23105},{"krate":0,"index":23106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23140},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775805,"byte_end":775822,"line_start":475,"line_end":475,"column_start":11,"column_end":28},"name":"DivI128Incomplete","qualname":"::float::arith::DivI128Incomplete","value":"DivI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":23142},{"krate":0,"index":23143}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23147},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775824,"byte_end":775845,"line_start":475,"line_end":475,"column_start":30,"column_end":51},"name":"DivFromI128Incomplete","qualname":"::float::arith::DivFromI128Incomplete","value":"DivFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":23149},{"krate":0,"index":23150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23184},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775855,"byte_end":775870,"line_start":476,"line_end":476,"column_start":9,"column_end":24},"name":"DivU8Incomplete","qualname":"::float::arith::DivU8Incomplete","value":"DivU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":23186},{"krate":0,"index":23187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23191},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775872,"byte_end":775891,"line_start":476,"line_end":476,"column_start":26,"column_end":45},"name":"DivFromU8Incomplete","qualname":"::float::arith::DivFromU8Incomplete","value":"DivFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":23193},{"krate":0,"index":23194}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23228},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775902,"byte_end":775918,"line_start":477,"line_end":477,"column_start":10,"column_end":26},"name":"DivU16Incomplete","qualname":"::float::arith::DivU16Incomplete","value":"DivU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":23230},{"krate":0,"index":23231}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23235},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775920,"byte_end":775940,"line_start":477,"line_end":477,"column_start":28,"column_end":48},"name":"DivFromU16Incomplete","qualname":"::float::arith::DivFromU16Incomplete","value":"DivFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":23237},{"krate":0,"index":23238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23272},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775951,"byte_end":775967,"line_start":478,"line_end":478,"column_start":10,"column_end":26},"name":"DivU32Incomplete","qualname":"::float::arith::DivU32Incomplete","value":"DivU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23274},{"krate":0,"index":23275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23279},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":775969,"byte_end":775989,"line_start":478,"line_end":478,"column_start":28,"column_end":48},"name":"DivFromU32Incomplete","qualname":"::float::arith::DivFromU32Incomplete","value":"DivFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23281},{"krate":0,"index":23282}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23316},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776000,"byte_end":776016,"line_start":479,"line_end":479,"column_start":10,"column_end":26},"name":"DivU64Incomplete","qualname":"::float::arith::DivU64Incomplete","value":"DivU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23318},{"krate":0,"index":23319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23323},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776018,"byte_end":776038,"line_start":479,"line_end":479,"column_start":28,"column_end":48},"name":"DivFromU64Incomplete","qualname":"::float::arith::DivFromU64Incomplete","value":"DivFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23325},{"krate":0,"index":23326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23360},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776050,"byte_end":776067,"line_start":480,"line_end":480,"column_start":11,"column_end":28},"name":"DivU128Incomplete","qualname":"::float::arith::DivU128Incomplete","value":"DivU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":23362},{"krate":0,"index":23363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23367},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776069,"byte_end":776090,"line_start":480,"line_end":480,"column_start":30,"column_end":51},"name":"DivFromU128Incomplete","qualname":"::float::arith::DivFromU128Incomplete","value":"DivFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":23369},{"krate":0,"index":23370}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23404},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776101,"byte_end":776117,"line_start":481,"line_end":481,"column_start":10,"column_end":26},"name":"DivF32Incomplete","qualname":"::float::arith::DivF32Incomplete","value":"DivF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23406},{"krate":0,"index":23407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23411},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776119,"byte_end":776139,"line_start":481,"line_end":481,"column_start":28,"column_end":48},"name":"DivFromF32Incomplete","qualname":"::float::arith::DivFromF32Incomplete","value":"DivFromF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23413},{"krate":0,"index":23414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23448},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776150,"byte_end":776166,"line_start":482,"line_end":482,"column_start":10,"column_end":26},"name":"DivF64Incomplete","qualname":"::float::arith::DivF64Incomplete","value":"DivF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23450},{"krate":0,"index":23451}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23455},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776168,"byte_end":776188,"line_start":482,"line_end":482,"column_start":28,"column_end":48},"name":"DivFromF64Incomplete","qualname":"::float::arith::DivFromF64Incomplete","value":"DivFromF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23457},{"krate":0,"index":23458}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23852},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776413,"byte_end":776428,"line_start":491,"line_end":491,"column_start":9,"column_end":24},"name":"RemI8Incomplete","qualname":"::float::arith::RemI8Incomplete","value":"RemI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":23854},{"krate":0,"index":23855}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23859},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776430,"byte_end":776449,"line_start":491,"line_end":491,"column_start":26,"column_end":45},"name":"RemFromI8Incomplete","qualname":"::float::arith::RemFromI8Incomplete","value":"RemFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":23861},{"krate":0,"index":23862}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23896},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776460,"byte_end":776476,"line_start":492,"line_end":492,"column_start":10,"column_end":26},"name":"RemI16Incomplete","qualname":"::float::arith::RemI16Incomplete","value":"RemI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":23898},{"krate":0,"index":23899}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23903},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776478,"byte_end":776498,"line_start":492,"line_end":492,"column_start":28,"column_end":48},"name":"RemFromI16Incomplete","qualname":"::float::arith::RemFromI16Incomplete","value":"RemFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":23905},{"krate":0,"index":23906}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23940},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776509,"byte_end":776525,"line_start":493,"line_end":493,"column_start":10,"column_end":26},"name":"RemI32Incomplete","qualname":"::float::arith::RemI32Incomplete","value":"RemI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23942},{"krate":0,"index":23943}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23947},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776527,"byte_end":776547,"line_start":493,"line_end":493,"column_start":28,"column_end":48},"name":"RemFromI32Incomplete","qualname":"::float::arith::RemFromI32Incomplete","value":"RemFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":23949},{"krate":0,"index":23950}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23984},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776558,"byte_end":776574,"line_start":494,"line_end":494,"column_start":10,"column_end":26},"name":"RemI64Incomplete","qualname":"::float::arith::RemI64Incomplete","value":"RemI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23986},{"krate":0,"index":23987}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23991},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776576,"byte_end":776596,"line_start":494,"line_end":494,"column_start":28,"column_end":48},"name":"RemFromI64Incomplete","qualname":"::float::arith::RemFromI64Incomplete","value":"RemFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":23993},{"krate":0,"index":23994}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24028},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776608,"byte_end":776625,"line_start":495,"line_end":495,"column_start":11,"column_end":28},"name":"RemI128Incomplete","qualname":"::float::arith::RemI128Incomplete","value":"RemI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":24030},{"krate":0,"index":24031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24035},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776627,"byte_end":776648,"line_start":495,"line_end":495,"column_start":30,"column_end":51},"name":"RemFromI128Incomplete","qualname":"::float::arith::RemFromI128Incomplete","value":"RemFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":24037},{"krate":0,"index":24038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24072},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776658,"byte_end":776673,"line_start":496,"line_end":496,"column_start":9,"column_end":24},"name":"RemU8Incomplete","qualname":"::float::arith::RemU8Incomplete","value":"RemU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":24074},{"krate":0,"index":24075}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24079},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776675,"byte_end":776694,"line_start":496,"line_end":496,"column_start":26,"column_end":45},"name":"RemFromU8Incomplete","qualname":"::float::arith::RemFromU8Incomplete","value":"RemFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":24081},{"krate":0,"index":24082}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24116},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776705,"byte_end":776721,"line_start":497,"line_end":497,"column_start":10,"column_end":26},"name":"RemU16Incomplete","qualname":"::float::arith::RemU16Incomplete","value":"RemU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":24118},{"krate":0,"index":24119}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24123},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776723,"byte_end":776743,"line_start":497,"line_end":497,"column_start":28,"column_end":48},"name":"RemFromU16Incomplete","qualname":"::float::arith::RemFromU16Incomplete","value":"RemFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":24125},{"krate":0,"index":24126}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24160},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776754,"byte_end":776770,"line_start":498,"line_end":498,"column_start":10,"column_end":26},"name":"RemU32Incomplete","qualname":"::float::arith::RemU32Incomplete","value":"RemU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":24162},{"krate":0,"index":24163}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24167},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776772,"byte_end":776792,"line_start":498,"line_end":498,"column_start":28,"column_end":48},"name":"RemFromU32Incomplete","qualname":"::float::arith::RemFromU32Incomplete","value":"RemFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":24169},{"krate":0,"index":24170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24204},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776803,"byte_end":776819,"line_start":499,"line_end":499,"column_start":10,"column_end":26},"name":"RemU64Incomplete","qualname":"::float::arith::RemU64Incomplete","value":"RemU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":24206},{"krate":0,"index":24207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24211},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776821,"byte_end":776841,"line_start":499,"line_end":499,"column_start":28,"column_end":48},"name":"RemFromU64Incomplete","qualname":"::float::arith::RemFromU64Incomplete","value":"RemFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":24213},{"krate":0,"index":24214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24248},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776853,"byte_end":776870,"line_start":500,"line_end":500,"column_start":11,"column_end":28},"name":"RemU128Incomplete","qualname":"::float::arith::RemU128Incomplete","value":"RemU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":24250},{"krate":0,"index":24251}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24255},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776872,"byte_end":776893,"line_start":500,"line_end":500,"column_start":30,"column_end":51},"name":"RemFromU128Incomplete","qualname":"::float::arith::RemFromU128Incomplete","value":"RemFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":24257},{"krate":0,"index":24258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24292},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776904,"byte_end":776920,"line_start":501,"line_end":501,"column_start":10,"column_end":26},"name":"RemF32Incomplete","qualname":"::float::arith::RemF32Incomplete","value":"RemF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":24294},{"krate":0,"index":24295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24299},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776922,"byte_end":776942,"line_start":501,"line_end":501,"column_start":28,"column_end":48},"name":"RemFromF32Incomplete","qualname":"::float::arith::RemFromF32Incomplete","value":"RemFromF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":24301},{"krate":0,"index":24302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24336},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776953,"byte_end":776969,"line_start":502,"line_end":502,"column_start":10,"column_end":26},"name":"RemF64Incomplete","qualname":"::float::arith::RemF64Incomplete","value":"RemF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":24338},{"krate":0,"index":24339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24343},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":776971,"byte_end":776991,"line_start":502,"line_end":502,"column_start":28,"column_end":48},"name":"RemFromF64Incomplete","qualname":"::float::arith::RemFromF64Incomplete","value":"RemFromF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":24345},{"krate":0,"index":24346}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24740},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777216,"byte_end":777231,"line_start":511,"line_end":511,"column_start":9,"column_end":24},"name":"PowI8Incomplete","qualname":"::float::arith::PowI8Incomplete","value":"PowI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":24742},{"krate":0,"index":24743}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24747},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777233,"byte_end":777252,"line_start":511,"line_end":511,"column_start":26,"column_end":45},"name":"PowFromI8Incomplete","qualname":"::float::arith::PowFromI8Incomplete","value":"PowFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":24749},{"krate":0,"index":24750}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24784},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777263,"byte_end":777279,"line_start":512,"line_end":512,"column_start":10,"column_end":26},"name":"PowI16Incomplete","qualname":"::float::arith::PowI16Incomplete","value":"PowI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":24786},{"krate":0,"index":24787}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24791},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777281,"byte_end":777301,"line_start":512,"line_end":512,"column_start":28,"column_end":48},"name":"PowFromI16Incomplete","qualname":"::float::arith::PowFromI16Incomplete","value":"PowFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":24793},{"krate":0,"index":24794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24828},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777312,"byte_end":777328,"line_start":513,"line_end":513,"column_start":10,"column_end":26},"name":"PowI32Incomplete","qualname":"::float::arith::PowI32Incomplete","value":"PowI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":24830},{"krate":0,"index":24831}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24835},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777330,"byte_end":777350,"line_start":513,"line_end":513,"column_start":28,"column_end":48},"name":"PowFromI32Incomplete","qualname":"::float::arith::PowFromI32Incomplete","value":"PowFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":24837},{"krate":0,"index":24838}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24872},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777361,"byte_end":777377,"line_start":514,"line_end":514,"column_start":10,"column_end":26},"name":"PowI64Incomplete","qualname":"::float::arith::PowI64Incomplete","value":"PowI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":24874},{"krate":0,"index":24875}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24879},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777379,"byte_end":777399,"line_start":514,"line_end":514,"column_start":28,"column_end":48},"name":"PowFromI64Incomplete","qualname":"::float::arith::PowFromI64Incomplete","value":"PowFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":24881},{"krate":0,"index":24882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24916},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777411,"byte_end":777428,"line_start":515,"line_end":515,"column_start":11,"column_end":28},"name":"PowI128Incomplete","qualname":"::float::arith::PowI128Incomplete","value":"PowI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":24918},{"krate":0,"index":24919}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24923},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777430,"byte_end":777451,"line_start":515,"line_end":515,"column_start":30,"column_end":51},"name":"PowFromI128Incomplete","qualname":"::float::arith::PowFromI128Incomplete","value":"PowFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":24925},{"krate":0,"index":24926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24960},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777461,"byte_end":777476,"line_start":516,"line_end":516,"column_start":9,"column_end":24},"name":"PowU8Incomplete","qualname":"::float::arith::PowU8Incomplete","value":"PowU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":24962},{"krate":0,"index":24963}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24967},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777478,"byte_end":777497,"line_start":516,"line_end":516,"column_start":26,"column_end":45},"name":"PowFromU8Incomplete","qualname":"::float::arith::PowFromU8Incomplete","value":"PowFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":24969},{"krate":0,"index":24970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25004},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777508,"byte_end":777524,"line_start":517,"line_end":517,"column_start":10,"column_end":26},"name":"PowU16Incomplete","qualname":"::float::arith::PowU16Incomplete","value":"PowU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":25006},{"krate":0,"index":25007}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25011},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777526,"byte_end":777546,"line_start":517,"line_end":517,"column_start":28,"column_end":48},"name":"PowFromU16Incomplete","qualname":"::float::arith::PowFromU16Incomplete","value":"PowFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":25013},{"krate":0,"index":25014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25048},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777557,"byte_end":777573,"line_start":518,"line_end":518,"column_start":10,"column_end":26},"name":"PowU32Incomplete","qualname":"::float::arith::PowU32Incomplete","value":"PowU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25050},{"krate":0,"index":25051}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25055},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777575,"byte_end":777595,"line_start":518,"line_end":518,"column_start":28,"column_end":48},"name":"PowFromU32Incomplete","qualname":"::float::arith::PowFromU32Incomplete","value":"PowFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25057},{"krate":0,"index":25058}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25092},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777606,"byte_end":777622,"line_start":519,"line_end":519,"column_start":10,"column_end":26},"name":"PowU64Incomplete","qualname":"::float::arith::PowU64Incomplete","value":"PowU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":25094},{"krate":0,"index":25095}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25099},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777624,"byte_end":777644,"line_start":519,"line_end":519,"column_start":28,"column_end":48},"name":"PowFromU64Incomplete","qualname":"::float::arith::PowFromU64Incomplete","value":"PowFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":25101},{"krate":0,"index":25102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25136},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777656,"byte_end":777673,"line_start":520,"line_end":520,"column_start":11,"column_end":28},"name":"PowU128Incomplete","qualname":"::float::arith::PowU128Incomplete","value":"PowU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":25138},{"krate":0,"index":25139}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25143},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777675,"byte_end":777696,"line_start":520,"line_end":520,"column_start":30,"column_end":51},"name":"PowFromU128Incomplete","qualname":"::float::arith::PowFromU128Incomplete","value":"PowFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":25145},{"krate":0,"index":25146}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25180},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777707,"byte_end":777723,"line_start":521,"line_end":521,"column_start":10,"column_end":26},"name":"PowF32Incomplete","qualname":"::float::arith::PowF32Incomplete","value":"PowF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25182},{"krate":0,"index":25183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25187},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777725,"byte_end":777745,"line_start":521,"line_end":521,"column_start":28,"column_end":48},"name":"PowFromF32Incomplete","qualname":"::float::arith::PowFromF32Incomplete","value":"PowFromF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25189},{"krate":0,"index":25190}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25224},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777756,"byte_end":777772,"line_start":522,"line_end":522,"column_start":10,"column_end":26},"name":"PowF64Incomplete","qualname":"::float::arith::PowF64Incomplete","value":"PowF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":25226},{"krate":0,"index":25227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25231},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777774,"byte_end":777794,"line_start":522,"line_end":522,"column_start":28,"column_end":48},"name":"PowFromF64Incomplete","qualname":"::float::arith::PowFromF64Incomplete","value":"PowFromF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":25233},{"krate":0,"index":25234}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25260},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":777899,"byte_end":777915,"line_start":529,"line_end":529,"column_start":10,"column_end":26},"name":"ShlU32Incomplete","qualname":"::float::arith::ShlU32Incomplete","value":"ShlU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25262},{"krate":0,"index":25263}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25289},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":778019,"byte_end":778035,"line_start":535,"line_end":535,"column_start":10,"column_end":26},"name":"ShrU32Incomplete","qualname":"::float::arith::ShrU32Incomplete","value":"ShrU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25291},{"krate":0,"index":25292}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25318},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":778139,"byte_end":778155,"line_start":541,"line_end":541,"column_start":10,"column_end":26},"name":"ShlI32Incomplete","qualname":"::float::arith::ShlI32Incomplete","value":"ShlI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25320},{"krate":0,"index":25321}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25347},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":778259,"byte_end":778275,"line_start":547,"line_end":547,"column_start":10,"column_end":26},"name":"ShrI32Incomplete","qualname":"::float::arith::ShrI32Incomplete","value":"ShrI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":25349},{"krate":0,"index":25350}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25384},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":778554,"byte_end":778570,"line_start":558,"line_end":558,"column_start":5,"column_end":21},"name":"AddMulIncomplete","qualname":"::float::arith::AddMulIncomplete","value":"AddMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":25386},{"krate":0,"index":25387}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25425},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":778860,"byte_end":778876,"line_start":569,"line_end":569,"column_start":5,"column_end":21},"name":"SubMulIncomplete","qualname":"::float::arith::SubMulIncomplete","value":"SubMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":25427},{"krate":0,"index":25428}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25432},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":778878,"byte_end":778898,"line_start":569,"line_end":569,"column_start":23,"column_end":43},"name":"SubMulFromIncomplete","qualname":"::float::arith::SubMulFromIncomplete","value":"SubMulFromIncomplete {  }","parent":null,"children":[{"krate":0,"index":25434},{"krate":0,"index":25435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":779875,"byte_end":779879,"line_start":586,"line_end":586,"column_start":10,"column_end":14},"name":"Long","qualname":"::float::arith::AsLong::Long","value":"type Long;","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25497},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":783694,"byte_end":783713,"line_start":699,"line_end":699,"column_start":12,"column_end":31},"name":"MulAddMulIncomplete","qualname":"::float::arith::MulAddMulIncomplete","value":"MulAddMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":25499},{"krate":0,"index":25500}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25504},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":784567,"byte_end":784586,"line_start":732,"line_end":732,"column_start":12,"column_end":31},"name":"MulSubMulIncomplete","qualname":"::float::arith::MulSubMulIncomplete","value":"MulSubMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":25506},{"krate":0,"index":25507}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":802801,"byte_end":802806,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"Float","qualname":"::float::big::Float","value":"Float {  }","parent":null,"children":[{"krate":0,"index":2151}],"decl_id":null,"docs":"A multi-precision floating-point number with arbitrarily large\nprecision and correct rounding","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":802769,"byte_end":802789,"line_start":244,"line_end":244,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":805324,"byte_end":805327,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"new","qualname":"<Float>::new","value":"fn (prec: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Float`] with the specified precision and with\n value 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":805303,"byte_end":805312,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":805867,"byte_end":805875,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"with_val","qualname":"<Float>::with_val","value":"fn <T> (prec: u32, val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Float`] with the specified precision and with\n the given value, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":805846,"byte_end":805855,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":806901,"byte_end":806915,"line_start":405,"line_end":405,"column_start":12,"column_end":26},"name":"with_val_round","qualname":"<Float>::with_val_round","value":"fn <T> (prec: u32, val: T, round: Round) -> (Self, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Float`] with the specified precision and with\n the given value, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":806880,"byte_end":806889,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":807774,"byte_end":807778,"line_start":437,"line_end":437,"column_start":12,"column_end":16},"name":"prec","qualname":"<Float>::prec","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the precision.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":807753,"byte_end":807762,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":808310,"byte_end":808318,"line_start":458,"line_end":458,"column_start":12,"column_end":20},"name":"set_prec","qualname":"<Float>::set_prec","value":"fn (&mut self, prec: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the precision, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":808289,"byte_end":808298,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":808981,"byte_end":808995,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"set_prec_round","qualname":"<Float>::set_prec_round","value":"fn (&mut self, prec: u32, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sets the precision, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":808960,"byte_end":808969,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":810461,"byte_end":810469,"line_start":523,"line_end":523,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Float>::from_raw","value":"fn (raw: mpfr_t) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Float`] from an initialized\n [MPFR floating-point number][`mpfr_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":810433,"byte_end":810442,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":811256,"byte_end":811264,"line_start":550,"line_end":550,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Float>::into_raw","value":"fn (self) -> mpfr_t","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Float`] into an\n [MPFR floating-point number][`mpfr_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":811235,"byte_end":811244,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":812043,"byte_end":812049,"line_start":579,"line_end":579,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Float>::as_raw","value":"fn (&self) -> *const mpfr_t","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the inner\n [MPFR floating-point number][`mpfr_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":812022,"byte_end":812031,"line_start":578,"line_end":578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":812752,"byte_end":812762,"line_start":604,"line_end":604,"column_start":12,"column_end":22},"name":"as_raw_mut","qualname":"<Float>::as_raw_mut","value":"fn (&mut self) -> *mut mpfr_t","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the inner\n [MPFR floating-point number][`mpfr_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":812731,"byte_end":812740,"line_start":603,"line_end":603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":815192,"byte_end":815197,"line_start":660,"line_end":660,"column_start":12,"column_end":17},"name":"parse","qualname":"<Float>::parse","value":"fn <S> (src: S) -> Result<ParseIncomplete, ParseFloatError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a decimal string slice (<code>&amp;[str]</code>) or\n byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into a\n [`Float`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":815171,"byte_end":815180,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":818143,"byte_end":818154,"line_start":724,"line_end":724,"column_start":12,"column_end":23},"name":"parse_radix","qualname":"<Float>::parse_radix","value":"fn <S> (src: S, radix: i32) -> Result<ParseIncomplete, ParseFloatError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string slice (<code>&amp;[str]</code>) or byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into a\n [`Float`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":818122,"byte_end":818131,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":818837,"byte_end":818847,"line_start":750,"line_end":750,"column_start":12,"column_end":22},"name":"to_integer","qualname":"<Float>::to_integer","value":"fn (&self) -> Option<Integer>","parent":null,"children":[],"decl_id":null,"docs":" If the value is a [finite number][`is_finite`], converts it to\n an [`Integer`] rounding to the nearest.","sig":null,"attributes":[{"value":"cfg(feature = \"integer\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":818306,"byte_end":818333,"line_start":731,"line_end":731,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":818816,"byte_end":818825,"line_start":749,"line_end":749,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":819614,"byte_end":819630,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"to_integer_round","qualname":"<Float>::to_integer_round","value":"fn (&self, round: Round) -> Option<(Integer, Ordering)>","parent":null,"children":[],"decl_id":null,"docs":" If the value is a [finite number][`is_finite`], converts it to\n an [`Integer`] applying the specified rounding method.","sig":null,"attributes":[{"value":"cfg(feature = \"integer\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":818946,"byte_end":818973,"line_start":754,"line_end":754,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":819593,"byte_end":819602,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":820945,"byte_end":820959,"line_start":812,"line_end":812,"column_start":12,"column_end":26},"name":"to_integer_exp","qualname":"<Float>::to_integer_exp","value":"fn (&self) -> Option<(Integer, i32)>","parent":null,"children":[],"decl_id":null,"docs":" If the value is a [finite number][`is_finite`], returns an\n [`Integer`] and exponent such that it is exactly equal to the\n integer multiplied by two raised to the power of the exponent.","sig":null,"attributes":[{"value":"cfg(feature = \"integer\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":819923,"byte_end":819950,"line_start":784,"line_end":784,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":820924,"byte_end":820933,"line_start":811,"line_end":811,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":823292,"byte_end":823303,"line_start":872,"line_end":872,"column_start":12,"column_end":23},"name":"to_rational","qualname":"<Float>::to_rational","value":"fn (&self) -> Option<Rational>","parent":null,"children":[],"decl_id":null,"docs":" If the value is a [finite number][`is_finite`], returns a\n [`Rational`] number preserving all the precision of the value.","sig":null,"attributes":[{"value":"cfg(feature = \"rational\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":821223,"byte_end":821251,"line_start":821,"line_end":821,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":823271,"byte_end":823280,"line_start":871,"line_end":871,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":824387,"byte_end":824404,"line_start":905,"line_end":905,"column_start":12,"column_end":29},"name":"to_i32_saturating","qualname":"<Float>::to_i32_saturating","value":"fn (&self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i32`], rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":824366,"byte_end":824375,"line_start":904,"line_end":904,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":825165,"byte_end":825188,"line_start":926,"line_end":926,"column_start":12,"column_end":35},"name":"to_i32_saturating_round","qualname":"<Float>::to_i32_saturating_round","value":"fn (&self, round: Round) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`i32`], applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":825144,"byte_end":825153,"line_start":925,"line_end":925,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":826388,"byte_end":826405,"line_start":962,"line_end":962,"column_start":12,"column_end":29},"name":"to_u32_saturating","qualname":"<Float>::to_u32_saturating","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u32`], rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":826367,"byte_end":826376,"line_start":961,"line_end":961,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":827165,"byte_end":827188,"line_start":983,"line_end":983,"column_start":12,"column_end":35},"name":"to_u32_saturating_round","qualname":"<Float>::to_u32_saturating_round","value":"fn (&self, round: Round) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a [`u32`], applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":827144,"byte_end":827153,"line_start":982,"line_end":982,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":828131,"byte_end":828137,"line_start":1015,"line_end":1015,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Float>::to_f32","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f32`], rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":828110,"byte_end":828119,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":828777,"byte_end":828789,"line_start":1036,"line_end":1036,"column_start":12,"column_end":24},"name":"to_f32_round","qualname":"<Float>::to_f32_round","value":"fn (&self, round: Round) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f32`], applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":828756,"byte_end":828765,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":829493,"byte_end":829499,"line_start":1059,"line_end":1059,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Float>::to_f64","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f64`], rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":829472,"byte_end":829481,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":830169,"byte_end":830181,"line_start":1081,"line_end":1081,"column_start":12,"column_end":24},"name":"to_f64_round","qualname":"<Float>::to_f64_round","value":"fn (&self, round: Round) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f64`], applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":830148,"byte_end":830157,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":831053,"byte_end":831063,"line_start":1107,"line_end":1107,"column_start":12,"column_end":22},"name":"to_f32_exp","qualname":"<Float>::to_f32_exp","value":"fn (&self) -> (f32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f32`] and an exponent, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":831032,"byte_end":831041,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":831965,"byte_end":831981,"line_start":1132,"line_end":1132,"column_start":12,"column_end":28},"name":"to_f32_exp_round","qualname":"<Float>::to_f32_exp_round","value":"fn (&self, round: Round) -> (f32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f32`] and an exponent, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":831944,"byte_end":831953,"line_start":1131,"line_end":1131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":833418,"byte_end":833428,"line_start":1172,"line_end":1172,"column_start":12,"column_end":22},"name":"to_f64_exp","qualname":"<Float>::to_f64_exp","value":"fn (&self) -> (f64, i32)","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f64`] and an exponent, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":833397,"byte_end":833406,"line_start":1171,"line_end":1171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":834348,"byte_end":834364,"line_start":1197,"line_end":1197,"column_start":12,"column_end":28},"name":"to_f64_exp_round","qualname":"<Float>::to_f64_exp_round","value":"fn (&self, round: Round) -> (f64, i32)","parent":null,"children":[],"decl_id":null,"docs":" Converts to an [`f64`] and an exponent, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":834327,"byte_end":834336,"line_start":1196,"line_end":1196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":835635,"byte_end":835650,"line_start":1228,"line_end":1228,"column_start":12,"column_end":27},"name":"to_string_radix","qualname":"<Float>::to_string_radix","value":"fn (&self, radix: i32, num_digits: Option<usize>) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of `self` for the specified\n `radix` rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":835614,"byte_end":835623,"line_start":1227,"line_end":1227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":836623,"byte_end":836644,"line_start":1254,"line_end":1254,"column_start":12,"column_end":33},"name":"to_string_radix_round","qualname":"<Float>::to_string_radix_round","value":"fn (&self, radix: i32, num_digits: Option<usize>, round: Round) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of `self` for the specified\n `radix` applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":836602,"byte_end":836611,"line_start":1253,"line_end":1253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":837889,"byte_end":837895,"line_start":1295,"line_end":1295,"column_start":12,"column_end":18},"name":"as_neg","qualname":"<Float>::as_neg","value":"fn (&self) -> BorrowFloat<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a negated copy of the [`Float`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":839053,"byte_end":839059,"line_start":1330,"line_end":1330,"column_start":12,"column_end":18},"name":"as_abs","qualname":"<Float>::as_abs","value":"fn (&self) -> BorrowFloat<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows an absolute copy of the [`Float`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":840246,"byte_end":840252,"line_start":1368,"line_end":1368,"column_start":12,"column_end":18},"name":"as_ord","qualname":"<Float>::as_ord","value":"fn (&self) -> &OrdFloat","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`Float`] as an ordered floating-point number of\n type [`OrdFloat`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":840225,"byte_end":840234,"line_start":1367,"line_end":1367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":840705,"byte_end":840715,"line_start":1386,"line_end":1386,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Float>::is_integer","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if `self` is an integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":840684,"byte_end":840693,"line_start":1385,"line_end":1385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":841162,"byte_end":841168,"line_start":1404,"line_end":1404,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Float>::is_nan","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if `self` is not a number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":841141,"byte_end":841150,"line_start":1403,"line_end":1403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":841631,"byte_end":841642,"line_start":1422,"line_end":1422,"column_start":12,"column_end":23},"name":"is_infinite","qualname":"<Float>::is_infinite","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if `self` is plus or minus infinity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":841610,"byte_end":841619,"line_start":1421,"line_end":1421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":842136,"byte_end":842145,"line_start":1441,"line_end":1441,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Float>::is_finite","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if `self` is a finite number, that is neither\n NaN nor infinity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":842115,"byte_end":842124,"line_start":1440,"line_end":1440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":842703,"byte_end":842710,"line_start":1461,"line_end":1461,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Float>::is_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if `self` is plus or minus zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":842682,"byte_end":842691,"line_start":1460,"line_end":1460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":843477,"byte_end":843486,"line_start":1486,"line_end":1486,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<Float>::is_normal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if `self` is a normal number, that is neither\n NaN, nor infinity, nor zero. Note that [`Float`] cannot be\n subnormal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":843456,"byte_end":843465,"line_start":1485,"line_end":1485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":844332,"byte_end":844340,"line_start":1510,"line_end":1510,"column_start":12,"column_end":20},"name":"classify","qualname":"<Float>::classify","value":"fn (&self) -> FpCategory","parent":null,"children":[],"decl_id":null,"docs":" Returns the floating-point category of the number. Note that\n [`Float`] cannot be subnormal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":844311,"byte_end":844320,"line_start":1509,"line_end":1509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":845515,"byte_end":845519,"line_start":1546,"line_end":1546,"column_start":12,"column_end":16},"name":"cmp0","qualname":"<Float>::cmp0","value":"fn (&self) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same result as\n <code>self.[partial_cmp][`partial_cmp`](&amp;0)</code>, but is\n faster.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":845494,"byte_end":845503,"line_start":1545,"line_end":1545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":846127,"byte_end":846134,"line_start":1568,"line_end":1568,"column_start":12,"column_end":19},"name":"cmp_abs","qualname":"<Float>::cmp_abs","value":"fn (&self, other: &Self) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compares the absolute values of `self` and `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":846106,"byte_end":846115,"line_start":1567,"line_end":1567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":847077,"byte_end":847084,"line_start":1599,"line_end":1599,"column_start":12,"column_end":19},"name":"get_exp","qualname":"<Float>::get_exp","value":"fn (&self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" If the value is a [normal number][`is_normal`], returns its\n exponent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":847056,"byte_end":847065,"line_start":1598,"line_end":1598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":849475,"byte_end":849490,"line_start":1655,"line_end":1655,"column_start":12,"column_end":27},"name":"get_significand","qualname":"<Float>::get_significand","value":"fn (&self) -> Option<BorrowInteger<'_>>","parent":null,"children":[],"decl_id":null,"docs":" If the value is a [normal number][`is_normal`], returns a\n reference to its significand as an [`Integer`].","sig":null,"attributes":[{"value":"cfg(feature = \"integer\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":847289,"byte_end":847316,"line_start":1608,"line_end":1608,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":849454,"byte_end":849463,"line_start":1654,"line_end":1654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":850424,"byte_end":850440,"line_start":1685,"line_end":1685,"column_start":12,"column_end":28},"name":"is_sign_positive","qualname":"<Float>::is_sign_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the value is positive, +0 or NaN without a\n negative sign.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":850403,"byte_end":850412,"line_start":1684,"line_end":1684,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":850959,"byte_end":850975,"line_start":1704,"line_end":1704,"column_start":12,"column_end":28},"name":"is_sign_negative","qualname":"<Float>::is_sign_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the value is negative, −0 or NaN with a\n negative sign.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":850938,"byte_end":850947,"line_start":1703,"line_end":1703,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":851435,"byte_end":851446,"line_start":1722,"line_end":1722,"column_start":12,"column_end":23},"name":"next_toward","qualname":"<Float>::next_toward","value":"fn (&mut self, to: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets to the next value towards `to`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":851414,"byte_end":851423,"line_start":1721,"line_end":1721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":851900,"byte_end":851907,"line_start":1741,"line_end":1741,"column_start":12,"column_end":19},"name":"next_up","qualname":"<Float>::next_up","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets to the next value towards +∞.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":851879,"byte_end":851888,"line_start":1740,"line_end":1740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":852340,"byte_end":852349,"line_start":1760,"line_end":1760,"column_start":12,"column_end":21},"name":"next_down","qualname":"<Float>::next_down","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets to the next value towards −∞.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":852319,"byte_end":852328,"line_start":1759,"line_end":1759,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":853892,"byte_end":853909,"line_start":1800,"line_end":1800,"column_start":12,"column_end":29},"name":"subnormalize_ieee","qualname":"<Float>::subnormalize_ieee","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Emulate subnormal numbers for precisions specified in IEEE\n 754, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":853871,"byte_end":853880,"line_start":1799,"line_end":1799,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":855613,"byte_end":855636,"line_start":1839,"line_end":1839,"column_start":12,"column_end":35},"name":"subnormalize_ieee_round","qualname":"<Float>::subnormalize_ieee_round","value":"fn (&mut self, prev_rounding: Ordering, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Emulate subnormal numbers for precisions specified in IEEE\n 754, applying the specified rounding method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":857245,"byte_end":857257,"line_start":1878,"line_end":1878,"column_start":12,"column_end":24},"name":"subnormalize","qualname":"<Float>::subnormalize","value":"fn (&mut self, normal_exp_min: i32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Emulate subnormal numbers, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":857224,"byte_end":857233,"line_start":1877,"line_end":1877,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":858782,"byte_end":858800,"line_start":1914,"line_end":1914,"column_start":12,"column_end":30},"name":"subnormalize_round","qualname":"<Float>::subnormalize_round","value":"fn (&mut self, normal_exp_min: i32, prev_rounding: Ordering, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Emulate subnormal numbers, applying the specified rounding\n method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":861872,"byte_end":861875,"line_start":1994,"line_end":1994,"column_start":12,"column_end":15},"name":"sum","qualname":"<Float>::sum","value":"fn <'a, I> (values: I) -> SumIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Adds a list of [`Float`] values with correct rounding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":861851,"byte_end":861860,"line_start":1993,"line_end":1993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":863665,"byte_end":863668,"line_start":2038,"line_end":2038,"column_start":12,"column_end":15},"name":"dot","qualname":"<Float>::dot","value":"fn <'a, I> (values: I) -> DotIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Finds the dot product of a list of [`Float`] value pairs with\n correct rounding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":863644,"byte_end":863653,"line_start":2037,"line_end":2037,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":864940,"byte_end":864949,"line_start":2074,"line_end":2074,"column_start":12,"column_end":21},"name":"remainder","qualname":"<Float>::remainder","value":"fn (mut self, divisor: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":864919,"byte_end":864928,"line_start":2073,"line_end":2073,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":866159,"byte_end":866172,"line_start":2108,"line_end":2108,"column_start":12,"column_end":25},"name":"remainder_mut","qualname":"<Float>::remainder_mut","value":"fn (&mut self, divisor: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":866138,"byte_end":866147,"line_start":2107,"line_end":2107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":867748,"byte_end":867763,"line_start":2148,"line_end":2148,"column_start":12,"column_end":27},"name":"remainder_round","qualname":"<Float>::remainder_round","value":"fn (&mut self, divisor: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":867727,"byte_end":867736,"line_start":2147,"line_end":2147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":868949,"byte_end":868963,"line_start":2181,"line_end":2181,"column_start":12,"column_end":26},"name":"remainder_from","qualname":"<Float>::remainder_from","value":"fn (&mut self, dividend: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":868928,"byte_end":868937,"line_start":2180,"line_end":2180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":870542,"byte_end":870562,"line_start":2221,"line_end":2221,"column_start":12,"column_end":32},"name":"remainder_from_round","qualname":"<Float>::remainder_from_round","value":"fn (&mut self, dividend: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":870521,"byte_end":870530,"line_start":2220,"line_end":2220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":872278,"byte_end":872291,"line_start":2263,"line_end":2263,"column_start":12,"column_end":25},"name":"remainder_ref","qualname":"<Float>::remainder_ref","value":"fn <'a> (&'a self, divisor: &'a Self) -> RemainderIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the remainder.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":872257,"byte_end":872266,"line_start":2262,"line_end":2262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":873253,"byte_end":873260,"line_start":2293,"line_end":2293,"column_start":12,"column_end":19},"name":"mul_add","qualname":"<Float>::mul_add","value":"fn (mut self, mul: &Self, add: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation, rounding to the\n nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":873232,"byte_end":873241,"line_start":2292,"line_end":2292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":874163,"byte_end":874174,"line_start":2321,"line_end":2321,"column_start":12,"column_end":23},"name":"mul_add_mut","qualname":"<Float>::mul_add_mut","value":"fn (&mut self, mul: &Self, add: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation, rounding to the\n nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":874142,"byte_end":874151,"line_start":2320,"line_end":2320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":875330,"byte_end":875343,"line_start":2354,"line_end":2354,"column_start":12,"column_end":25},"name":"mul_add_round","qualname":"<Float>::mul_add_round","value":"fn (&mut self, mul: &Self, add: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation, applying the\n specified rounding method with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":875309,"byte_end":875318,"line_start":2353,"line_end":2353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":876851,"byte_end":876862,"line_start":2399,"line_end":2399,"column_start":12,"column_end":23},"name":"mul_add_ref","qualname":"<Float>::mul_add_ref","value":"fn <'a> (&'a self, mul: &'a Self, add: &'a Self) -> AddMulIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":876830,"byte_end":876839,"line_start":2398,"line_end":2398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":877824,"byte_end":877831,"line_start":2426,"line_end":2426,"column_start":12,"column_end":19},"name":"mul_sub","qualname":"<Float>::mul_sub","value":"fn (mut self, mul: &Self, sub: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation, rounding to\n the nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":877803,"byte_end":877812,"line_start":2425,"line_end":2425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":878790,"byte_end":878801,"line_start":2454,"line_end":2454,"column_start":12,"column_end":23},"name":"mul_sub_mut","qualname":"<Float>::mul_sub_mut","value":"fn (&mut self, mul: &Self, sub: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation, rounding to\n the nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":878769,"byte_end":878778,"line_start":2453,"line_end":2453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":880012,"byte_end":880025,"line_start":2487,"line_end":2487,"column_start":12,"column_end":25},"name":"mul_sub_round","qualname":"<Float>::mul_sub_round","value":"fn (&mut self, mul: &Self, sub: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation, applying the\n specified rounding method with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":879991,"byte_end":880000,"line_start":2486,"line_end":2486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":881589,"byte_end":881600,"line_start":2532,"line_end":2532,"column_start":12,"column_end":23},"name":"mul_sub_ref","qualname":"<Float>::mul_sub_ref","value":"fn <'a> (&'a self, mul: &'a Self, sub: &'a Self) -> SubMulFromIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":881568,"byte_end":881577,"line_start":2531,"line_end":2531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":882409,"byte_end":882420,"line_start":2556,"line_end":2556,"column_start":12,"column_end":23},"name":"mul_add_mul","qualname":"<Float>::mul_add_mul","value":"fn (mut self, mul: &Self, add_mul1: &Self, add_mul2: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two products and adds them in one fused operation,\n rounding to the nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":882388,"byte_end":882397,"line_start":2555,"line_end":2555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":883252,"byte_end":883267,"line_start":2581,"line_end":2581,"column_start":12,"column_end":27},"name":"mul_add_mul_mut","qualname":"<Float>::mul_add_mul_mut","value":"fn (&mut self, mul: &Self, add_mul1: &Self, add_mul2: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two products and adds them in one fused operation,\n rounding to the nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":883231,"byte_end":883240,"line_start":2580,"line_end":2580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":884352,"byte_end":884369,"line_start":2611,"line_end":2611,"column_start":12,"column_end":29},"name":"mul_add_mul_round","qualname":"<Float>::mul_add_mul_round","value":"fn (&mut self, mul: &Self, add_mul1: &Self, add_mul2: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two produces and adds them in one fused operation,\n applying the specified rounding method with only one rounding\n error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":884331,"byte_end":884340,"line_start":2610,"line_end":2610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":885871,"byte_end":885886,"line_start":2659,"line_end":2659,"column_start":12,"column_end":27},"name":"mul_add_mul_ref","qualname":"<Float>::mul_add_mul_ref","value":"fn <'a> (&'a self, mul: &'a Self, add_mul1: &'a Self, add_mul2: &'a Self) -> MulAddMulIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two products and adds them in one fused operation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":885850,"byte_end":885859,"line_start":2658,"line_end":2658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":886789,"byte_end":886800,"line_start":2689,"line_end":2689,"column_start":12,"column_end":23},"name":"mul_sub_mul","qualname":"<Float>::mul_sub_mul","value":"fn (mut self, mul: &Self, sub_mul1: &Self, sub_mul2: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two products and subtracts them in one fused\n operation, rounding to the nearest with only one rounding\n error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":886768,"byte_end":886777,"line_start":2688,"line_end":2688,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":887647,"byte_end":887662,"line_start":2715,"line_end":2715,"column_start":12,"column_end":27},"name":"mul_sub_mul_mut","qualname":"<Float>::mul_sub_mul_mut","value":"fn (&mut self, mul: &Self, sub_mul1: &Self, sub_mul2: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two products and subtracts them in one fused\n operation, rounding to the nearest with only one rounding\n error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":887626,"byte_end":887635,"line_start":2714,"line_end":2714,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":888754,"byte_end":888771,"line_start":2745,"line_end":2745,"column_start":12,"column_end":29},"name":"mul_sub_mul_round","qualname":"<Float>::mul_sub_mul_round","value":"fn (&mut self, mul: &Self, sub_mul1: &Self, sub_mul2: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two produces and subtracts them in one fused\n operation, applying the specified rounding method with only\n one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":888733,"byte_end":888742,"line_start":2744,"line_end":2744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":890288,"byte_end":890303,"line_start":2794,"line_end":2794,"column_start":12,"column_end":27},"name":"mul_sub_mul_ref","qualname":"<Float>::mul_sub_mul_ref","value":"fn <'a> (&'a self, mul: &'a Self, sub_mul1: &'a Self, sub_mul2: &'a Self) -> MulSubMulIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two products and subtracts them in one fused\n operation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":890267,"byte_end":890276,"line_start":2793,"line_end":2793,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":892024,"byte_end":892029,"line_start":2836,"line_end":2836,"column_start":12,"column_end":17},"name":"u_exp","qualname":"<Float>::u_exp","value":"fn (u: u32, exp: i32) -> UExpIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Multiplies `u` by 2<sup>`exp`</sup>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":892003,"byte_end":892012,"line_start":2835,"line_end":2835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":893647,"byte_end":893652,"line_start":2873,"line_end":2873,"column_start":12,"column_end":17},"name":"i_exp","qualname":"<Float>::i_exp","value":"fn (i: i32, exp: i32) -> IExpIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Multiplies `i` by 2<sup>`exp`</sup>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":893626,"byte_end":893635,"line_start":2872,"line_end":2872,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":894481,"byte_end":894488,"line_start":2898,"line_end":2898,"column_start":12,"column_end":19},"name":"u_pow_u","qualname":"<Float>::u_pow_u","value":"fn (base: u32, exponent: u32) -> UPowUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Raises `base` to the power of `exponent`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":894460,"byte_end":894469,"line_start":2897,"line_end":2897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":895337,"byte_end":895344,"line_start":2923,"line_end":2923,"column_start":12,"column_end":19},"name":"i_pow_u","qualname":"<Float>::i_pow_u","value":"fn (base: i32, exponent: u32) -> IPowUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Raises `base` to the power of `exponent`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":895316,"byte_end":895325,"line_start":2922,"line_end":2922,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":895717,"byte_end":895723,"line_start":2938,"line_end":2938,"column_start":12,"column_end":18},"name":"square","qualname":"<Float>::square","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the square, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":895696,"byte_end":895705,"line_start":2937,"line_end":2937,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":896072,"byte_end":896082,"line_start":2954,"line_end":2954,"column_start":12,"column_end":22},"name":"square_mut","qualname":"<Float>::square_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":896051,"byte_end":896060,"line_start":2953,"line_end":2953,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":896686,"byte_end":896698,"line_start":2974,"line_end":2974,"column_start":12,"column_end":24},"name":"square_round","qualname":"<Float>::square_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the square, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":896665,"byte_end":896674,"line_start":2973,"line_end":2973,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":897548,"byte_end":897558,"line_start":3000,"line_end":3000,"column_start":12,"column_end":22},"name":"square_ref","qualname":"<Float>::square_ref","value":"fn (&self) -> SquareIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":897527,"byte_end":897536,"line_start":2999,"line_end":2999,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":897917,"byte_end":897921,"line_start":3015,"line_end":3015,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Float>::sqrt","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":897896,"byte_end":897905,"line_start":3014,"line_end":3014,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":898271,"byte_end":898279,"line_start":3031,"line_end":3031,"column_start":12,"column_end":20},"name":"sqrt_mut","qualname":"<Float>::sqrt_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":898250,"byte_end":898259,"line_start":3030,"line_end":3030,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":898874,"byte_end":898884,"line_start":3052,"line_end":3052,"column_start":12,"column_end":22},"name":"sqrt_round","qualname":"<Float>::sqrt_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":898853,"byte_end":898862,"line_start":3051,"line_end":3051,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":899734,"byte_end":899742,"line_start":3078,"line_end":3078,"column_start":12,"column_end":20},"name":"sqrt_ref","qualname":"<Float>::sqrt_ref","value":"fn (&self) -> SqrtIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":899713,"byte_end":899722,"line_start":3077,"line_end":3077,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":900550,"byte_end":900556,"line_start":3103,"line_end":3103,"column_start":12,"column_end":18},"name":"sqrt_u","qualname":"<Float>::sqrt_u","value":"fn (u: u32) -> SqrtUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root of `u`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":900529,"byte_end":900538,"line_start":3102,"line_end":3102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":900927,"byte_end":900937,"line_start":3118,"line_end":3118,"column_start":12,"column_end":22},"name":"recip_sqrt","qualname":"<Float>::recip_sqrt","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal square root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":900906,"byte_end":900915,"line_start":3117,"line_end":3117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":901311,"byte_end":901325,"line_start":3134,"line_end":3134,"column_start":12,"column_end":26},"name":"recip_sqrt_mut","qualname":"<Float>::recip_sqrt_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal square root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":901290,"byte_end":901299,"line_start":3133,"line_end":3133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":901947,"byte_end":901963,"line_start":3155,"line_end":3155,"column_start":12,"column_end":28},"name":"recip_sqrt_round","qualname":"<Float>::recip_sqrt_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal square root, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":901926,"byte_end":901935,"line_start":3154,"line_end":3154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":902847,"byte_end":902861,"line_start":3181,"line_end":3181,"column_start":12,"column_end":26},"name":"recip_sqrt_ref","qualname":"<Float>::recip_sqrt_ref","value":"fn (&self) -> RecipSqrtIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal square root.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":902826,"byte_end":902835,"line_start":3180,"line_end":3180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":903225,"byte_end":903229,"line_start":3196,"line_end":3196,"column_start":12,"column_end":16},"name":"cbrt","qualname":"<Float>::cbrt","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the cube root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":903204,"byte_end":903213,"line_start":3195,"line_end":3195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":903578,"byte_end":903586,"line_start":3212,"line_end":3212,"column_start":12,"column_end":20},"name":"cbrt_mut","qualname":"<Float>::cbrt_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the cube root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":903557,"byte_end":903566,"line_start":3211,"line_end":3211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":904176,"byte_end":904186,"line_start":3233,"line_end":3233,"column_start":12,"column_end":22},"name":"cbrt_round","qualname":"<Float>::cbrt_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the cube root, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":904155,"byte_end":904164,"line_start":3232,"line_end":3232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":905035,"byte_end":905043,"line_start":3259,"line_end":3259,"column_start":12,"column_end":20},"name":"cbrt_ref","qualname":"<Float>::cbrt_ref","value":"fn (&self) -> CbrtIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the cube root.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":905014,"byte_end":905023,"line_start":3258,"line_end":3258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":905404,"byte_end":905408,"line_start":3274,"line_end":3274,"column_start":12,"column_end":16},"name":"root","qualname":"<Float>::root","value":"fn (mut self, k: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>k</i>th root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":905383,"byte_end":905392,"line_start":3273,"line_end":3273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":905775,"byte_end":905783,"line_start":3290,"line_end":3290,"column_start":12,"column_end":20},"name":"root_mut","qualname":"<Float>::root_mut","value":"fn (&mut self, k: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>k</i>th root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":905754,"byte_end":905763,"line_start":3289,"line_end":3289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":906408,"byte_end":906418,"line_start":3311,"line_end":3311,"column_start":12,"column_end":22},"name":"root_round","qualname":"<Float>::root_round","value":"fn (&mut self, k: u32, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>k</i>th root, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":906387,"byte_end":906396,"line_start":3310,"line_end":3310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":907289,"byte_end":907297,"line_start":3337,"line_end":3337,"column_start":12,"column_end":20},"name":"root_ref","qualname":"<Float>::root_ref","value":"fn (&self, k: u32) -> RootIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the <i>k</i>th root.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":907268,"byte_end":907277,"line_start":3336,"line_end":3336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":907640,"byte_end":907643,"line_start":3352,"line_end":3352,"column_start":12,"column_end":15},"name":"abs","qualname":"<Float>::abs","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":907619,"byte_end":907628,"line_start":3351,"line_end":3351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":907955,"byte_end":907962,"line_start":3368,"line_end":3368,"column_start":12,"column_end":19},"name":"abs_mut","qualname":"<Float>::abs_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":907934,"byte_end":907943,"line_start":3367,"line_end":3367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":908797,"byte_end":908804,"line_start":3394,"line_end":3394,"column_start":12,"column_end":19},"name":"abs_ref","qualname":"<Float>::abs_ref","value":"fn (&self) -> AbsIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":908776,"byte_end":908785,"line_start":3393,"line_end":3393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":909423,"byte_end":909429,"line_start":3414,"line_end":3414,"column_start":12,"column_end":18},"name":"signum","qualname":"<Float>::signum","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":909402,"byte_end":909411,"line_start":3413,"line_end":3413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":909898,"byte_end":909908,"line_start":3434,"line_end":3434,"column_start":12,"column_end":22},"name":"signum_mut","qualname":"<Float>::signum_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":909877,"byte_end":909886,"line_start":3433,"line_end":3433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":910906,"byte_end":910916,"line_start":3464,"line_end":3464,"column_start":12,"column_end":22},"name":"signum_ref","qualname":"<Float>::signum_ref","value":"fn (&self) -> SignumIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the signum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":910885,"byte_end":910894,"line_start":3463,"line_end":3463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":911358,"byte_end":911366,"line_start":3481,"line_end":3481,"column_start":12,"column_end":20},"name":"copysign","qualname":"<Float>::copysign","value":"fn (mut self, y: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a number with the magnitude of `self` and the sign\n of `y`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":911337,"byte_end":911346,"line_start":3480,"line_end":3480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":911783,"byte_end":911795,"line_start":3499,"line_end":3499,"column_start":12,"column_end":24},"name":"copysign_mut","qualname":"<Float>::copysign_mut","value":"fn (&mut self, y: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains the magnitude of `self` and copies the sign of\n `y`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":911762,"byte_end":911771,"line_start":3498,"line_end":3498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":912761,"byte_end":912773,"line_start":3527,"line_end":3527,"column_start":12,"column_end":24},"name":"copysign_ref","qualname":"<Float>::copysign_ref","value":"fn <'a> (&'a self, y: &'a Self) -> CopysignIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes a number with the magnitude of `self` and the\n sign of `y`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":912740,"byte_end":912749,"line_start":3526,"line_end":3526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":913619,"byte_end":913624,"line_start":3554,"line_end":3554,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Float>::clamp","value":"fn <Min, Max> (mut self, min: &Min, max: &Max) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":913598,"byte_end":913607,"line_start":3553,"line_end":3553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":914703,"byte_end":914712,"line_start":3588,"line_end":3588,"column_start":12,"column_end":21},"name":"clamp_mut","qualname":"<Float>::clamp_mut","value":"fn <Min, Max> (&mut self, min: &Min, max: &Max) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":914682,"byte_end":914691,"line_start":3587,"line_end":3587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":916007,"byte_end":916018,"line_start":3623,"line_end":3623,"column_start":12,"column_end":23},"name":"clamp_round","qualname":"<Float>::clamp_round","value":"fn <Min, Max> (&mut self, min: &Min, max: &Max, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds, applying the\n specified rounding method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":918579,"byte_end":918588,"line_start":3698,"line_end":3698,"column_start":12,"column_end":21},"name":"clamp_ref","qualname":"<Float>::clamp_ref","value":"fn <'min, 'max, Min, Max> (&self, min: &'min Min, max: &'max Max) -> ClampIncomplete<'_, 'min, 'max, Min, Max>","parent":null,"children":[],"decl_id":null,"docs":" Clamps the value within the specified bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":918558,"byte_end":918567,"line_start":3697,"line_end":3697,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":919344,"byte_end":919349,"line_start":3727,"line_end":3727,"column_start":12,"column_end":17},"name":"recip","qualname":"<Float>::recip","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":919323,"byte_end":919332,"line_start":3726,"line_end":3726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":919702,"byte_end":919711,"line_start":3743,"line_end":3743,"column_start":12,"column_end":21},"name":"recip_mut","qualname":"<Float>::recip_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":919681,"byte_end":919690,"line_start":3742,"line_end":3742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":920308,"byte_end":920319,"line_start":3764,"line_end":3764,"column_start":12,"column_end":23},"name":"recip_round","qualname":"<Float>::recip_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":920287,"byte_end":920296,"line_start":3763,"line_end":3763,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":921174,"byte_end":921183,"line_start":3790,"line_end":3790,"column_start":12,"column_end":21},"name":"recip_ref","qualname":"<Float>::recip_ref","value":"fn (&self) -> RecipIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":921153,"byte_end":921162,"line_start":3789,"line_end":3789,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":921571,"byte_end":921574,"line_start":3806,"line_end":3806,"column_start":12,"column_end":15},"name":"min","qualname":"<Float>::min","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Finds the minimum, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":921550,"byte_end":921559,"line_start":3805,"line_end":3805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":921977,"byte_end":921984,"line_start":3823,"line_end":3823,"column_start":12,"column_end":19},"name":"min_mut","qualname":"<Float>::min_mut","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the minimum, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":921956,"byte_end":921965,"line_start":3822,"line_end":3822,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":922501,"byte_end":922510,"line_start":3841,"line_end":3841,"column_start":12,"column_end":21},"name":"min_round","qualname":"<Float>::min_round","value":"fn (&mut self, other: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Finds the minimum, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":922480,"byte_end":922489,"line_start":3840,"line_end":3840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":923417,"byte_end":923424,"line_start":3868,"line_end":3868,"column_start":12,"column_end":19},"name":"min_ref","qualname":"<Float>::min_ref","value":"fn <'a> (&'a self, other: &'a Self) -> MinIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the minimum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":923396,"byte_end":923405,"line_start":3867,"line_end":3867,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":923876,"byte_end":923879,"line_start":3887,"line_end":3887,"column_start":12,"column_end":15},"name":"max","qualname":"<Float>::max","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Finds the maximum, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":923855,"byte_end":923864,"line_start":3886,"line_end":3886,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":924286,"byte_end":924293,"line_start":3904,"line_end":3904,"column_start":12,"column_end":19},"name":"max_mut","qualname":"<Float>::max_mut","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Finds the maximum, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":924265,"byte_end":924274,"line_start":3903,"line_end":3903,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":924814,"byte_end":924823,"line_start":3922,"line_end":3922,"column_start":12,"column_end":21},"name":"max_round","qualname":"<Float>::max_round","value":"fn (&mut self, other: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Finds the maximum, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":924793,"byte_end":924802,"line_start":3921,"line_end":3921,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":925734,"byte_end":925741,"line_start":3949,"line_end":3949,"column_start":12,"column_end":19},"name":"max_ref","qualname":"<Float>::max_ref","value":"fn <'a> (&'a self, other: &'a Self) -> MaxIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Finds the maximum.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":925713,"byte_end":925722,"line_start":3948,"line_end":3948,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":926488,"byte_end":926501,"line_start":3975,"line_end":3975,"column_start":12,"column_end":25},"name":"positive_diff","qualname":"<Float>::positive_diff","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the positive difference between `self` and\n `other`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":926467,"byte_end":926476,"line_start":3974,"line_end":3974,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":927193,"byte_end":927210,"line_start":3999,"line_end":3999,"column_start":12,"column_end":29},"name":"positive_diff_mut","qualname":"<Float>::positive_diff_mut","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the positive difference between `self` and\n `other`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":927172,"byte_end":927181,"line_start":3998,"line_end":3998,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":928086,"byte_end":928105,"line_start":4025,"line_end":4025,"column_start":12,"column_end":31},"name":"positive_diff_round","qualname":"<Float>::positive_diff_round","value":"fn (&mut self, other: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the positive difference between `self` and\n `other`, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":928065,"byte_end":928074,"line_start":4024,"line_end":4024,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":929312,"byte_end":929329,"line_start":4059,"line_end":4059,"column_start":12,"column_end":29},"name":"positive_diff_ref","qualname":"<Float>::positive_diff_ref","value":"fn <'a> (&'a self, other: &'a Self) -> PositiveDiffIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the positive difference.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":929291,"byte_end":929300,"line_start":4058,"line_end":4058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":929818,"byte_end":929820,"line_start":4078,"line_end":4078,"column_start":12,"column_end":14},"name":"ln","qualname":"<Float>::ln","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":929797,"byte_end":929806,"line_start":4077,"line_end":4077,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":930226,"byte_end":930232,"line_start":4095,"line_end":4095,"column_start":12,"column_end":18},"name":"ln_mut","qualname":"<Float>::ln_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":930205,"byte_end":930214,"line_start":4094,"line_end":4094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":930839,"byte_end":930847,"line_start":4116,"line_end":4116,"column_start":12,"column_end":20},"name":"ln_round","qualname":"<Float>::ln_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":930818,"byte_end":930827,"line_start":4115,"line_end":4115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":931731,"byte_end":931737,"line_start":4142,"line_end":4142,"column_start":12,"column_end":18},"name":"ln_ref","qualname":"<Float>::ln_ref","value":"fn (&self) -> LnIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":931710,"byte_end":931719,"line_start":4141,"line_end":4141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":932598,"byte_end":932602,"line_start":4168,"line_end":4168,"column_start":12,"column_end":16},"name":"ln_u","qualname":"<Float>::ln_u","value":"fn (u: u32) -> LnUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm of `u`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":932577,"byte_end":932586,"line_start":4167,"line_end":4167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":933001,"byte_end":933005,"line_start":4184,"line_end":4184,"column_start":12,"column_end":16},"name":"log2","qualname":"<Float>::log2","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 2, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":932980,"byte_end":932989,"line_start":4183,"line_end":4183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":933417,"byte_end":933425,"line_start":4201,"line_end":4201,"column_start":12,"column_end":20},"name":"log2_mut","qualname":"<Float>::log2_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 2, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":933396,"byte_end":933405,"line_start":4200,"line_end":4200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":934035,"byte_end":934045,"line_start":4222,"line_end":4222,"column_start":12,"column_end":22},"name":"log2_round","qualname":"<Float>::log2_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 2, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":934014,"byte_end":934023,"line_start":4221,"line_end":4221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":934938,"byte_end":934946,"line_start":4248,"line_end":4248,"column_start":12,"column_end":20},"name":"log2_ref","qualname":"<Float>::log2_ref","value":"fn (&self) -> Log2Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 2.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":934917,"byte_end":934926,"line_start":4247,"line_end":4247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":935367,"byte_end":935372,"line_start":4264,"line_end":4264,"column_start":12,"column_end":17},"name":"log10","qualname":"<Float>::log10","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":935346,"byte_end":935355,"line_start":4263,"line_end":4263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":935787,"byte_end":935796,"line_start":4281,"line_end":4281,"column_start":12,"column_end":21},"name":"log10_mut","qualname":"<Float>::log10_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":935766,"byte_end":935775,"line_start":4280,"line_end":4280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":936414,"byte_end":936425,"line_start":4302,"line_end":4302,"column_start":12,"column_end":23},"name":"log10_round","qualname":"<Float>::log10_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":936393,"byte_end":936402,"line_start":4301,"line_end":4301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":937323,"byte_end":937332,"line_start":4328,"line_end":4328,"column_start":12,"column_end":21},"name":"log10_ref","qualname":"<Float>::log10_ref","value":"fn (&self) -> Log10Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":937302,"byte_end":937311,"line_start":4327,"line_end":4327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":937740,"byte_end":937743,"line_start":4344,"line_end":4344,"column_start":12,"column_end":15},"name":"exp","qualname":"<Float>::exp","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":937719,"byte_end":937728,"line_start":4343,"line_end":4343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":938145,"byte_end":938152,"line_start":4361,"line_end":4361,"column_start":12,"column_end":19},"name":"exp_mut","qualname":"<Float>::exp_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":938124,"byte_end":938133,"line_start":4360,"line_end":4360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":938748,"byte_end":938757,"line_start":4382,"line_end":4382,"column_start":12,"column_end":21},"name":"exp_round","qualname":"<Float>::exp_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":938727,"byte_end":938736,"line_start":4381,"line_end":4381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":939638,"byte_end":939645,"line_start":4408,"line_end":4408,"column_start":12,"column_end":19},"name":"exp_ref","qualname":"<Float>::exp_ref","value":"fn (&self) -> ExpIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":939617,"byte_end":939626,"line_start":4407,"line_end":4407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":940061,"byte_end":940065,"line_start":4424,"line_end":4424,"column_start":12,"column_end":16},"name":"exp2","qualname":"<Float>::exp2","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes 2 to the power of `self`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":940040,"byte_end":940049,"line_start":4423,"line_end":4423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":940478,"byte_end":940486,"line_start":4441,"line_end":4441,"column_start":12,"column_end":20},"name":"exp2_mut","qualname":"<Float>::exp2_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes 2 to the power of `self`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":940457,"byte_end":940466,"line_start":4440,"line_end":4440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":941093,"byte_end":941103,"line_start":4462,"line_end":4462,"column_start":12,"column_end":22},"name":"exp2_round","qualname":"<Float>::exp2_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes 2 to the power of `self`, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":941072,"byte_end":941081,"line_start":4461,"line_end":4461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":942000,"byte_end":942008,"line_start":4488,"line_end":4488,"column_start":12,"column_end":20},"name":"exp2_ref","qualname":"<Float>::exp2_ref","value":"fn (&self) -> Exp2Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes 2 to the power of the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":941979,"byte_end":941988,"line_start":4487,"line_end":4487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":942431,"byte_end":942436,"line_start":4504,"line_end":4504,"column_start":12,"column_end":17},"name":"exp10","qualname":"<Float>::exp10","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes 10 to the power of `self`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":942410,"byte_end":942419,"line_start":4503,"line_end":4503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":942853,"byte_end":942862,"line_start":4521,"line_end":4521,"column_start":12,"column_end":21},"name":"exp10_mut","qualname":"<Float>::exp10_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes 10 to the power of `self`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":942832,"byte_end":942841,"line_start":4520,"line_end":4520,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":943473,"byte_end":943484,"line_start":4542,"line_end":4542,"column_start":12,"column_end":23},"name":"exp10_round","qualname":"<Float>::exp10_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes 10 to the power of `self`, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":943452,"byte_end":943461,"line_start":4541,"line_end":4541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":944387,"byte_end":944396,"line_start":4568,"line_end":4568,"column_start":12,"column_end":21},"name":"exp10_ref","qualname":"<Float>::exp10_ref","value":"fn (&self) -> Exp10Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes 10 to the power of the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":944366,"byte_end":944375,"line_start":4567,"line_end":4567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":944798,"byte_end":944801,"line_start":4584,"line_end":4584,"column_start":12,"column_end":15},"name":"sin","qualname":"<Float>::sin","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":944777,"byte_end":944786,"line_start":4583,"line_end":4583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":945197,"byte_end":945204,"line_start":4601,"line_end":4601,"column_start":12,"column_end":19},"name":"sin_mut","qualname":"<Float>::sin_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":945176,"byte_end":945185,"line_start":4600,"line_end":4600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":945790,"byte_end":945799,"line_start":4621,"line_end":4621,"column_start":12,"column_end":21},"name":"sin_round","qualname":"<Float>::sin_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":945769,"byte_end":945778,"line_start":4620,"line_end":4620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":946674,"byte_end":946681,"line_start":4647,"line_end":4647,"column_start":12,"column_end":19},"name":"sin_ref","qualname":"<Float>::sin_ref","value":"fn (&self) -> SinIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":946653,"byte_end":946662,"line_start":4646,"line_end":4646,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":947081,"byte_end":947084,"line_start":4663,"line_end":4663,"column_start":12,"column_end":15},"name":"cos","qualname":"<Float>::cos","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":947060,"byte_end":947069,"line_start":4662,"line_end":4662,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":947482,"byte_end":947489,"line_start":4680,"line_end":4680,"column_start":12,"column_end":19},"name":"cos_mut","qualname":"<Float>::cos_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":947461,"byte_end":947470,"line_start":4679,"line_end":4679,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":948077,"byte_end":948086,"line_start":4700,"line_end":4700,"column_start":12,"column_end":21},"name":"cos_round","qualname":"<Float>::cos_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":948056,"byte_end":948065,"line_start":4699,"line_end":4699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":948963,"byte_end":948970,"line_start":4726,"line_end":4726,"column_start":12,"column_end":19},"name":"cos_ref","qualname":"<Float>::cos_ref","value":"fn (&self) -> CosIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":948942,"byte_end":948951,"line_start":4725,"line_end":4725,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":949371,"byte_end":949374,"line_start":4742,"line_end":4742,"column_start":12,"column_end":15},"name":"tan","qualname":"<Float>::tan","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":949350,"byte_end":949359,"line_start":4741,"line_end":4741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":949773,"byte_end":949780,"line_start":4759,"line_end":4759,"column_start":12,"column_end":19},"name":"tan_mut","qualname":"<Float>::tan_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":949752,"byte_end":949761,"line_start":4758,"line_end":4758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":950363,"byte_end":950372,"line_start":4779,"line_end":4779,"column_start":12,"column_end":21},"name":"tan_round","qualname":"<Float>::tan_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":950342,"byte_end":950351,"line_start":4778,"line_end":4778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":951250,"byte_end":951257,"line_start":4805,"line_end":4805,"column_start":12,"column_end":19},"name":"tan_ref","qualname":"<Float>::tan_ref","value":"fn (&self) -> TanIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":951229,"byte_end":951238,"line_start":4804,"line_end":4804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":952002,"byte_end":952009,"line_start":4829,"line_end":4829,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<Float>::sin_cos","value":"fn (mut self, mut cos: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine of `self`, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":951981,"byte_end":951990,"line_start":4828,"line_end":4828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":952827,"byte_end":952838,"line_start":4855,"line_end":4855,"column_start":12,"column_end":23},"name":"sin_cos_mut","qualname":"<Float>::sin_cos_mut","value":"fn (&mut self, cos: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine of `self`, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":952806,"byte_end":952815,"line_start":4854,"line_end":4854,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":953890,"byte_end":953903,"line_start":4885,"line_end":4885,"column_start":12,"column_end":25},"name":"sin_cos_round","qualname":"<Float>::sin_cos_round","value":"fn (&mut self, cos: &mut Self, round: Round) -> (Ordering, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine of `self`, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":953869,"byte_end":953878,"line_start":4884,"line_end":4884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":956130,"byte_end":956141,"line_start":4939,"line_end":4939,"column_start":12,"column_end":23},"name":"sin_cos_ref","qualname":"<Float>::sin_cos_ref","value":"fn (&self) -> SinCosIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":956109,"byte_end":956118,"line_start":4938,"line_end":4938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":956547,"byte_end":956550,"line_start":4955,"line_end":4955,"column_start":12,"column_end":15},"name":"sec","qualname":"<Float>::sec","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the secant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":956526,"byte_end":956535,"line_start":4954,"line_end":4954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":956948,"byte_end":956955,"line_start":4972,"line_end":4972,"column_start":12,"column_end":19},"name":"sec_mut","qualname":"<Float>::sec_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the secant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":956927,"byte_end":956936,"line_start":4971,"line_end":4971,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":957542,"byte_end":957551,"line_start":4992,"line_end":4992,"column_start":12,"column_end":21},"name":"sec_round","qualname":"<Float>::sec_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the secant, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":957521,"byte_end":957530,"line_start":4991,"line_end":4991,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":958428,"byte_end":958435,"line_start":5018,"line_end":5018,"column_start":12,"column_end":19},"name":"sec_ref","qualname":"<Float>::sec_ref","value":"fn (&self) -> SecIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the secant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":958407,"byte_end":958416,"line_start":5017,"line_end":5017,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":958837,"byte_end":958840,"line_start":5034,"line_end":5034,"column_start":12,"column_end":15},"name":"csc","qualname":"<Float>::csc","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosecant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":958816,"byte_end":958825,"line_start":5033,"line_end":5033,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":959240,"byte_end":959247,"line_start":5051,"line_end":5051,"column_start":12,"column_end":19},"name":"csc_mut","qualname":"<Float>::csc_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosecant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":959219,"byte_end":959228,"line_start":5050,"line_end":5050,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":959831,"byte_end":959840,"line_start":5071,"line_end":5071,"column_start":12,"column_end":21},"name":"csc_round","qualname":"<Float>::csc_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosecant, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":959810,"byte_end":959819,"line_start":5070,"line_end":5070,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":960719,"byte_end":960726,"line_start":5097,"line_end":5097,"column_start":12,"column_end":19},"name":"csc_ref","qualname":"<Float>::csc_ref","value":"fn (&self) -> CscIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosecant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":960698,"byte_end":960707,"line_start":5096,"line_end":5096,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":961129,"byte_end":961132,"line_start":5113,"line_end":5113,"column_start":12,"column_end":15},"name":"cot","qualname":"<Float>::cot","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the cotangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":961108,"byte_end":961117,"line_start":5112,"line_end":5112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":961533,"byte_end":961540,"line_start":5130,"line_end":5130,"column_start":12,"column_end":19},"name":"cot_mut","qualname":"<Float>::cot_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the cotangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":961512,"byte_end":961521,"line_start":5129,"line_end":5129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":962144,"byte_end":962153,"line_start":5151,"line_end":5151,"column_start":12,"column_end":21},"name":"cot_round","qualname":"<Float>::cot_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the cotangent, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":962123,"byte_end":962132,"line_start":5150,"line_end":5150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":963033,"byte_end":963040,"line_start":5177,"line_end":5177,"column_start":12,"column_end":19},"name":"cot_ref","qualname":"<Float>::cot_ref","value":"fn (&self) -> CotIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the cotangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":963012,"byte_end":963021,"line_start":5176,"line_end":5176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":963447,"byte_end":963451,"line_start":5193,"line_end":5193,"column_start":12,"column_end":16},"name":"asin","qualname":"<Float>::asin","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":963426,"byte_end":963435,"line_start":5192,"line_end":5192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":963855,"byte_end":963863,"line_start":5210,"line_end":5210,"column_start":12,"column_end":20},"name":"asin_mut","qualname":"<Float>::asin_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":963834,"byte_end":963843,"line_start":5209,"line_end":5209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":964465,"byte_end":964475,"line_start":5230,"line_end":5230,"column_start":12,"column_end":22},"name":"asin_round","qualname":"<Float>::asin_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-sine, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":964444,"byte_end":964453,"line_start":5229,"line_end":5229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":965360,"byte_end":965368,"line_start":5256,"line_end":5256,"column_start":12,"column_end":20},"name":"asin_ref","qualname":"<Float>::asin_ref","value":"fn (&self) -> AsinIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":965339,"byte_end":965348,"line_start":5255,"line_end":5255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":965778,"byte_end":965782,"line_start":5272,"line_end":5272,"column_start":12,"column_end":16},"name":"acos","qualname":"<Float>::acos","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":965757,"byte_end":965766,"line_start":5271,"line_end":5271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":966187,"byte_end":966195,"line_start":5289,"line_end":5289,"column_start":12,"column_end":20},"name":"acos_mut","qualname":"<Float>::acos_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":966166,"byte_end":966175,"line_start":5288,"line_end":5288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":966799,"byte_end":966809,"line_start":5310,"line_end":5310,"column_start":12,"column_end":22},"name":"acos_round","qualname":"<Float>::acos_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-cosine, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":966778,"byte_end":966787,"line_start":5309,"line_end":5309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":967695,"byte_end":967703,"line_start":5336,"line_end":5336,"column_start":12,"column_end":20},"name":"acos_ref","qualname":"<Float>::acos_ref","value":"fn (&self) -> AcosIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":967674,"byte_end":967683,"line_start":5335,"line_end":5335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":968115,"byte_end":968119,"line_start":5352,"line_end":5352,"column_start":12,"column_end":16},"name":"atan","qualname":"<Float>::atan","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":968094,"byte_end":968103,"line_start":5351,"line_end":5351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":968526,"byte_end":968534,"line_start":5369,"line_end":5369,"column_start":12,"column_end":20},"name":"atan_mut","qualname":"<Float>::atan_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":968505,"byte_end":968514,"line_start":5368,"line_end":5368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":969150,"byte_end":969160,"line_start":5390,"line_end":5390,"column_start":12,"column_end":22},"name":"atan_round","qualname":"<Float>::atan_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":969129,"byte_end":969138,"line_start":5389,"line_end":5389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":970048,"byte_end":970056,"line_start":5416,"line_end":5416,"column_start":12,"column_end":20},"name":"atan_ref","qualname":"<Float>::atan_ref","value":"fn (&self) -> AtanIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":970027,"byte_end":970036,"line_start":5415,"line_end":5415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":970661,"byte_end":970666,"line_start":5437,"line_end":5437,"column_start":12,"column_end":17},"name":"atan2","qualname":"<Float>::atan2","value":"fn (mut self, x: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent2 of `self` and `x`, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":970640,"byte_end":970649,"line_start":5436,"line_end":5436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":971278,"byte_end":971287,"line_start":5459,"line_end":5459,"column_start":12,"column_end":21},"name":"atan2_mut","qualname":"<Float>::atan2_mut","value":"fn (&mut self, x: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent2 of `self` and `x`, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":971257,"byte_end":971266,"line_start":5458,"line_end":5458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":972096,"byte_end":972107,"line_start":5484,"line_end":5484,"column_start":12,"column_end":23},"name":"atan2_round","qualname":"<Float>::atan2_round","value":"fn (&mut self, x: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent2 of `self` and `x`, applying the\n specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":972075,"byte_end":972084,"line_start":5483,"line_end":5483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":973200,"byte_end":973209,"line_start":5515,"line_end":5515,"column_start":12,"column_end":21},"name":"atan2_ref","qualname":"<Float>::atan2_ref","value":"fn <'a> (&'a self, x: &'a Self) -> Atan2Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the arc-tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":973179,"byte_end":973188,"line_start":5514,"line_end":5514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":973648,"byte_end":973652,"line_start":5531,"line_end":5531,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Float>::sinh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":973627,"byte_end":973636,"line_start":5530,"line_end":5530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":974061,"byte_end":974069,"line_start":5548,"line_end":5548,"column_start":12,"column_end":20},"name":"sinh_mut","qualname":"<Float>::sinh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":974040,"byte_end":974049,"line_start":5547,"line_end":5547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":974678,"byte_end":974688,"line_start":5569,"line_end":5569,"column_start":12,"column_end":22},"name":"sinh_round","qualname":"<Float>::sinh_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":974657,"byte_end":974666,"line_start":5568,"line_end":5568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":975578,"byte_end":975586,"line_start":5595,"line_end":5595,"column_start":12,"column_end":20},"name":"sinh_ref","qualname":"<Float>::sinh_ref","value":"fn (&self) -> SinhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":975557,"byte_end":975566,"line_start":5594,"line_end":5594,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":976002,"byte_end":976006,"line_start":5611,"line_end":5611,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Float>::cosh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":975981,"byte_end":975990,"line_start":5610,"line_end":5610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":976417,"byte_end":976425,"line_start":5628,"line_end":5628,"column_start":12,"column_end":20},"name":"cosh_mut","qualname":"<Float>::cosh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":976396,"byte_end":976405,"line_start":5627,"line_end":5627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":977033,"byte_end":977043,"line_start":5649,"line_end":5649,"column_start":12,"column_end":22},"name":"cosh_round","qualname":"<Float>::cosh_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":977012,"byte_end":977021,"line_start":5648,"line_end":5648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":977935,"byte_end":977943,"line_start":5675,"line_end":5675,"column_start":12,"column_end":20},"name":"cosh_ref","qualname":"<Float>::cosh_ref","value":"fn (&self) -> CoshIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":977914,"byte_end":977923,"line_start":5674,"line_end":5674,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":978360,"byte_end":978364,"line_start":5691,"line_end":5691,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Float>::tanh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":978339,"byte_end":978348,"line_start":5690,"line_end":5690,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":978776,"byte_end":978784,"line_start":5708,"line_end":5708,"column_start":12,"column_end":20},"name":"tanh_mut","qualname":"<Float>::tanh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":978755,"byte_end":978764,"line_start":5707,"line_end":5707,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":979396,"byte_end":979406,"line_start":5729,"line_end":5729,"column_start":12,"column_end":22},"name":"tanh_round","qualname":"<Float>::tanh_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":979375,"byte_end":979384,"line_start":5728,"line_end":5728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":980299,"byte_end":980307,"line_start":5755,"line_end":5755,"column_start":12,"column_end":20},"name":"tanh_ref","qualname":"<Float>::tanh_ref","value":"fn (&self) -> TanhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":980278,"byte_end":980287,"line_start":5754,"line_end":5754,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":981075,"byte_end":981084,"line_start":5779,"line_end":5779,"column_start":12,"column_end":21},"name":"sinh_cosh","qualname":"<Float>::sinh_cosh","value":"fn (mut self, mut cos: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine and cosine of `self`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":981054,"byte_end":981063,"line_start":5778,"line_end":5778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":981927,"byte_end":981940,"line_start":5805,"line_end":5805,"column_start":12,"column_end":25},"name":"sinh_cosh_mut","qualname":"<Float>::sinh_cosh_mut","value":"fn (&mut self, cos: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine and cosine of `self`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":981906,"byte_end":981915,"line_start":5804,"line_end":5804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":983018,"byte_end":983033,"line_start":5835,"line_end":5835,"column_start":12,"column_end":27},"name":"sinh_cosh_round","qualname":"<Float>::sinh_cosh_round","value":"fn (&mut self, cos: &mut Self, round: Round) -> (Ordering, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine and cosine of `self`,\n applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":982997,"byte_end":983006,"line_start":5834,"line_end":5834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":985304,"byte_end":985317,"line_start":5889,"line_end":5889,"column_start":12,"column_end":25},"name":"sinh_cosh_ref","qualname":"<Float>::sinh_cosh_ref","value":"fn (&self) -> SinhCoshIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine and cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":985283,"byte_end":985292,"line_start":5888,"line_end":5888,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":985741,"byte_end":985745,"line_start":5905,"line_end":5905,"column_start":12,"column_end":16},"name":"sech","qualname":"<Float>::sech","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic secant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":985720,"byte_end":985729,"line_start":5904,"line_end":5904,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":986156,"byte_end":986164,"line_start":5922,"line_end":5922,"column_start":12,"column_end":20},"name":"sech_mut","qualname":"<Float>::sech_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic secant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":986135,"byte_end":986144,"line_start":5921,"line_end":5921,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":986768,"byte_end":986778,"line_start":5943,"line_end":5943,"column_start":12,"column_end":22},"name":"sech_round","qualname":"<Float>::sech_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic secant, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":986747,"byte_end":986756,"line_start":5942,"line_end":5942,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":987670,"byte_end":987678,"line_start":5969,"line_end":5969,"column_start":12,"column_end":20},"name":"sech_ref","qualname":"<Float>::sech_ref","value":"fn (&self) -> SechIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic secant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":987649,"byte_end":987658,"line_start":5968,"line_end":5968,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":988096,"byte_end":988100,"line_start":5985,"line_end":5985,"column_start":12,"column_end":16},"name":"csch","qualname":"<Float>::csch","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosecant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":988075,"byte_end":988084,"line_start":5984,"line_end":5984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":988513,"byte_end":988521,"line_start":6002,"line_end":6002,"column_start":12,"column_end":20},"name":"csch_mut","qualname":"<Float>::csch_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosecant, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":988492,"byte_end":988501,"line_start":6001,"line_end":6001,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":989134,"byte_end":989144,"line_start":6023,"line_end":6023,"column_start":12,"column_end":22},"name":"csch_round","qualname":"<Float>::csch_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosecant, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":989113,"byte_end":989122,"line_start":6022,"line_end":6022,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":990038,"byte_end":990046,"line_start":6049,"line_end":6049,"column_start":12,"column_end":20},"name":"csch_ref","qualname":"<Float>::csch_ref","value":"fn (&self) -> CschIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosecant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":990017,"byte_end":990026,"line_start":6048,"line_end":6048,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":990465,"byte_end":990469,"line_start":6065,"line_end":6065,"column_start":12,"column_end":16},"name":"coth","qualname":"<Float>::coth","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cotangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":990444,"byte_end":990453,"line_start":6064,"line_end":6064,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":990883,"byte_end":990891,"line_start":6082,"line_end":6082,"column_start":12,"column_end":20},"name":"coth_mut","qualname":"<Float>::coth_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cotangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":990862,"byte_end":990871,"line_start":6081,"line_end":6081,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":991502,"byte_end":991512,"line_start":6103,"line_end":6103,"column_start":12,"column_end":22},"name":"coth_round","qualname":"<Float>::coth_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cotangent, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":991481,"byte_end":991490,"line_start":6102,"line_end":6102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":992407,"byte_end":992415,"line_start":6129,"line_end":6129,"column_start":12,"column_end":20},"name":"coth_ref","qualname":"<Float>::coth_ref","value":"fn (&self) -> CothIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cotangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":992386,"byte_end":992395,"line_start":6128,"line_end":6128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":992840,"byte_end":992845,"line_start":6145,"line_end":6145,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Float>::asinh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":992819,"byte_end":992828,"line_start":6144,"line_end":6144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":993264,"byte_end":993273,"line_start":6162,"line_end":6162,"column_start":12,"column_end":21},"name":"asinh_mut","qualname":"<Float>::asinh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":993243,"byte_end":993252,"line_start":6161,"line_end":6161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":993886,"byte_end":993897,"line_start":6183,"line_end":6183,"column_start":12,"column_end":23},"name":"asinh_round","qualname":"<Float>::asinh_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic sine, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":993865,"byte_end":993874,"line_start":6182,"line_end":6182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":994799,"byte_end":994808,"line_start":6209,"line_end":6209,"column_start":12,"column_end":21},"name":"asinh_ref","qualname":"<Float>::asinh_ref","value":"fn (&self) -> AsinhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":994778,"byte_end":994787,"line_start":6208,"line_end":6208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":995245,"byte_end":995250,"line_start":6226,"line_end":6226,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Float>::acosh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":995224,"byte_end":995233,"line_start":6225,"line_end":6225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":995679,"byte_end":995688,"line_start":6244,"line_end":6244,"column_start":12,"column_end":21},"name":"acosh_mut","qualname":"<Float>::acosh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":995658,"byte_end":995667,"line_start":6243,"line_end":6243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":996309,"byte_end":996320,"line_start":6265,"line_end":6265,"column_start":12,"column_end":23},"name":"acosh_round","qualname":"<Float>::acosh_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":996288,"byte_end":996297,"line_start":6264,"line_end":6264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":997223,"byte_end":997232,"line_start":6291,"line_end":6291,"column_start":12,"column_end":21},"name":"acosh_ref","qualname":"<Float>::acosh_ref","value":"fn (&self) -> AcoshIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":997202,"byte_end":997211,"line_start":6290,"line_end":6290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":997670,"byte_end":997675,"line_start":6308,"line_end":6308,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Float>::atanh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":997649,"byte_end":997658,"line_start":6307,"line_end":6307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":998105,"byte_end":998114,"line_start":6326,"line_end":6326,"column_start":12,"column_end":21},"name":"atanh_mut","qualname":"<Float>::atanh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":998084,"byte_end":998093,"line_start":6325,"line_end":6325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":998733,"byte_end":998744,"line_start":6347,"line_end":6347,"column_start":12,"column_end":23},"name":"atanh_round","qualname":"<Float>::atanh_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent, applying the\n specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":998712,"byte_end":998721,"line_start":6346,"line_end":6346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":999649,"byte_end":999658,"line_start":6373,"line_end":6373,"column_start":12,"column_end":21},"name":"atanh_ref","qualname":"<Float>::atanh_ref","value":"fn (&self) -> AtanhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":999628,"byte_end":999637,"line_start":6372,"line_end":6372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1000539,"byte_end":1000548,"line_start":6399,"line_end":6399,"column_start":12,"column_end":21},"name":"factorial","qualname":"<Float>::factorial","value":"fn (n: u32) -> FactorialIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the factorial of <i>n</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1000518,"byte_end":1000527,"line_start":6398,"line_end":6398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1001068,"byte_end":1001073,"line_start":6417,"line_end":6417,"column_start":12,"column_end":17},"name":"ln_1p","qualname":"<Float>::ln_1p","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm of one plus `self`, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1001047,"byte_end":1001056,"line_start":6416,"line_end":6416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1001593,"byte_end":1001602,"line_start":6436,"line_end":6436,"column_start":12,"column_end":21},"name":"ln_1p_mut","qualname":"<Float>::ln_1p_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm of one plus `self`, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1001572,"byte_end":1001581,"line_start":6435,"line_end":6435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1002336,"byte_end":1002347,"line_start":6458,"line_end":6458,"column_start":12,"column_end":23},"name":"ln_1p_round","qualname":"<Float>::ln_1p_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm of one plus `self`, applying\n the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1002315,"byte_end":1002324,"line_start":6457,"line_end":6457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1003345,"byte_end":1003354,"line_start":6485,"line_end":6485,"column_start":12,"column_end":21},"name":"ln_1p_ref","qualname":"<Float>::ln_1p_ref","value":"fn (&self) -> Ln1pIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logorithm of one plus the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1003324,"byte_end":1003333,"line_start":6484,"line_end":6484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1003878,"byte_end":1003884,"line_start":6503,"line_end":6503,"column_start":12,"column_end":18},"name":"exp_m1","qualname":"<Float>::exp_m1","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtracts one from the exponential of `self`, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1003857,"byte_end":1003866,"line_start":6502,"line_end":6502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1004401,"byte_end":1004411,"line_start":6522,"line_end":6522,"column_start":12,"column_end":22},"name":"exp_m1_mut","qualname":"<Float>::exp_m1_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Subtracts one from the exponential of `self`, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1004380,"byte_end":1004389,"line_start":6521,"line_end":6521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1005140,"byte_end":1005152,"line_start":6544,"line_end":6544,"column_start":12,"column_end":24},"name":"exp_m1_round","qualname":"<Float>::exp_m1_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Subtracts one from the exponential of `self`, applying the\n specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1005119,"byte_end":1005128,"line_start":6543,"line_end":6543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1006160,"byte_end":1006170,"line_start":6572,"line_end":6572,"column_start":12,"column_end":22},"name":"exp_m1_ref","qualname":"<Float>::exp_m1_ref","value":"fn (&self) -> ExpM1Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes one less than the exponential of the\n value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1006139,"byte_end":1006148,"line_start":6571,"line_end":6571,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1006591,"byte_end":1006595,"line_start":6588,"line_end":6588,"column_start":12,"column_end":16},"name":"eint","qualname":"<Float>::eint","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential integral, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1006570,"byte_end":1006579,"line_start":6587,"line_end":6587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1007009,"byte_end":1007017,"line_start":6605,"line_end":6605,"column_start":12,"column_end":20},"name":"eint_mut","qualname":"<Float>::eint_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential integral, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1006988,"byte_end":1006997,"line_start":6604,"line_end":6604,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1007624,"byte_end":1007634,"line_start":6626,"line_end":6626,"column_start":12,"column_end":22},"name":"eint_round","qualname":"<Float>::eint_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential integral, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1007603,"byte_end":1007612,"line_start":6625,"line_end":6625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1008529,"byte_end":1008537,"line_start":6652,"line_end":6652,"column_start":12,"column_end":20},"name":"eint_ref","qualname":"<Float>::eint_ref","value":"fn (&self) -> EintIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential integral.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1008508,"byte_end":1008517,"line_start":6651,"line_end":6651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1008979,"byte_end":1008982,"line_start":6669,"line_end":6669,"column_start":12,"column_end":15},"name":"li2","qualname":"<Float>::li2","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the real part of the dilogarithm of `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1008958,"byte_end":1008967,"line_start":6668,"line_end":6668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1009420,"byte_end":1009427,"line_start":6687,"line_end":6687,"column_start":12,"column_end":19},"name":"li2_mut","qualname":"<Float>::li2_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the real part of the dilogarithm of `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1009399,"byte_end":1009408,"line_start":6686,"line_end":6686,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1010054,"byte_end":1010063,"line_start":6708,"line_end":6708,"column_start":12,"column_end":21},"name":"li2_round","qualname":"<Float>::li2_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the real part of the dilogarithm of `self`, applying\n the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1010033,"byte_end":1010042,"line_start":6707,"line_end":6707,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1010983,"byte_end":1010990,"line_start":6735,"line_end":6735,"column_start":12,"column_end":19},"name":"li2_ref","qualname":"<Float>::li2_ref","value":"fn (&self) -> Li2Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the real part of the dilogarithm of the\n value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1010962,"byte_end":1010971,"line_start":6734,"line_end":6734,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1011435,"byte_end":1011440,"line_start":6752,"line_end":6752,"column_start":12,"column_end":17},"name":"gamma","qualname":"<Float>::gamma","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the gamma function on `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1011414,"byte_end":1011423,"line_start":6751,"line_end":6751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1011881,"byte_end":1011890,"line_start":6770,"line_end":6770,"column_start":12,"column_end":21},"name":"gamma_mut","qualname":"<Float>::gamma_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the gamma function on `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1011860,"byte_end":1011869,"line_start":6769,"line_end":6769,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1012526,"byte_end":1012537,"line_start":6791,"line_end":6791,"column_start":12,"column_end":23},"name":"gamma_round","qualname":"<Float>::gamma_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the gamma function on `self`, applying\n the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1012505,"byte_end":1012514,"line_start":6790,"line_end":6790,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1013443,"byte_end":1013452,"line_start":6817,"line_end":6817,"column_start":12,"column_end":21},"name":"gamma_ref","qualname":"<Float>::gamma_ref","value":"fn (&self) -> GammaIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the gamma function on the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1013422,"byte_end":1013431,"line_start":6816,"line_end":6816,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1013982,"byte_end":1013991,"line_start":6835,"line_end":6835,"column_start":12,"column_end":21},"name":"gamma_inc","qualname":"<Float>::gamma_inc","value":"fn (mut self, x: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the upper incomplete gamma function\n on `self` and `x`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1013961,"byte_end":1013970,"line_start":6834,"line_end":6834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1014514,"byte_end":1014527,"line_start":6854,"line_end":6854,"column_start":12,"column_end":25},"name":"gamma_inc_mut","qualname":"<Float>::gamma_inc_mut","value":"fn (&mut self, x: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the upper incomplete gamma function\n on `self`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1014493,"byte_end":1014502,"line_start":6853,"line_end":6853,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1015257,"byte_end":1015272,"line_start":6876,"line_end":6876,"column_start":12,"column_end":27},"name":"gamma_inc_round","qualname":"<Float>::gamma_inc_round","value":"fn (&mut self, x: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the upper incomplete gamma function\n on `self`, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1015236,"byte_end":1015245,"line_start":6875,"line_end":6875,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1016274,"byte_end":1016287,"line_start":6903,"line_end":6903,"column_start":12,"column_end":25},"name":"gamma_inc_ref","qualname":"<Float>::gamma_inc_ref","value":"fn <'a> (&'a self, x: &'a Self) -> GammaIncIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the upper incomplete gamma function on the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1016253,"byte_end":1016262,"line_start":6902,"line_end":6902,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1016779,"byte_end":1016787,"line_start":6920,"line_end":6920,"column_start":12,"column_end":20},"name":"ln_gamma","qualname":"<Float>::ln_gamma","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the gamma function on `self`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1016758,"byte_end":1016767,"line_start":6919,"line_end":6919,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1017239,"byte_end":1017251,"line_start":6938,"line_end":6938,"column_start":12,"column_end":24},"name":"ln_gamma_mut","qualname":"<Float>::ln_gamma_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the gamma function on `self`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1017218,"byte_end":1017227,"line_start":6937,"line_end":6937,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1017910,"byte_end":1017924,"line_start":6959,"line_end":6959,"column_start":12,"column_end":26},"name":"ln_gamma_round","qualname":"<Float>::ln_gamma_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the gamma function on `self`,\n applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1017889,"byte_end":1017898,"line_start":6958,"line_end":6958,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1018867,"byte_end":1018879,"line_start":6986,"line_end":6986,"column_start":12,"column_end":24},"name":"ln_gamma_ref","qualname":"<Float>::ln_gamma_ref","value":"fn (&self) -> LnGammaIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the gamma function on\n the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1018846,"byte_end":1018855,"line_start":6985,"line_end":6985,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1020863,"byte_end":1020875,"line_start":7038,"line_end":7038,"column_start":12,"column_end":24},"name":"ln_abs_gamma","qualname":"<Float>::ln_abs_gamma","value":"fn (mut self) -> (Self, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the absolute value of the gamma\n function on `self`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1020842,"byte_end":1020851,"line_start":7037,"line_end":7037,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1022240,"byte_end":1022256,"line_start":7073,"line_end":7073,"column_start":12,"column_end":28},"name":"ln_abs_gamma_mut","qualname":"<Float>::ln_abs_gamma_mut","value":"fn (&mut self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the absolute value of the gamma\n function on `self`, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1022219,"byte_end":1022228,"line_start":7072,"line_end":7072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1023429,"byte_end":1023447,"line_start":7109,"line_end":7109,"column_start":12,"column_end":30},"name":"ln_abs_gamma_round","qualname":"<Float>::ln_abs_gamma_round","value":"fn (&mut self, round: Round) -> (Ordering, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the absolute value of the gamma\n function on `self`, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1023408,"byte_end":1023417,"line_start":7108,"line_end":7108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1025818,"byte_end":1025834,"line_start":7168,"line_end":7168,"column_start":12,"column_end":28},"name":"ln_abs_gamma_ref","qualname":"<Float>::ln_abs_gamma_ref","value":"fn (&self) -> LnAbsGammaIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm of the absolute value of the gamma\n function on `val`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1025797,"byte_end":1025806,"line_start":7167,"line_end":7167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1026302,"byte_end":1026309,"line_start":7185,"line_end":7185,"column_start":12,"column_end":19},"name":"digamma","qualname":"<Float>::digamma","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Digamma function on `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1026281,"byte_end":1026290,"line_start":7184,"line_end":7184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1026757,"byte_end":1026768,"line_start":7203,"line_end":7203,"column_start":12,"column_end":23},"name":"digamma_mut","qualname":"<Float>::digamma_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Digamma function on `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1026736,"byte_end":1026745,"line_start":7202,"line_end":7202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1027420,"byte_end":1027433,"line_start":7224,"line_end":7224,"column_start":12,"column_end":25},"name":"digamma_round","qualname":"<Float>::digamma_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Digamma function on `self`, applying\n the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1027399,"byte_end":1027408,"line_start":7223,"line_end":7223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1028350,"byte_end":1028361,"line_start":7250,"line_end":7250,"column_start":12,"column_end":23},"name":"digamma_ref","qualname":"<Float>::digamma_ref","value":"fn (&self) -> DigammaIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Digamma function on the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1028329,"byte_end":1028338,"line_start":7249,"line_end":7249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1028818,"byte_end":1028822,"line_start":7267,"line_end":7267,"column_start":12,"column_end":16},"name":"zeta","qualname":"<Float>::zeta","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Riemann Zeta function on `self`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1028797,"byte_end":1028806,"line_start":7266,"line_end":7266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1029268,"byte_end":1029276,"line_start":7285,"line_end":7285,"column_start":12,"column_end":20},"name":"zeta_mut","qualname":"<Float>::zeta_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Riemann Zeta function on `self`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1029247,"byte_end":1029256,"line_start":7284,"line_end":7284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1029907,"byte_end":1029917,"line_start":7306,"line_end":7306,"column_start":12,"column_end":22},"name":"zeta_round","qualname":"<Float>::zeta_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Riemann Zeta function on `self`,\n applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1029886,"byte_end":1029895,"line_start":7305,"line_end":7305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1030826,"byte_end":1030834,"line_start":7332,"line_end":7332,"column_start":12,"column_end":20},"name":"zeta_ref","qualname":"<Float>::zeta_ref","value":"fn (&self) -> ZetaIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Riemann Zeta function on the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1030805,"byte_end":1030814,"line_start":7331,"line_end":7331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1031711,"byte_end":1031717,"line_start":7358,"line_end":7358,"column_start":12,"column_end":18},"name":"zeta_u","qualname":"<Float>::zeta_u","value":"fn (u: u32) -> ZetaUIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Computes the Riemann Zeta function on <i>u</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1031690,"byte_end":1031699,"line_start":7357,"line_end":7357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1032134,"byte_end":1032137,"line_start":7375,"line_end":7375,"column_start":12,"column_end":15},"name":"erf","qualname":"<Float>::erf","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the error function, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1032113,"byte_end":1032122,"line_start":7374,"line_end":7374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1032564,"byte_end":1032571,"line_start":7393,"line_end":7393,"column_start":12,"column_end":19},"name":"erf_mut","qualname":"<Float>::erf_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the error function, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1032543,"byte_end":1032552,"line_start":7392,"line_end":7392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1033191,"byte_end":1033200,"line_start":7414,"line_end":7414,"column_start":12,"column_end":21},"name":"erf_round","qualname":"<Float>::erf_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the error function, applying the\n specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1033170,"byte_end":1033179,"line_start":7413,"line_end":7413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1034085,"byte_end":1034092,"line_start":7440,"line_end":7440,"column_start":12,"column_end":19},"name":"erf_ref","qualname":"<Float>::erf_ref","value":"fn (&self) -> ErfIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the error function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1034064,"byte_end":1034073,"line_start":7439,"line_end":7439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1034538,"byte_end":1034542,"line_start":7457,"line_end":7457,"column_start":12,"column_end":16},"name":"erfc","qualname":"<Float>::erfc","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the complementary error function,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1034517,"byte_end":1034526,"line_start":7456,"line_end":7456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1034985,"byte_end":1034993,"line_start":7475,"line_end":7475,"column_start":12,"column_end":20},"name":"erfc_mut","qualname":"<Float>::erfc_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the complementary error function,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1034964,"byte_end":1034973,"line_start":7474,"line_end":7474,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1035634,"byte_end":1035644,"line_start":7496,"line_end":7496,"column_start":12,"column_end":22},"name":"erfc_round","qualname":"<Float>::erfc_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the complementary error function,\n applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1035613,"byte_end":1035622,"line_start":7495,"line_end":7495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1036547,"byte_end":1036555,"line_start":7522,"line_end":7522,"column_start":12,"column_end":20},"name":"erfc_ref","qualname":"<Float>::erfc_ref","value":"fn (&self) -> ErfcIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complementary error function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1036526,"byte_end":1036535,"line_start":7521,"line_end":7521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1037006,"byte_end":1037008,"line_start":7539,"line_end":7539,"column_start":12,"column_end":14},"name":"j0","qualname":"<Float>::j0","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order 0, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1036985,"byte_end":1036994,"line_start":7538,"line_end":7538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1037456,"byte_end":1037462,"line_start":7557,"line_end":7557,"column_start":12,"column_end":18},"name":"j0_mut","qualname":"<Float>::j0_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order 0, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1037435,"byte_end":1037444,"line_start":7556,"line_end":7556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1038097,"byte_end":1038105,"line_start":7578,"line_end":7578,"column_start":12,"column_end":20},"name":"j0_round","qualname":"<Float>::j0_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order 0, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1038076,"byte_end":1038085,"line_start":7577,"line_end":7577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1039009,"byte_end":1039015,"line_start":7604,"line_end":7604,"column_start":12,"column_end":18},"name":"j0_ref","qualname":"<Float>::j0_ref","value":"fn (&self) -> J0Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the first kind Bessel function of order 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1038988,"byte_end":1038997,"line_start":7603,"line_end":7603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1039462,"byte_end":1039464,"line_start":7621,"line_end":7621,"column_start":12,"column_end":14},"name":"j1","qualname":"<Float>::j1","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order 1, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1039441,"byte_end":1039450,"line_start":7620,"line_end":7620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1039912,"byte_end":1039918,"line_start":7639,"line_end":7639,"column_start":12,"column_end":18},"name":"j1_mut","qualname":"<Float>::j1_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order 1, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1039891,"byte_end":1039900,"line_start":7638,"line_end":7638,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1040549,"byte_end":1040557,"line_start":7660,"line_end":7660,"column_start":12,"column_end":20},"name":"j1_round","qualname":"<Float>::j1_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order 1, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1040528,"byte_end":1040537,"line_start":7659,"line_end":7659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1041461,"byte_end":1041467,"line_start":7686,"line_end":7686,"column_start":12,"column_end":18},"name":"j1_ref","qualname":"<Float>::j1_ref","value":"fn (&self) -> J1Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the first kind Bessel function of order 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1041440,"byte_end":1041449,"line_start":7685,"line_end":7685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1041922,"byte_end":1041924,"line_start":7703,"line_end":7703,"column_start":12,"column_end":14},"name":"jn","qualname":"<Float>::jn","value":"fn (mut self, n: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order <i>n</i>, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1041901,"byte_end":1041910,"line_start":7702,"line_end":7702,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1042391,"byte_end":1042397,"line_start":7721,"line_end":7721,"column_start":12,"column_end":18},"name":"jn_mut","qualname":"<Float>::jn_mut","value":"fn (&mut self, n: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order <i>n</i>, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1042370,"byte_end":1042379,"line_start":7720,"line_end":7720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1043062,"byte_end":1043070,"line_start":7742,"line_end":7742,"column_start":12,"column_end":20},"name":"jn_round","qualname":"<Float>::jn_round","value":"fn (&mut self, n: i32, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the first kind Bessel function of\n order <i>n</i>, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1043041,"byte_end":1043050,"line_start":7741,"line_end":7741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1043993,"byte_end":1043999,"line_start":7768,"line_end":7768,"column_start":12,"column_end":18},"name":"jn_ref","qualname":"<Float>::jn_ref","value":"fn (&self, n: i32) -> JnIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the first kind Bessel function of order <i>n</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1043972,"byte_end":1043981,"line_start":7767,"line_end":7767,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1044458,"byte_end":1044460,"line_start":7785,"line_end":7785,"column_start":12,"column_end":14},"name":"y0","qualname":"<Float>::y0","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order 0, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1044437,"byte_end":1044446,"line_start":7784,"line_end":7784,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1044909,"byte_end":1044915,"line_start":7803,"line_end":7803,"column_start":12,"column_end":18},"name":"y0_mut","qualname":"<Float>::y0_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order 0, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1044888,"byte_end":1044897,"line_start":7802,"line_end":7802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1045549,"byte_end":1045557,"line_start":7824,"line_end":7824,"column_start":12,"column_end":20},"name":"y0_round","qualname":"<Float>::y0_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order 0, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1045528,"byte_end":1045537,"line_start":7823,"line_end":7823,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1046462,"byte_end":1046468,"line_start":7850,"line_end":7850,"column_start":12,"column_end":18},"name":"y0_ref","qualname":"<Float>::y0_ref","value":"fn (&self) -> Y0Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the second kind Bessel function of order 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1046441,"byte_end":1046450,"line_start":7849,"line_end":7849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1046917,"byte_end":1046919,"line_start":7867,"line_end":7867,"column_start":12,"column_end":14},"name":"y1","qualname":"<Float>::y1","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order 1, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1046896,"byte_end":1046905,"line_start":7866,"line_end":7866,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1047369,"byte_end":1047375,"line_start":7885,"line_end":7885,"column_start":12,"column_end":18},"name":"y1_mut","qualname":"<Float>::y1_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order 1, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1047348,"byte_end":1047357,"line_start":7884,"line_end":7884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1048023,"byte_end":1048031,"line_start":7906,"line_end":7906,"column_start":12,"column_end":20},"name":"y1_round","qualname":"<Float>::y1_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order 1, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1048002,"byte_end":1048011,"line_start":7905,"line_end":7905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1048937,"byte_end":1048943,"line_start":7932,"line_end":7932,"column_start":12,"column_end":18},"name":"y1_ref","qualname":"<Float>::y1_ref","value":"fn (&self) -> Y1Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the second kind Bessel function of order 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1048916,"byte_end":1048925,"line_start":7931,"line_end":7931,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1049400,"byte_end":1049402,"line_start":7949,"line_end":7949,"column_start":12,"column_end":14},"name":"yn","qualname":"<Float>::yn","value":"fn (mut self, n: i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order <i>n</i>, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1049379,"byte_end":1049388,"line_start":7948,"line_end":7948,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1049871,"byte_end":1049877,"line_start":7967,"line_end":7967,"column_start":12,"column_end":18},"name":"yn_mut","qualname":"<Float>::yn_mut","value":"fn (&mut self, n: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order <i>n</i>, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1049850,"byte_end":1049859,"line_start":7966,"line_end":7966,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1050539,"byte_end":1050547,"line_start":7988,"line_end":7988,"column_start":12,"column_end":20},"name":"yn_round","qualname":"<Float>::yn_round","value":"fn (&mut self, n: i32, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the second kind Bessel function of\n order <i>n</i>, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1050518,"byte_end":1050527,"line_start":7987,"line_end":7987,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1051472,"byte_end":1051478,"line_start":8014,"line_end":8014,"column_start":12,"column_end":18},"name":"yn_ref","qualname":"<Float>::yn_ref","value":"fn (&self, n: i32) -> YnIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the second kind Bessel function of order <i>n</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1051451,"byte_end":1051460,"line_start":8013,"line_end":8013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1051981,"byte_end":1051984,"line_start":8032,"line_end":8032,"column_start":12,"column_end":15},"name":"agm","qualname":"<Float>::agm","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the arithmetic-geometric mean of `self` and `other`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1051960,"byte_end":1051969,"line_start":8031,"line_end":8031,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1052497,"byte_end":1052504,"line_start":8051,"line_end":8051,"column_start":12,"column_end":19},"name":"agm_mut","qualname":"<Float>::agm_mut","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the arithmetic-geometric mean of `self` and `other`,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1052476,"byte_end":1052485,"line_start":8050,"line_end":8050,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1053210,"byte_end":1053219,"line_start":8073,"line_end":8073,"column_start":12,"column_end":21},"name":"agm_round","qualname":"<Float>::agm_round","value":"fn (&mut self, other: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the arithmetic-geometric mean of `self` and `other`,\n applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1053189,"byte_end":1053198,"line_start":8072,"line_end":8072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1054187,"byte_end":1054194,"line_start":8100,"line_end":8100,"column_start":12,"column_end":19},"name":"agm_ref","qualname":"<Float>::agm_ref","value":"fn <'a> (&'a self, other: &'a Self) -> AgmIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the arithmetic-geometric mean.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1054166,"byte_end":1054175,"line_start":8099,"line_end":8099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1054747,"byte_end":1054752,"line_start":8121,"line_end":8121,"column_start":12,"column_end":17},"name":"hypot","qualname":"<Float>::hypot","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Euclidean norm of `self` and `other`, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1054726,"byte_end":1054735,"line_start":8120,"line_end":8120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1055258,"byte_end":1055267,"line_start":8140,"line_end":8140,"column_start":12,"column_end":21},"name":"hypot_mut","qualname":"<Float>::hypot_mut","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the Euclidean norm of `self` and `other`, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1055237,"byte_end":1055246,"line_start":8139,"line_end":8139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1055963,"byte_end":1055974,"line_start":8162,"line_end":8162,"column_start":12,"column_end":23},"name":"hypot_round","qualname":"<Float>::hypot_round","value":"fn (&mut self, other: &Self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the Euclidean norm of `self` and `other`, applying\n the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1055942,"byte_end":1055951,"line_start":8161,"line_end":8161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1056939,"byte_end":1056948,"line_start":8189,"line_end":8189,"column_start":12,"column_end":21},"name":"hypot_ref","qualname":"<Float>::hypot_ref","value":"fn <'a> (&'a self, other: &'a Self) -> HypotIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Euclidean norm.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1056918,"byte_end":1056927,"line_start":8188,"line_end":8188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1057454,"byte_end":1057456,"line_start":8209,"line_end":8209,"column_start":12,"column_end":14},"name":"ai","qualname":"<Float>::ai","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Airy function Ai on `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1057433,"byte_end":1057442,"line_start":8208,"line_end":8208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1057893,"byte_end":1057899,"line_start":8227,"line_end":8227,"column_start":12,"column_end":18},"name":"ai_mut","qualname":"<Float>::ai_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Airy function Ai on `self`, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1057872,"byte_end":1057881,"line_start":8226,"line_end":8226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1058534,"byte_end":1058542,"line_start":8248,"line_end":8248,"column_start":12,"column_end":20},"name":"ai_round","qualname":"<Float>::ai_round","value":"fn (&mut self, round: Round) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Computes the value of the Airy function Ai on `self`, applying\n the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1058513,"byte_end":1058522,"line_start":8247,"line_end":8247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1059438,"byte_end":1059444,"line_start":8274,"line_end":8274,"column_start":12,"column_end":18},"name":"ai_ref","qualname":"<Float>::ai_ref","value":"fn (&self) -> AiIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Airy function Ai on the value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1059417,"byte_end":1059426,"line_start":8273,"line_end":8273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1059895,"byte_end":1059899,"line_start":8292,"line_end":8292,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Float>::ceil","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds up to the next higher integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1059874,"byte_end":1059883,"line_start":8291,"line_end":8291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1060325,"byte_end":1060333,"line_start":8311,"line_end":8311,"column_start":12,"column_end":20},"name":"ceil_mut","qualname":"<Float>::ceil_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds up to the next higher integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1060304,"byte_end":1060313,"line_start":8310,"line_end":8310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1061372,"byte_end":1061380,"line_start":8340,"line_end":8340,"column_start":12,"column_end":20},"name":"ceil_ref","qualname":"<Float>::ceil_ref","value":"fn (&self) -> CeilIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds up to the next higher integer. The result may be\n rounded again when assigned to the target.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1061351,"byte_end":1061360,"line_start":8339,"line_end":8339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1061842,"byte_end":1061847,"line_start":8358,"line_end":8358,"column_start":12,"column_end":17},"name":"floor","qualname":"<Float>::floor","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds down to the next lower integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1061821,"byte_end":1061830,"line_start":8357,"line_end":8357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1062277,"byte_end":1062286,"line_start":8377,"line_end":8377,"column_start":12,"column_end":21},"name":"floor_mut","qualname":"<Float>::floor_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds down to the next lower integer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1062256,"byte_end":1062265,"line_start":8376,"line_end":8376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1063333,"byte_end":1063342,"line_start":8406,"line_end":8406,"column_start":12,"column_end":21},"name":"floor_ref","qualname":"<Float>::floor_ref","value":"fn (&self) -> FloorIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds down to the next lower integer. The result may be\n rounded again when assigned to the target.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1063312,"byte_end":1063321,"line_start":8405,"line_end":8405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1063846,"byte_end":1063851,"line_start":8425,"line_end":8425,"column_start":12,"column_end":17},"name":"round","qualname":"<Float>::round","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the nearest integer, rounding half-way cases\n away from zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1063825,"byte_end":1063834,"line_start":8424,"line_end":8424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1064321,"byte_end":1064330,"line_start":8445,"line_end":8445,"column_start":12,"column_end":21},"name":"round_mut","qualname":"<Float>::round_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the nearest integer, rounding half-way cases\n away from zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1064300,"byte_end":1064309,"line_start":8444,"line_end":8444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1066182,"byte_end":1066191,"line_start":8494,"line_end":8494,"column_start":12,"column_end":21},"name":"round_ref","qualname":"<Float>::round_ref","value":"fn (&self) -> RoundIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the nearest integer, rounding half-way cases\n away from zero. The result may be rounded again when\n assigned to the target.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1066161,"byte_end":1066170,"line_start":8493,"line_end":8493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1066694,"byte_end":1066704,"line_start":8513,"line_end":8513,"column_start":12,"column_end":22},"name":"round_even","qualname":"<Float>::round_even","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the nearest integer, rounding half-way cases to\n even.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1066673,"byte_end":1066682,"line_start":8512,"line_end":8512,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1067178,"byte_end":1067192,"line_start":8533,"line_end":8533,"column_start":12,"column_end":26},"name":"round_even_mut","qualname":"<Float>::round_even_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the nearest integer, rounding half-way cases to\n even.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1067157,"byte_end":1067166,"line_start":8532,"line_end":8532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1068282,"byte_end":1068296,"line_start":8563,"line_end":8563,"column_start":12,"column_end":26},"name":"round_even_ref","qualname":"<Float>::round_even_ref","value":"fn (&self) -> RoundEvenIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the nearest integer, rounding half-way cases to\n even. The result may be rounded again when assigned to the\n target.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1068261,"byte_end":1068270,"line_start":8562,"line_end":8562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1068770,"byte_end":1068775,"line_start":8581,"line_end":8581,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Float>::trunc","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the next integer towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1068749,"byte_end":1068758,"line_start":8580,"line_end":8580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1069207,"byte_end":1069216,"line_start":8600,"line_end":8600,"column_start":12,"column_end":21},"name":"trunc_mut","qualname":"<Float>::trunc_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the next integer towards zero.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1069186,"byte_end":1069195,"line_start":8599,"line_end":8599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1070265,"byte_end":1070274,"line_start":8629,"line_end":8629,"column_start":12,"column_end":21},"name":"trunc_ref","qualname":"<Float>::trunc_ref","value":"fn (&self) -> TruncIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Rounds to the next integer towards zero. The result may be\n rounded again when assigned to the target.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1070244,"byte_end":1070253,"line_start":8628,"line_end":8628,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1070743,"byte_end":1070748,"line_start":8647,"line_end":8647,"column_start":12,"column_end":17},"name":"fract","qualname":"<Float>::fract","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the fractional part of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1070722,"byte_end":1070731,"line_start":8646,"line_end":8646,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1071183,"byte_end":1071192,"line_start":8666,"line_end":8666,"column_start":12,"column_end":21},"name":"fract_mut","qualname":"<Float>::fract_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gets the fractional part of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1071162,"byte_end":1071171,"line_start":8665,"line_end":8665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1072169,"byte_end":1072178,"line_start":8694,"line_end":8694,"column_start":12,"column_end":21},"name":"fract_ref","qualname":"<Float>::fract_ref","value":"fn (&self) -> FractIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Gets the fractional part of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1072148,"byte_end":1072157,"line_start":8693,"line_end":8693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1073039,"byte_end":1073050,"line_start":8721,"line_end":8721,"column_start":12,"column_end":23},"name":"trunc_fract","qualname":"<Float>::trunc_fract","value":"fn (mut self, mut fract: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer and fractional parts of the number,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1073018,"byte_end":1073027,"line_start":8720,"line_end":8720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1074001,"byte_end":1074016,"line_start":8751,"line_end":8751,"column_start":12,"column_end":27},"name":"trunc_fract_mut","qualname":"<Float>::trunc_fract_mut","value":"fn (&mut self, fract: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer and fractional parts of the number,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1073980,"byte_end":1073989,"line_start":8750,"line_end":8750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1075627,"byte_end":1075644,"line_start":8792,"line_end":8792,"column_start":12,"column_end":29},"name":"trunc_fract_round","qualname":"<Float>::trunc_fract_round","value":"fn (&mut self, fract: &mut Self, round: Round) -> (Ordering, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer and fractional parts of the number,\n applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1075606,"byte_end":1075615,"line_start":8791,"line_end":8791,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1077489,"byte_end":1077504,"line_start":8837,"line_end":8837,"column_start":12,"column_end":27},"name":"trunc_fract_ref","qualname":"<Float>::trunc_fract_ref","value":"fn (&self) -> TruncFractIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer and fractional parts of the number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1077468,"byte_end":1077477,"line_start":8836,"line_end":8836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1079407,"byte_end":1079418,"line_start":8881,"line_end":8881,"column_start":12,"column_end":23},"name":"random_bits","qualname":"<Float>::random_bits","value":"fn (rng: &mut dyn MutRandState) -> RandomBitsIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number in the range 0 ≤ <i>x</i> < 1.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1077601,"byte_end":1077625,"line_start":8841,"line_end":8841,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1079386,"byte_end":1079395,"line_start":8880,"line_end":8880,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1081568,"byte_end":1081579,"line_start":8932,"line_end":8932,"column_start":12,"column_end":23},"name":"random_cont","qualname":"<Float>::random_cont","value":"fn (rng: &mut dyn MutRandState) -> RandomContIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number in the continuous range 0 ≤ <i>x</i> < 1.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1079521,"byte_end":1079545,"line_start":8885,"line_end":8885,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1081547,"byte_end":1081556,"line_start":8931,"line_end":8931,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1083017,"byte_end":1083030,"line_start":8966,"line_end":8966,"column_start":12,"column_end":25},"name":"random_normal","qualname":"<Float>::random_normal","value":"fn (rng: &mut dyn MutRandState) -> RandomNormalIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number according to a standard normal\n Gaussian distribution, rounding to the nearest.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1081682,"byte_end":1081706,"line_start":8936,"line_end":8936,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1082996,"byte_end":1083005,"line_start":8965,"line_end":8965,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1084476,"byte_end":1084486,"line_start":9000,"line_end":9000,"column_start":12,"column_end":22},"name":"random_exp","qualname":"<Float>::random_exp","value":"fn (rng: &mut dyn MutRandState) -> RandomExpIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number according to an exponential\n distribution with mean one, rounding to the nearest.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1083137,"byte_end":1083161,"line_start":8970,"line_end":8970,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1084455,"byte_end":1084464,"line_start":8999,"line_end":8999,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":25535},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1084613,"byte_end":1084626,"line_start":9006,"line_end":9006,"column_start":12,"column_end":25},"name":"SumIncomplete","qualname":"::float::big::SumIncomplete","value":"SumIncomplete {  }","parent":null,"children":[{"krate":0,"index":25538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25559},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1086584,"byte_end":1086597,"line_start":9075,"line_end":9075,"column_start":12,"column_end":25},"name":"DotIncomplete","qualname":"::float::big::DotIncomplete","value":"DotIncomplete {  }","parent":null,"children":[{"krate":0,"index":25562}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25571},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088273,"byte_end":1088292,"line_start":9141,"line_end":9141,"column_start":48,"column_end":67},"name":"RemainderIncomplete","qualname":"::float::big::RemainderIncomplete","value":"RemainderIncomplete {  }","parent":null,"children":[{"krate":0,"index":25573},{"krate":0,"index":25574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25582},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088352,"byte_end":1088366,"line_start":9142,"line_end":9142,"column_start":46,"column_end":60},"name":"UExpIncomplete","qualname":"::float::big::UExpIncomplete","value":"UExpIncomplete {  }","parent":null,"children":[{"krate":0,"index":25583},{"krate":0,"index":25584}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25591},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088435,"byte_end":1088449,"line_start":9143,"line_end":9143,"column_start":46,"column_end":60},"name":"IExpIncomplete","qualname":"::float::big::IExpIncomplete","value":"IExpIncomplete {  }","parent":null,"children":[{"krate":0,"index":25592},{"krate":0,"index":25593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25600},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088520,"byte_end":1088535,"line_start":9144,"line_end":9144,"column_start":48,"column_end":63},"name":"UPowUIncomplete","qualname":"::float::big::UPowUIncomplete","value":"UPowUIncomplete {  }","parent":null,"children":[{"krate":0,"index":25601},{"krate":0,"index":25602}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25609},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088614,"byte_end":1088629,"line_start":9145,"line_end":9145,"column_start":48,"column_end":63},"name":"IPowUIncomplete","qualname":"::float::big::IPowUIncomplete","value":"IPowUIncomplete {  }","parent":null,"children":[{"krate":0,"index":25610},{"krate":0,"index":25611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25618},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088702,"byte_end":1088718,"line_start":9146,"line_end":9146,"column_start":42,"column_end":58},"name":"SquareIncomplete","qualname":"::float::big::SquareIncomplete","value":"SquareIncomplete {  }","parent":null,"children":[{"krate":0,"index":25620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25628},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088766,"byte_end":1088780,"line_start":9147,"line_end":9147,"column_start":43,"column_end":57},"name":"SqrtIncomplete","qualname":"::float::big::SqrtIncomplete","value":"SqrtIncomplete {  }","parent":null,"children":[{"krate":0,"index":25630}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25638},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088831,"byte_end":1088846,"line_start":9148,"line_end":9148,"column_start":46,"column_end":61},"name":"SqrtUIncomplete","qualname":"::float::big::SqrtUIncomplete","value":"SqrtUIncomplete {  }","parent":null,"children":[{"krate":0,"index":25639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25646},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088906,"byte_end":1088925,"line_start":9149,"line_end":9149,"column_start":47,"column_end":66},"name":"RecipSqrtIncomplete","qualname":"::float::big::RecipSqrtIncomplete","value":"RecipSqrtIncomplete {  }","parent":null,"children":[{"krate":0,"index":25648}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25656},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1088973,"byte_end":1088987,"line_start":9150,"line_end":9150,"column_start":43,"column_end":57},"name":"CbrtIncomplete","qualname":"::float::big::CbrtIncomplete","value":"CbrtIncomplete {  }","parent":null,"children":[{"krate":0,"index":25658}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25666},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1089039,"byte_end":1089053,"line_start":9151,"line_end":9151,"column_start":47,"column_end":61},"name":"RootIncomplete","qualname":"::float::big::RootIncomplete","value":"RootIncomplete {  }","parent":null,"children":[{"krate":0,"index":25668},{"krate":0,"index":25669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25677},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1089108,"byte_end":1089121,"line_start":9152,"line_end":9152,"column_start":42,"column_end":55},"name":"AbsIncomplete","qualname":"::float::big::AbsIncomplete","value":"AbsIncomplete {  }","parent":null,"children":[{"krate":0,"index":25679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25687},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1089171,"byte_end":1089187,"line_start":9153,"line_end":9153,"column_start":45,"column_end":61},"name":"SignumIncomplete","qualname":"::float::big::SignumIncomplete","value":"SignumIncomplete {  }","parent":null,"children":[{"krate":0,"index":25689}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25697},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1089239,"byte_end":1089257,"line_start":9154,"line_end":9154,"column_start":47,"column_end":65},"name":"CopysignIncomplete","qualname":"::float::big::CopysignIncomplete","value":"CopysignIncomplete {  }","parent":null,"children":[{"krate":0,"index":25699},{"krate":0,"index":25700}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25704},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1089295,"byte_end":1089310,"line_start":9157,"line_end":9157,"column_start":12,"column_end":27},"name":"ClampIncomplete","qualname":"::float::big::ClampIncomplete","value":"ClampIncomplete {  }","parent":null,"children":[{"krate":0,"index":25712},{"krate":0,"index":25713},{"krate":0,"index":25714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25728},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091040,"byte_end":1091055,"line_start":9210,"line_end":9210,"column_start":44,"column_end":59},"name":"RecipIncomplete","qualname":"::float::big::RecipIncomplete","value":"RecipIncomplete {  }","parent":null,"children":[{"krate":0,"index":25730}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25738},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091102,"byte_end":1091115,"line_start":9211,"line_end":9211,"column_start":42,"column_end":55},"name":"MinIncomplete","qualname":"::float::big::MinIncomplete","value":"MinIncomplete {  }","parent":null,"children":[{"krate":0,"index":25740},{"krate":0,"index":25741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25749},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091169,"byte_end":1091182,"line_start":9212,"line_end":9212,"column_start":42,"column_end":55},"name":"MaxIncomplete","qualname":"::float::big::MaxIncomplete","value":"MaxIncomplete {  }","parent":null,"children":[{"krate":0,"index":25751},{"krate":0,"index":25752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25760},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091236,"byte_end":1091258,"line_start":9213,"line_end":9213,"column_start":42,"column_end":64},"name":"PositiveDiffIncomplete","qualname":"::float::big::PositiveDiffIncomplete","value":"PositiveDiffIncomplete {  }","parent":null,"children":[{"krate":0,"index":25762},{"krate":0,"index":25763}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25771},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091312,"byte_end":1091324,"line_start":9214,"line_end":9214,"column_start":42,"column_end":54},"name":"LnIncomplete","qualname":"::float::big::LnIncomplete","value":"LnIncomplete {  }","parent":null,"children":[{"krate":0,"index":25773}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25781},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091374,"byte_end":1091387,"line_start":9215,"line_end":9215,"column_start":45,"column_end":58},"name":"LnUIncomplete","qualname":"::float::big::LnUIncomplete","value":"LnUIncomplete {  }","parent":null,"children":[{"krate":0,"index":25782}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25789},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091443,"byte_end":1091457,"line_start":9216,"line_end":9216,"column_start":43,"column_end":57},"name":"Log2Incomplete","qualname":"::float::big::Log2Incomplete","value":"Log2Incomplete {  }","parent":null,"children":[{"krate":0,"index":25791}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25799},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091506,"byte_end":1091521,"line_start":9217,"line_end":9217,"column_start":44,"column_end":59},"name":"Log10Incomplete","qualname":"::float::big::Log10Incomplete","value":"Log10Incomplete {  }","parent":null,"children":[{"krate":0,"index":25801}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25809},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091568,"byte_end":1091581,"line_start":9218,"line_end":9218,"column_start":42,"column_end":55},"name":"ExpIncomplete","qualname":"::float::big::ExpIncomplete","value":"ExpIncomplete {  }","parent":null,"children":[{"krate":0,"index":25811}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25819},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091629,"byte_end":1091643,"line_start":9219,"line_end":9219,"column_start":43,"column_end":57},"name":"Exp2Incomplete","qualname":"::float::big::Exp2Incomplete","value":"Exp2Incomplete {  }","parent":null,"children":[{"krate":0,"index":25821}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25829},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091692,"byte_end":1091707,"line_start":9220,"line_end":9220,"column_start":44,"column_end":59},"name":"Exp10Incomplete","qualname":"::float::big::Exp10Incomplete","value":"Exp10Incomplete {  }","parent":null,"children":[{"krate":0,"index":25831}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25839},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091754,"byte_end":1091767,"line_start":9221,"line_end":9221,"column_start":42,"column_end":55},"name":"SinIncomplete","qualname":"::float::big::SinIncomplete","value":"SinIncomplete {  }","parent":null,"children":[{"krate":0,"index":25841}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25849},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091814,"byte_end":1091827,"line_start":9222,"line_end":9222,"column_start":42,"column_end":55},"name":"CosIncomplete","qualname":"::float::big::CosIncomplete","value":"CosIncomplete {  }","parent":null,"children":[{"krate":0,"index":25851}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25859},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091874,"byte_end":1091887,"line_start":9223,"line_end":9223,"column_start":42,"column_end":55},"name":"TanIncomplete","qualname":"::float::big::TanIncomplete","value":"TanIncomplete {  }","parent":null,"children":[{"krate":0,"index":25861}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25877},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1091940,"byte_end":1091956,"line_start":9224,"line_end":9224,"column_start":48,"column_end":64},"name":"SinCosIncomplete","qualname":"::float::big::SinCosIncomplete","value":"SinCosIncomplete {  }","parent":null,"children":[{"krate":0,"index":25879}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25887},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092003,"byte_end":1092016,"line_start":9225,"line_end":9225,"column_start":42,"column_end":55},"name":"SecIncomplete","qualname":"::float::big::SecIncomplete","value":"SecIncomplete {  }","parent":null,"children":[{"krate":0,"index":25889}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25897},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092063,"byte_end":1092076,"line_start":9226,"line_end":9226,"column_start":42,"column_end":55},"name":"CscIncomplete","qualname":"::float::big::CscIncomplete","value":"CscIncomplete {  }","parent":null,"children":[{"krate":0,"index":25899}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25907},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092123,"byte_end":1092136,"line_start":9227,"line_end":9227,"column_start":42,"column_end":55},"name":"CotIncomplete","qualname":"::float::big::CotIncomplete","value":"CotIncomplete {  }","parent":null,"children":[{"krate":0,"index":25909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25917},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092184,"byte_end":1092198,"line_start":9228,"line_end":9228,"column_start":43,"column_end":57},"name":"AcosIncomplete","qualname":"::float::big::AcosIncomplete","value":"AcosIncomplete {  }","parent":null,"children":[{"krate":0,"index":25919}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25927},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092246,"byte_end":1092260,"line_start":9229,"line_end":9229,"column_start":43,"column_end":57},"name":"AsinIncomplete","qualname":"::float::big::AsinIncomplete","value":"AsinIncomplete {  }","parent":null,"children":[{"krate":0,"index":25929}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25937},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092308,"byte_end":1092322,"line_start":9230,"line_end":9230,"column_start":43,"column_end":57},"name":"AtanIncomplete","qualname":"::float::big::AtanIncomplete","value":"AtanIncomplete {  }","parent":null,"children":[{"krate":0,"index":25939}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25947},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092371,"byte_end":1092386,"line_start":9231,"line_end":9231,"column_start":44,"column_end":59},"name":"Atan2Incomplete","qualname":"::float::big::Atan2Incomplete","value":"Atan2Incomplete {  }","parent":null,"children":[{"krate":0,"index":25949},{"krate":0,"index":25950}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25958},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092437,"byte_end":1092451,"line_start":9232,"line_end":9232,"column_start":43,"column_end":57},"name":"CoshIncomplete","qualname":"::float::big::CoshIncomplete","value":"CoshIncomplete {  }","parent":null,"children":[{"krate":0,"index":25960}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25968},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092499,"byte_end":1092513,"line_start":9233,"line_end":9233,"column_start":43,"column_end":57},"name":"SinhIncomplete","qualname":"::float::big::SinhIncomplete","value":"SinhIncomplete {  }","parent":null,"children":[{"krate":0,"index":25970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25978},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092561,"byte_end":1092575,"line_start":9234,"line_end":9234,"column_start":43,"column_end":57},"name":"TanhIncomplete","qualname":"::float::big::TanhIncomplete","value":"TanhIncomplete {  }","parent":null,"children":[{"krate":0,"index":25980}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25996},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092630,"byte_end":1092648,"line_start":9235,"line_end":9235,"column_start":50,"column_end":68},"name":"SinhCoshIncomplete","qualname":"::float::big::SinhCoshIncomplete","value":"SinhCoshIncomplete {  }","parent":null,"children":[{"krate":0,"index":25998}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26006},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092696,"byte_end":1092710,"line_start":9236,"line_end":9236,"column_start":43,"column_end":57},"name":"SechIncomplete","qualname":"::float::big::SechIncomplete","value":"SechIncomplete {  }","parent":null,"children":[{"krate":0,"index":26008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26016},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092758,"byte_end":1092772,"line_start":9237,"line_end":9237,"column_start":43,"column_end":57},"name":"CschIncomplete","qualname":"::float::big::CschIncomplete","value":"CschIncomplete {  }","parent":null,"children":[{"krate":0,"index":26018}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26026},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092820,"byte_end":1092834,"line_start":9238,"line_end":9238,"column_start":43,"column_end":57},"name":"CothIncomplete","qualname":"::float::big::CothIncomplete","value":"CothIncomplete {  }","parent":null,"children":[{"krate":0,"index":26028}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26036},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092883,"byte_end":1092898,"line_start":9239,"line_end":9239,"column_start":44,"column_end":59},"name":"AcoshIncomplete","qualname":"::float::big::AcoshIncomplete","value":"AcoshIncomplete {  }","parent":null,"children":[{"krate":0,"index":26038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26046},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1092947,"byte_end":1092962,"line_start":9240,"line_end":9240,"column_start":44,"column_end":59},"name":"AsinhIncomplete","qualname":"::float::big::AsinhIncomplete","value":"AsinhIncomplete {  }","parent":null,"children":[{"krate":0,"index":26048}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26056},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093011,"byte_end":1093026,"line_start":9241,"line_end":9241,"column_start":44,"column_end":59},"name":"AtanhIncomplete","qualname":"::float::big::AtanhIncomplete","value":"AtanhIncomplete {  }","parent":null,"children":[{"krate":0,"index":26058}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26066},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093076,"byte_end":1093095,"line_start":9242,"line_end":9242,"column_start":45,"column_end":64},"name":"FactorialIncomplete","qualname":"::float::big::FactorialIncomplete","value":"FactorialIncomplete {  }","parent":null,"children":[{"krate":0,"index":26067}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26074},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093152,"byte_end":1093166,"line_start":9243,"line_end":9243,"column_start":44,"column_end":58},"name":"Ln1pIncomplete","qualname":"::float::big::Ln1pIncomplete","value":"Ln1pIncomplete {  }","parent":null,"children":[{"krate":0,"index":26076}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26084},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093215,"byte_end":1093230,"line_start":9244,"line_end":9244,"column_start":44,"column_end":59},"name":"ExpM1Incomplete","qualname":"::float::big::ExpM1Incomplete","value":"ExpM1Incomplete {  }","parent":null,"children":[{"krate":0,"index":26086}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26094},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093278,"byte_end":1093292,"line_start":9245,"line_end":9245,"column_start":43,"column_end":57},"name":"EintIncomplete","qualname":"::float::big::EintIncomplete","value":"EintIncomplete {  }","parent":null,"children":[{"krate":0,"index":26096}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26104},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093339,"byte_end":1093352,"line_start":9246,"line_end":9246,"column_start":42,"column_end":55},"name":"Li2Incomplete","qualname":"::float::big::Li2Incomplete","value":"Li2Incomplete {  }","parent":null,"children":[{"krate":0,"index":26106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26114},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093401,"byte_end":1093416,"line_start":9247,"line_end":9247,"column_start":44,"column_end":59},"name":"GammaIncomplete","qualname":"::float::big::GammaIncomplete","value":"GammaIncomplete {  }","parent":null,"children":[{"krate":0,"index":26116}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26124},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093469,"byte_end":1093487,"line_start":9248,"line_end":9248,"column_start":48,"column_end":66},"name":"GammaIncIncomplete","qualname":"::float::big::GammaIncIncomplete","value":"GammaIncIncomplete {  }","parent":null,"children":[{"krate":0,"index":26126},{"krate":0,"index":26127}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26135},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093541,"byte_end":1093558,"line_start":9249,"line_end":9249,"column_start":46,"column_end":63},"name":"LnGammaIncomplete","qualname":"::float::big::LnGammaIncomplete","value":"LnGammaIncomplete {  }","parent":null,"children":[{"krate":0,"index":26137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1093576,"byte_end":1093596,"line_start":9251,"line_end":9251,"column_start":12,"column_end":32},"name":"LnAbsGammaIncomplete","qualname":"::float::big::LnAbsGammaIncomplete","value":"LnAbsGammaIncomplete {  }","parent":null,"children":[{"krate":0,"index":2612}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26145},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095061,"byte_end":1095078,"line_start":9302,"line_end":9302,"column_start":46,"column_end":63},"name":"DigammaIncomplete","qualname":"::float::big::DigammaIncomplete","value":"DigammaIncomplete {  }","parent":null,"children":[{"krate":0,"index":26147}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26155},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095126,"byte_end":1095140,"line_start":9303,"line_end":9303,"column_start":43,"column_end":57},"name":"ZetaIncomplete","qualname":"::float::big::ZetaIncomplete","value":"ZetaIncomplete {  }","parent":null,"children":[{"krate":0,"index":26157}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26165},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095191,"byte_end":1095206,"line_start":9304,"line_end":9304,"column_start":46,"column_end":61},"name":"ZetaUIncomplete","qualname":"::float::big::ZetaUIncomplete","value":"ZetaUIncomplete {  }","parent":null,"children":[{"krate":0,"index":26166}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26173},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095261,"byte_end":1095274,"line_start":9305,"line_end":9305,"column_start":42,"column_end":55},"name":"ErfIncomplete","qualname":"::float::big::ErfIncomplete","value":"ErfIncomplete {  }","parent":null,"children":[{"krate":0,"index":26175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26183},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095322,"byte_end":1095336,"line_start":9306,"line_end":9306,"column_start":43,"column_end":57},"name":"ErfcIncomplete","qualname":"::float::big::ErfcIncomplete","value":"ErfcIncomplete {  }","parent":null,"children":[{"krate":0,"index":26185}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26193},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095382,"byte_end":1095394,"line_start":9307,"line_end":9307,"column_start":41,"column_end":53},"name":"J0Incomplete","qualname":"::float::big::J0Incomplete","value":"J0Incomplete {  }","parent":null,"children":[{"krate":0,"index":26195}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26203},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095440,"byte_end":1095452,"line_start":9308,"line_end":9308,"column_start":41,"column_end":53},"name":"J1Incomplete","qualname":"::float::big::J1Incomplete","value":"J1Incomplete {  }","parent":null,"children":[{"krate":0,"index":26205}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26213},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095498,"byte_end":1095510,"line_start":9309,"line_end":9309,"column_start":41,"column_end":53},"name":"JnIncomplete","qualname":"::float::big::JnIncomplete","value":"JnIncomplete {  }","parent":null,"children":[{"krate":0,"index":26215},{"krate":0,"index":26216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26224},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095564,"byte_end":1095576,"line_start":9310,"line_end":9310,"column_start":41,"column_end":53},"name":"Y0Incomplete","qualname":"::float::big::Y0Incomplete","value":"Y0Incomplete {  }","parent":null,"children":[{"krate":0,"index":26226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26234},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095622,"byte_end":1095634,"line_start":9311,"line_end":9311,"column_start":41,"column_end":53},"name":"Y1Incomplete","qualname":"::float::big::Y1Incomplete","value":"Y1Incomplete {  }","parent":null,"children":[{"krate":0,"index":26236}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26244},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095680,"byte_end":1095692,"line_start":9312,"line_end":9312,"column_start":41,"column_end":53},"name":"YnIncomplete","qualname":"::float::big::YnIncomplete","value":"YnIncomplete {  }","parent":null,"children":[{"krate":0,"index":26246},{"krate":0,"index":26247}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26255},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095747,"byte_end":1095760,"line_start":9313,"line_end":9313,"column_start":42,"column_end":55},"name":"AgmIncomplete","qualname":"::float::big::AgmIncomplete","value":"AgmIncomplete {  }","parent":null,"children":[{"krate":0,"index":26257},{"krate":0,"index":26258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26266},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095816,"byte_end":1095831,"line_start":9314,"line_end":9314,"column_start":44,"column_end":59},"name":"HypotIncomplete","qualname":"::float::big::HypotIncomplete","value":"HypotIncomplete {  }","parent":null,"children":[{"krate":0,"index":26268},{"krate":0,"index":26269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26277},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095884,"byte_end":1095896,"line_start":9315,"line_end":9315,"column_start":41,"column_end":53},"name":"AiIncomplete","qualname":"::float::big::AiIncomplete","value":"AiIncomplete {  }","parent":null,"children":[{"krate":0,"index":26279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26287},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1095949,"byte_end":1095963,"line_start":9316,"line_end":9316,"column_start":48,"column_end":62},"name":"CeilIncomplete","qualname":"::float::big::CeilIncomplete","value":"CeilIncomplete {  }","parent":null,"children":[{"krate":0,"index":26289}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26297},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096017,"byte_end":1096032,"line_start":9317,"line_end":9317,"column_start":49,"column_end":64},"name":"FloorIncomplete","qualname":"::float::big::FloorIncomplete","value":"FloorIncomplete {  }","parent":null,"children":[{"krate":0,"index":26299}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26307},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096086,"byte_end":1096101,"line_start":9318,"line_end":9318,"column_start":49,"column_end":64},"name":"RoundIncomplete","qualname":"::float::big::RoundIncomplete","value":"RoundIncomplete {  }","parent":null,"children":[{"krate":0,"index":26309}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26317},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096159,"byte_end":1096178,"line_start":9319,"line_end":9319,"column_start":53,"column_end":72},"name":"RoundEvenIncomplete","qualname":"::float::big::RoundEvenIncomplete","value":"RoundEvenIncomplete {  }","parent":null,"children":[{"krate":0,"index":26319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26327},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096232,"byte_end":1096247,"line_start":9320,"line_end":9320,"column_start":49,"column_end":64},"name":"TruncIncomplete","qualname":"::float::big::TruncIncomplete","value":"TruncIncomplete {  }","parent":null,"children":[{"krate":0,"index":26329}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26337},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096295,"byte_end":1096310,"line_start":9321,"line_end":9321,"column_start":43,"column_end":58},"name":"FractIncomplete","qualname":"::float::big::FractIncomplete","value":"FractIncomplete {  }","parent":null,"children":[{"krate":0,"index":26339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26355},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096360,"byte_end":1096380,"line_start":9322,"line_end":9322,"column_start":45,"column_end":65},"name":"TruncFractIncomplete","qualname":"::float::big::TruncFractIncomplete","value":"TruncFractIncomplete {  }","parent":null,"children":[{"krate":0,"index":26357}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096423,"byte_end":1096443,"line_start":9325,"line_end":9325,"column_start":12,"column_end":32},"name":"RandomBitsIncomplete","qualname":"::float::big::RandomBitsIncomplete","value":"RandomBitsIncomplete {  }","parent":null,"children":[{"krate":0,"index":2627}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096387,"byte_end":1096411,"line_start":9324,"line_end":9324,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2630},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096830,"byte_end":1096850,"line_start":9341,"line_end":9341,"column_start":12,"column_end":32},"name":"RandomContIncomplete","qualname":"::float::big::RandomContIncomplete","value":"RandomContIncomplete {  }","parent":null,"children":[{"krate":0,"index":2632}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096794,"byte_end":1096818,"line_start":9340,"line_end":9340,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097311,"byte_end":1097333,"line_start":9358,"line_end":9358,"column_start":12,"column_end":34},"name":"RandomNormalIncomplete","qualname":"::float::big::RandomNormalIncomplete","value":"RandomNormalIncomplete {  }","parent":null,"children":[{"krate":0,"index":2639}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097275,"byte_end":1097299,"line_start":9357,"line_end":9357,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2644},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097798,"byte_end":1097817,"line_start":9375,"line_end":9375,"column_start":12,"column_end":31},"name":"RandomExpIncomplete","qualname":"::float::big::RandomExpIncomplete","value":"RandomExpIncomplete {  }","parent":null,"children":[{"krate":0,"index":2646}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097762,"byte_end":1097786,"line_start":9374,"line_end":9374,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":26361},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1098289,"byte_end":1098300,"line_start":9393,"line_end":9393,"column_start":12,"column_end":23},"name":"BorrowFloat","qualname":"::float::big::BorrowFloat","value":"BorrowFloat {  }","parent":null,"children":[{"krate":0,"index":26363},{"krate":0,"index":26364}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1098257,"byte_end":1098277,"line_start":9392,"line_end":9392,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":26398},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1103766,"byte_end":1103773,"line_start":9585,"line_end":9585,"column_start":5,"column_end":12},"name":"CString","qualname":"::float::big::ParseIncomplete::CString","value":"ParseIncomplete::CString { c_string, radix }","parent":{"krate":0,"index":26397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26401},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1103813,"byte_end":1103820,"line_start":9586,"line_end":9586,"column_start":5,"column_end":12},"name":"Special","qualname":"::float::big::ParseIncomplete::Special","value":"ParseIncomplete::Special(Special)","parent":{"krate":0,"index":26397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26404},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1103835,"byte_end":1103841,"line_start":9587,"line_end":9587,"column_start":5,"column_end":11},"name":"NegNan","qualname":"::float::big::ParseIncomplete::NegNan","value":"ParseIncomplete::NegNan","parent":{"krate":0,"index":26397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":26397},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1103744,"byte_end":1103759,"line_start":9584,"line_end":9584,"column_start":10,"column_end":25},"name":"ParseIncomplete","qualname":"::float::big::ParseIncomplete","value":"ParseIncomplete::{CString, Special, NegNan}","parent":null,"children":[{"krate":0,"index":26398},{"krate":0,"index":26401},{"krate":0,"index":26404}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26424},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1110912,"byte_end":1110927,"line_start":9819,"line_end":9819,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::float::big::ParseFloatError","value":"ParseFloatError {  }","parent":null,"children":[{"krate":0,"index":26425}],"decl_id":null,"docs":"An error which can be returned when parsing a [`Float`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26607},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1126022,"byte_end":1126030,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"OrdFloat","qualname":"::float::ord::OrdFloat","value":"OrdFloat {  }","parent":null,"children":[{"krate":0,"index":26608}],"decl_id":null,"docs":"A float that supports total ordering and hashing.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1125990,"byte_end":1126010,"line_start":65,"line_end":65,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1126494,"byte_end":1126502,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"as_float","qualname":"<OrdFloat>::as_float","value":"fn (&self) -> &Float","parent":null,"children":[],"decl_id":null,"docs":" Extracts the underlying [`Float`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1126473,"byte_end":1126482,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1126943,"byte_end":1126955,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"as_float_mut","qualname":"<OrdFloat>::as_float_mut","value":"fn (&mut self) -> &mut Float","parent":null,"children":[],"decl_id":null,"docs":" Extracts the underlying [`Float`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1126922,"byte_end":1126931,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":26617},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1134636,"byte_end":1134646,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"SmallFloat","qualname":"::float::small::SmallFloat","value":"SmallFloat {  }","parent":null,"children":[{"krate":0,"index":26618},{"krate":0,"index":26619}],"decl_id":null,"docs":"A small float that does not require any memory allocation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1134709,"byte_end":1134713,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"Mpfr","qualname":"::float::small::Mpfr","value":"Mpfr { prec, sign, exp, d }","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1134687,"byte_end":1134697,"line_start":100,"line_end":100,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1134724,"byte_end":1134728,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"name":"prec","qualname":"::float::small::Mpfr::prec","value":"i64","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1134746,"byte_end":1134750,"line_start":103,"line_end":103,"column_start":9,"column_end":13},"name":"sign","qualname":"::float::small::Mpfr::sign","value":"i32","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1134767,"byte_end":1134770,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"name":"exp","qualname":"::float::small::Mpfr::exp","value":"i64","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1134787,"byte_end":1134788,"line_start":105,"line_end":105,"column_start":9,"column_end":10},"name":"d","qualname":"::float::small::Mpfr::d","value":"std::cell::UnsafeCell<*mut u64>","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1136077,"byte_end":1136101,"line_start":153,"line_end":153,"column_start":19,"column_end":43},"name":"as_nonreallocating_float","qualname":"<SmallFloat>::as_nonreallocating_float","value":"fn (&mut self) -> &mut Float","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a [`Float`] for simple\n operations that do not need to change the precision of the\n number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1136049,"byte_end":1136058,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1138322,"byte_end":1138329,"line_start":207,"line_end":207,"column_start":11,"column_end":18},"name":"ToSmall","qualname":"::float::small::ToSmall","value":"ToSmall: SealedToSmall","parent":null,"children":[],"decl_id":null,"docs":" Types implementing this trait can be converted to [`SmallFloat`].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1138359,"byte_end":1138372,"line_start":209,"line_end":209,"column_start":11,"column_end":24},"name":"SealedToSmall","qualname":"::float::small::SealedToSmall","value":"SealedToSmall: Copy","parent":null,"children":[{"krate":0,"index":2792}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1138395,"byte_end":1138399,"line_start":210,"line_end":210,"column_start":15,"column_end":19},"name":"copy","qualname":"::float::small::SealedToSmall::copy","value":"fn (self, inner: *mut Mpfr, limbs: &mut Limbs) -> ()","parent":{"krate":0,"index":2791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744481,"byte_end":744488,"line_start":54,"line_end":54,"column_start":8,"column_end":15},"name":"exp_min","qualname":"::float::exp_min","value":"fn () -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the minimum value for the exponent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744464,"byte_end":744473,"line_start":53,"line_end":53,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2932},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744801,"byte_end":744808,"line_start":74,"line_end":74,"column_start":8,"column_end":15},"name":"exp_max","qualname":"::float::exp_max","value":"fn () -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the maximum value for the exponent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":744784,"byte_end":744793,"line_start":73,"line_end":73,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":745130,"byte_end":745138,"line_start":94,"line_end":94,"column_start":14,"column_end":22},"name":"prec_min","qualname":"::float::prec_min","value":"fn () -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns the minimum value for the precision.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":745107,"byte_end":745116,"line_start":93,"line_end":93,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":745351,"byte_end":745359,"line_start":109,"line_end":109,"column_start":14,"column_end":22},"name":"prec_max","qualname":"::float::prec_max","value":"fn () -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns the maximum value for the precision.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":745328,"byte_end":745337,"line_start":108,"line_end":108,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":26864},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746674,"byte_end":746681,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::float::Round::Nearest","value":"Round::Nearest","parent":{"krate":0,"index":26863},"children":[],"decl_id":null,"docs":" Round towards the nearest.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26866},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746715,"byte_end":746719,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"Zero","qualname":"::float::Round::Zero","value":"Round::Zero","parent":{"krate":0,"index":26863},"children":[],"decl_id":null,"docs":" Round towards zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26868},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746762,"byte_end":746764,"line_start":161,"line_end":161,"column_start":5,"column_end":7},"name":"Up","qualname":"::float::Round::Up","value":"Round::Up","parent":{"krate":0,"index":26863},"children":[],"decl_id":null,"docs":" Round towards plus infinity.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26870},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746808,"byte_end":746812,"line_start":163,"line_end":163,"column_start":5,"column_end":9},"name":"Down","qualname":"::float::Round::Down","value":"Round::Down","parent":{"krate":0,"index":26863},"children":[],"decl_id":null,"docs":" Round towards minus infinity.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26872},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746837,"byte_end":746852,"line_start":165,"line_end":165,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::float::Round::__Nonexhaustive","value":"Round::__Nonexhaustive","parent":{"krate":0,"index":26863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":26863},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746627,"byte_end":746632,"line_start":155,"line_end":155,"column_start":10,"column_end":15},"name":"Round","qualname":"::float::Round","value":"Round::{Nearest, Zero, Up, Down, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":26864},{"krate":0,"index":26866},{"krate":0,"index":26868},{"krate":0,"index":26870},{"krate":0,"index":26872}],"decl_id":null,"docs":"The rounding methods for floating-point values.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26893},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":747631,"byte_end":747635,"line_start":197,"line_end":197,"column_start":5,"column_end":9},"name":"Log2","qualname":"::float::Constant::Log2","value":"Constant::Log2","parent":{"krate":0,"index":26892},"children":[],"decl_id":null,"docs":" The logarithm of two, 0.693...\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26895},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":747675,"byte_end":747677,"line_start":199,"line_end":199,"column_start":5,"column_end":7},"name":"Pi","qualname":"::float::Constant::Pi","value":"Constant::Pi","parent":{"krate":0,"index":26892},"children":[],"decl_id":null,"docs":" The value of pi, 3.141...\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26897},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":747720,"byte_end":747725,"line_start":201,"line_end":201,"column_start":5,"column_end":10},"name":"Euler","qualname":"::float::Constant::Euler","value":"Constant::Euler","parent":{"krate":0,"index":26892},"children":[],"decl_id":null,"docs":" Euler’s constant, 0.577...\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26899},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":747770,"byte_end":747777,"line_start":203,"line_end":203,"column_start":5,"column_end":12},"name":"Catalan","qualname":"::float::Constant::Catalan","value":"Constant::Catalan","parent":{"krate":0,"index":26892},"children":[],"decl_id":null,"docs":" Catalan’s constant, 0.915...\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26901},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":747802,"byte_end":747817,"line_start":205,"line_end":205,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::float::Constant::__Nonexhaustive","value":"Constant::__Nonexhaustive","parent":{"krate":0,"index":26892},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":26892},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":747577,"byte_end":747585,"line_start":195,"line_end":195,"column_start":10,"column_end":18},"name":"Constant","qualname":"::float::Constant","value":"Constant::{Log2, Pi, Euler, Catalan, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":26893},{"krate":0,"index":26895},{"krate":0,"index":26897},{"krate":0,"index":26899},{"krate":0,"index":26901}],"decl_id":null,"docs":"The available floating-point constants.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26922},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":748589,"byte_end":748593,"line_start":236,"line_end":236,"column_start":5,"column_end":9},"name":"Zero","qualname":"::float::Special::Zero","value":"Special::Zero","parent":{"krate":0,"index":26921},"children":[],"decl_id":null,"docs":" Positive zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26924},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":748622,"byte_end":748629,"line_start":238,"line_end":238,"column_start":5,"column_end":12},"name":"NegZero","qualname":"::float::Special::NegZero","value":"Special::NegZero","parent":{"krate":0,"index":26921},"children":[],"decl_id":null,"docs":" Negative zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26926},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":748662,"byte_end":748670,"line_start":240,"line_end":240,"column_start":5,"column_end":13},"name":"Infinity","qualname":"::float::Special::Infinity","value":"Special::Infinity","parent":{"krate":0,"index":26921},"children":[],"decl_id":null,"docs":" Positive infinity.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26928},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":748703,"byte_end":748714,"line_start":242,"line_end":242,"column_start":5,"column_end":16},"name":"NegInfinity","qualname":"::float::Special::NegInfinity","value":"Special::NegInfinity","parent":{"krate":0,"index":26921},"children":[],"decl_id":null,"docs":" Negative infinity.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26930},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":748742,"byte_end":748745,"line_start":244,"line_end":244,"column_start":5,"column_end":8},"name":"Nan","qualname":"::float::Special::Nan","value":"Special::Nan","parent":{"krate":0,"index":26921},"children":[],"decl_id":null,"docs":" Not a number.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26932},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":748770,"byte_end":748785,"line_start":246,"line_end":246,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::float::Special::__Nonexhaustive","value":"Special::__Nonexhaustive","parent":{"krate":0,"index":26921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":26921},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":748552,"byte_end":748559,"line_start":234,"line_end":234,"column_start":10,"column_end":17},"name":"Special","qualname":"::float::Special","value":"Special::{Zero, NegZero, Infinity, NegInfinity, Nan, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":26922},{"krate":0,"index":26924},{"krate":0,"index":26926},{"krate":0,"index":26928},{"krate":0,"index":26930},{"krate":0,"index":26932}],"decl_id":null,"docs":"Special floating-point values.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26953},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":749347,"byte_end":749352,"line_start":273,"line_end":273,"column_start":5,"column_end":10},"name":"Local","qualname":"::float::FreeCache::Local","value":"FreeCache::Local","parent":{"krate":0,"index":26952},"children":[],"decl_id":null,"docs":" Free caches local to the current thread.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26955},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":749401,"byte_end":749407,"line_start":275,"line_end":275,"column_start":5,"column_end":11},"name":"Global","qualname":"::float::FreeCache::Global","value":"FreeCache::Global","parent":{"krate":0,"index":26952},"children":[],"decl_id":null,"docs":" Free caches shared by all threads.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26957},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":749456,"byte_end":749459,"line_start":277,"line_end":277,"column_start":5,"column_end":8},"name":"All","qualname":"::float::FreeCache::All","value":"FreeCache::All","parent":{"krate":0,"index":26952},"children":[],"decl_id":null,"docs":" Free both local and global caches.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":26959},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":749484,"byte_end":749499,"line_start":279,"line_end":279,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::float::FreeCache::__Nonexhaustive","value":"FreeCache::__Nonexhaustive","parent":{"krate":0,"index":26952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":26952},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":749282,"byte_end":749291,"line_start":271,"line_end":271,"column_start":10,"column_end":19},"name":"FreeCache","qualname":"::float::FreeCache","value":"FreeCache::{Local, Global, All, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":26953},{"krate":0,"index":26955},{"krate":0,"index":26957},{"krate":0,"index":26959}],"decl_id":null,"docs":"Specifies which cache to free.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":749165,"byte_end":749204,"line_start":269,"line_end":269,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":750183,"byte_end":750193,"line_start":310,"line_end":310,"column_start":8,"column_end":18},"name":"free_cache","qualname":"::float::free_cache","value":"fn (which: FreeCache) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Frees various caches and memory pools that are used internally.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":750126,"byte_end":750165,"line_start":308,"line_end":308,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":750166,"byte_end":750175,"line_start":309,"line_end":309,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complex","qualname":"::complex","value":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/mod.rs","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":3053},{"krate":0,"index":3367},{"krate":0,"index":3378},{"krate":0,"index":3402},{"krate":0,"index":3458},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561}],"decl_id":null,"docs":"Multi-precision complex numbers with correct rounding.","sig":null,"attributes":[{"value":"cfg(feature = \"complex\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17273,"byte_end":17300,"line_start":466,"line_end":466,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":26979},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1169932,"byte_end":1169945,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"NegIncomplete","qualname":"::complex::arith::NegIncomplete","value":"NegIncomplete {  }","parent":null,"children":[{"krate":0,"index":26981}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27026},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1173564,"byte_end":1173577,"line_start":184,"line_end":184,"column_start":5,"column_end":18},"name":"AddIncomplete","qualname":"::complex::arith::AddIncomplete","value":"AddIncomplete {  }","parent":null,"children":[{"krate":0,"index":27028},{"krate":0,"index":27029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27074},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1173773,"byte_end":1173786,"line_start":193,"line_end":193,"column_start":5,"column_end":18},"name":"SubIncomplete","qualname":"::complex::arith::SubIncomplete","value":"SubIncomplete {  }","parent":null,"children":[{"krate":0,"index":27076},{"krate":0,"index":27077}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27122},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1173982,"byte_end":1173995,"line_start":202,"line_end":202,"column_start":5,"column_end":18},"name":"MulIncomplete","qualname":"::complex::arith::MulIncomplete","value":"MulIncomplete {  }","parent":null,"children":[{"krate":0,"index":27124},{"krate":0,"index":27125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27170},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174191,"byte_end":1174204,"line_start":211,"line_end":211,"column_start":5,"column_end":18},"name":"DivIncomplete","qualname":"::complex::arith::DivIncomplete","value":"DivIncomplete {  }","parent":null,"children":[{"krate":0,"index":27172},{"krate":0,"index":27173}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27218},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174400,"byte_end":1174413,"line_start":220,"line_end":220,"column_start":5,"column_end":18},"name":"PowIncomplete","qualname":"::complex::arith::PowIncomplete","value":"PowIncomplete {  }","parent":null,"children":[{"krate":0,"index":27220},{"krate":0,"index":27221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27289},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174619,"byte_end":1174637,"line_start":231,"line_end":231,"column_start":5,"column_end":23},"name":"AddFloatIncomplete","qualname":"::complex::arith::AddFloatIncomplete","value":"AddFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27291},{"krate":0,"index":27292}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27296},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174639,"byte_end":1174662,"line_start":231,"line_end":231,"column_start":25,"column_end":48},"name":"AddOwnedFloatIncomplete","qualname":"::complex::arith::AddOwnedFloatIncomplete","value":"AddOwnedFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27298},{"krate":0,"index":27299}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27379},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174883,"byte_end":1174901,"line_start":241,"line_end":241,"column_start":5,"column_end":23},"name":"SubFloatIncomplete","qualname":"::complex::arith::SubFloatIncomplete","value":"SubFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27381},{"krate":0,"index":27382}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27386},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174903,"byte_end":1174926,"line_start":241,"line_end":241,"column_start":25,"column_end":48},"name":"SubOwnedFloatIncomplete","qualname":"::complex::arith::SubOwnedFloatIncomplete","value":"SubOwnedFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27388},{"krate":0,"index":27389}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27393},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174932,"byte_end":1174954,"line_start":242,"line_end":242,"column_start":5,"column_end":27},"name":"SubFromFloatIncomplete","qualname":"::complex::arith::SubFromFloatIncomplete","value":"SubFromFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27395},{"krate":0,"index":27396}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27400},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1174956,"byte_end":1174983,"line_start":242,"line_end":242,"column_start":29,"column_end":56},"name":"SubFromOwnedFloatIncomplete","qualname":"::complex::arith::SubFromOwnedFloatIncomplete","value":"SubFromOwnedFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27402},{"krate":0,"index":27403}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27471},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175188,"byte_end":1175206,"line_start":252,"line_end":252,"column_start":5,"column_end":23},"name":"MulFloatIncomplete","qualname":"::complex::arith::MulFloatIncomplete","value":"MulFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27473},{"krate":0,"index":27474}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27478},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175208,"byte_end":1175231,"line_start":252,"line_end":252,"column_start":25,"column_end":48},"name":"MulOwnedFloatIncomplete","qualname":"::complex::arith::MulOwnedFloatIncomplete","value":"MulOwnedFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27480},{"krate":0,"index":27481}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27561},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175452,"byte_end":1175470,"line_start":262,"line_end":262,"column_start":5,"column_end":23},"name":"DivFloatIncomplete","qualname":"::complex::arith::DivFloatIncomplete","value":"DivFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27563},{"krate":0,"index":27564}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27568},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175472,"byte_end":1175495,"line_start":262,"line_end":262,"column_start":25,"column_end":48},"name":"DivOwnedFloatIncomplete","qualname":"::complex::arith::DivOwnedFloatIncomplete","value":"DivOwnedFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27570},{"krate":0,"index":27571}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27575},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175501,"byte_end":1175523,"line_start":263,"line_end":263,"column_start":5,"column_end":27},"name":"DivFromFloatIncomplete","qualname":"::complex::arith::DivFromFloatIncomplete","value":"DivFromFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27577},{"krate":0,"index":27578}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27582},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175525,"byte_end":1175552,"line_start":263,"line_end":263,"column_start":29,"column_end":56},"name":"DivFromOwnedFloatIncomplete","qualname":"::complex::arith::DivFromOwnedFloatIncomplete","value":"DivFromOwnedFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27584},{"krate":0,"index":27585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27627},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175697,"byte_end":1175715,"line_start":271,"line_end":271,"column_start":5,"column_end":23},"name":"PowFloatIncomplete","qualname":"::complex::arith::PowFloatIncomplete","value":"PowFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27629},{"krate":0,"index":27630}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27634},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175717,"byte_end":1175740,"line_start":271,"line_end":271,"column_start":25,"column_end":48},"name":"PowOwnedFloatIncomplete","qualname":"::complex::arith::PowOwnedFloatIncomplete","value":"PowOwnedFloatIncomplete {  }","parent":null,"children":[{"krate":0,"index":27636},{"krate":0,"index":27637}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27679},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175914,"byte_end":1175934,"line_start":280,"line_end":280,"column_start":5,"column_end":25},"name":"PowIntegerIncomplete","qualname":"::complex::arith::PowIntegerIncomplete","value":"PowIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":27681},{"krate":0,"index":27682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":27686},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1175936,"byte_end":1175961,"line_start":280,"line_end":280,"column_start":27,"column_end":52},"name":"PowOwnedIntegerIncomplete","qualname":"::complex::arith::PowOwnedIntegerIncomplete","value":"PowOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":27688},{"krate":0,"index":27689}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28035},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178229,"byte_end":1178244,"line_start":354,"line_end":354,"column_start":9,"column_end":24},"name":"AddI8Incomplete","qualname":"::complex::arith::AddI8Incomplete","value":"AddI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":28037},{"krate":0,"index":28038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28072},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178255,"byte_end":1178271,"line_start":355,"line_end":355,"column_start":10,"column_end":26},"name":"AddI16Incomplete","qualname":"::complex::arith::AddI16Incomplete","value":"AddI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":28074},{"krate":0,"index":28075}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28109},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178282,"byte_end":1178298,"line_start":356,"line_end":356,"column_start":10,"column_end":26},"name":"AddI32Incomplete","qualname":"::complex::arith::AddI32Incomplete","value":"AddI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":28111},{"krate":0,"index":28112}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28146},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178309,"byte_end":1178325,"line_start":357,"line_end":357,"column_start":10,"column_end":26},"name":"AddI64Incomplete","qualname":"::complex::arith::AddI64Incomplete","value":"AddI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":28148},{"krate":0,"index":28149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28183},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178337,"byte_end":1178354,"line_start":358,"line_end":358,"column_start":11,"column_end":28},"name":"AddI128Incomplete","qualname":"::complex::arith::AddI128Incomplete","value":"AddI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":28185},{"krate":0,"index":28186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28220},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178364,"byte_end":1178379,"line_start":359,"line_end":359,"column_start":9,"column_end":24},"name":"AddU8Incomplete","qualname":"::complex::arith::AddU8Incomplete","value":"AddU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":28222},{"krate":0,"index":28223}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28257},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178390,"byte_end":1178406,"line_start":360,"line_end":360,"column_start":10,"column_end":26},"name":"AddU16Incomplete","qualname":"::complex::arith::AddU16Incomplete","value":"AddU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":28259},{"krate":0,"index":28260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28294},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178417,"byte_end":1178433,"line_start":361,"line_end":361,"column_start":10,"column_end":26},"name":"AddU32Incomplete","qualname":"::complex::arith::AddU32Incomplete","value":"AddU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":28296},{"krate":0,"index":28297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28331},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178444,"byte_end":1178460,"line_start":362,"line_end":362,"column_start":10,"column_end":26},"name":"AddU64Incomplete","qualname":"::complex::arith::AddU64Incomplete","value":"AddU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":28333},{"krate":0,"index":28334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28368},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178472,"byte_end":1178489,"line_start":363,"line_end":363,"column_start":11,"column_end":28},"name":"AddU128Incomplete","qualname":"::complex::arith::AddU128Incomplete","value":"AddU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":28370},{"krate":0,"index":28371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28405},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178500,"byte_end":1178516,"line_start":364,"line_end":364,"column_start":10,"column_end":26},"name":"AddF32Incomplete","qualname":"::complex::arith::AddF32Incomplete","value":"AddF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":28407},{"krate":0,"index":28408}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28442},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178527,"byte_end":1178543,"line_start":365,"line_end":365,"column_start":10,"column_end":26},"name":"AddF64Incomplete","qualname":"::complex::arith::AddF64Incomplete","value":"AddF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":28444},{"krate":0,"index":28445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28839},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178770,"byte_end":1178785,"line_start":374,"line_end":374,"column_start":9,"column_end":24},"name":"SubI8Incomplete","qualname":"::complex::arith::SubI8Incomplete","value":"SubI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":28841},{"krate":0,"index":28842}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28846},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178787,"byte_end":1178806,"line_start":374,"line_end":374,"column_start":26,"column_end":45},"name":"SubFromI8Incomplete","qualname":"::complex::arith::SubFromI8Incomplete","value":"SubFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":28848},{"krate":0,"index":28849}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28883},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178817,"byte_end":1178833,"line_start":375,"line_end":375,"column_start":10,"column_end":26},"name":"SubI16Incomplete","qualname":"::complex::arith::SubI16Incomplete","value":"SubI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":28885},{"krate":0,"index":28886}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28890},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178835,"byte_end":1178855,"line_start":375,"line_end":375,"column_start":28,"column_end":48},"name":"SubFromI16Incomplete","qualname":"::complex::arith::SubFromI16Incomplete","value":"SubFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":28892},{"krate":0,"index":28893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28927},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178866,"byte_end":1178882,"line_start":376,"line_end":376,"column_start":10,"column_end":26},"name":"SubI32Incomplete","qualname":"::complex::arith::SubI32Incomplete","value":"SubI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":28929},{"krate":0,"index":28930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28934},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178884,"byte_end":1178904,"line_start":376,"line_end":376,"column_start":28,"column_end":48},"name":"SubFromI32Incomplete","qualname":"::complex::arith::SubFromI32Incomplete","value":"SubFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":28936},{"krate":0,"index":28937}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28971},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178915,"byte_end":1178931,"line_start":377,"line_end":377,"column_start":10,"column_end":26},"name":"SubI64Incomplete","qualname":"::complex::arith::SubI64Incomplete","value":"SubI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":28973},{"krate":0,"index":28974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":28978},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178933,"byte_end":1178953,"line_start":377,"line_end":377,"column_start":28,"column_end":48},"name":"SubFromI64Incomplete","qualname":"::complex::arith::SubFromI64Incomplete","value":"SubFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":28980},{"krate":0,"index":28981}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29015},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178965,"byte_end":1178982,"line_start":378,"line_end":378,"column_start":11,"column_end":28},"name":"SubI128Incomplete","qualname":"::complex::arith::SubI128Incomplete","value":"SubI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":29017},{"krate":0,"index":29018}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29022},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1178984,"byte_end":1179005,"line_start":378,"line_end":378,"column_start":30,"column_end":51},"name":"SubFromI128Incomplete","qualname":"::complex::arith::SubFromI128Incomplete","value":"SubFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":29024},{"krate":0,"index":29025}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29059},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179015,"byte_end":1179030,"line_start":379,"line_end":379,"column_start":9,"column_end":24},"name":"SubU8Incomplete","qualname":"::complex::arith::SubU8Incomplete","value":"SubU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":29061},{"krate":0,"index":29062}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29066},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179032,"byte_end":1179051,"line_start":379,"line_end":379,"column_start":26,"column_end":45},"name":"SubFromU8Incomplete","qualname":"::complex::arith::SubFromU8Incomplete","value":"SubFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":29068},{"krate":0,"index":29069}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29103},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179062,"byte_end":1179078,"line_start":380,"line_end":380,"column_start":10,"column_end":26},"name":"SubU16Incomplete","qualname":"::complex::arith::SubU16Incomplete","value":"SubU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":29105},{"krate":0,"index":29106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29110},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179080,"byte_end":1179100,"line_start":380,"line_end":380,"column_start":28,"column_end":48},"name":"SubFromU16Incomplete","qualname":"::complex::arith::SubFromU16Incomplete","value":"SubFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":29112},{"krate":0,"index":29113}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29147},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179111,"byte_end":1179127,"line_start":381,"line_end":381,"column_start":10,"column_end":26},"name":"SubU32Incomplete","qualname":"::complex::arith::SubU32Incomplete","value":"SubU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":29149},{"krate":0,"index":29150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29154},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179129,"byte_end":1179149,"line_start":381,"line_end":381,"column_start":28,"column_end":48},"name":"SubFromU32Incomplete","qualname":"::complex::arith::SubFromU32Incomplete","value":"SubFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":29156},{"krate":0,"index":29157}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29191},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179160,"byte_end":1179176,"line_start":382,"line_end":382,"column_start":10,"column_end":26},"name":"SubU64Incomplete","qualname":"::complex::arith::SubU64Incomplete","value":"SubU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":29193},{"krate":0,"index":29194}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29198},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179178,"byte_end":1179198,"line_start":382,"line_end":382,"column_start":28,"column_end":48},"name":"SubFromU64Incomplete","qualname":"::complex::arith::SubFromU64Incomplete","value":"SubFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":29200},{"krate":0,"index":29201}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29235},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179210,"byte_end":1179227,"line_start":383,"line_end":383,"column_start":11,"column_end":28},"name":"SubU128Incomplete","qualname":"::complex::arith::SubU128Incomplete","value":"SubU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":29237},{"krate":0,"index":29238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29242},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179229,"byte_end":1179250,"line_start":383,"line_end":383,"column_start":30,"column_end":51},"name":"SubFromU128Incomplete","qualname":"::complex::arith::SubFromU128Incomplete","value":"SubFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":29244},{"krate":0,"index":29245}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29279},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179261,"byte_end":1179277,"line_start":384,"line_end":384,"column_start":10,"column_end":26},"name":"SubF32Incomplete","qualname":"::complex::arith::SubF32Incomplete","value":"SubF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":29281},{"krate":0,"index":29282}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29286},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179279,"byte_end":1179299,"line_start":384,"line_end":384,"column_start":28,"column_end":48},"name":"SubFromF32Incomplete","qualname":"::complex::arith::SubFromF32Incomplete","value":"SubFromF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":29288},{"krate":0,"index":29289}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29323},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179310,"byte_end":1179326,"line_start":385,"line_end":385,"column_start":10,"column_end":26},"name":"SubF64Incomplete","qualname":"::complex::arith::SubF64Incomplete","value":"SubF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":29325},{"krate":0,"index":29326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29330},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179328,"byte_end":1179348,"line_start":385,"line_end":385,"column_start":28,"column_end":48},"name":"SubFromF64Incomplete","qualname":"::complex::arith::SubFromF64Incomplete","value":"SubFromF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":29332},{"krate":0,"index":29333}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29679},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179553,"byte_end":1179568,"line_start":394,"line_end":394,"column_start":9,"column_end":24},"name":"MulI8Incomplete","qualname":"::complex::arith::MulI8Incomplete","value":"MulI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":29681},{"krate":0,"index":29682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29716},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179579,"byte_end":1179595,"line_start":395,"line_end":395,"column_start":10,"column_end":26},"name":"MulI16Incomplete","qualname":"::complex::arith::MulI16Incomplete","value":"MulI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":29718},{"krate":0,"index":29719}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29753},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179606,"byte_end":1179622,"line_start":396,"line_end":396,"column_start":10,"column_end":26},"name":"MulI32Incomplete","qualname":"::complex::arith::MulI32Incomplete","value":"MulI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":29755},{"krate":0,"index":29756}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29790},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179633,"byte_end":1179649,"line_start":397,"line_end":397,"column_start":10,"column_end":26},"name":"MulI64Incomplete","qualname":"::complex::arith::MulI64Incomplete","value":"MulI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":29792},{"krate":0,"index":29793}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29827},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179661,"byte_end":1179678,"line_start":398,"line_end":398,"column_start":11,"column_end":28},"name":"MulI128Incomplete","qualname":"::complex::arith::MulI128Incomplete","value":"MulI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":29829},{"krate":0,"index":29830}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29864},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179688,"byte_end":1179703,"line_start":399,"line_end":399,"column_start":9,"column_end":24},"name":"MulU8Incomplete","qualname":"::complex::arith::MulU8Incomplete","value":"MulU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":29866},{"krate":0,"index":29867}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29901},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179714,"byte_end":1179730,"line_start":400,"line_end":400,"column_start":10,"column_end":26},"name":"MulU16Incomplete","qualname":"::complex::arith::MulU16Incomplete","value":"MulU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":29903},{"krate":0,"index":29904}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29938},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179741,"byte_end":1179757,"line_start":401,"line_end":401,"column_start":10,"column_end":26},"name":"MulU32Incomplete","qualname":"::complex::arith::MulU32Incomplete","value":"MulU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":29940},{"krate":0,"index":29941}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":29975},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179768,"byte_end":1179784,"line_start":402,"line_end":402,"column_start":10,"column_end":26},"name":"MulU64Incomplete","qualname":"::complex::arith::MulU64Incomplete","value":"MulU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":29977},{"krate":0,"index":29978}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30012},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179796,"byte_end":1179813,"line_start":403,"line_end":403,"column_start":11,"column_end":28},"name":"MulU128Incomplete","qualname":"::complex::arith::MulU128Incomplete","value":"MulU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":30014},{"krate":0,"index":30015}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30049},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179824,"byte_end":1179840,"line_start":404,"line_end":404,"column_start":10,"column_end":26},"name":"MulF32Incomplete","qualname":"::complex::arith::MulF32Incomplete","value":"MulF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":30051},{"krate":0,"index":30052}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30086},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1179851,"byte_end":1179867,"line_start":405,"line_end":405,"column_start":10,"column_end":26},"name":"MulF64Incomplete","qualname":"::complex::arith::MulF64Incomplete","value":"MulF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":30088},{"krate":0,"index":30089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30483},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180094,"byte_end":1180109,"line_start":414,"line_end":414,"column_start":9,"column_end":24},"name":"DivI8Incomplete","qualname":"::complex::arith::DivI8Incomplete","value":"DivI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":30485},{"krate":0,"index":30486}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30490},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180111,"byte_end":1180130,"line_start":414,"line_end":414,"column_start":26,"column_end":45},"name":"DivFromI8Incomplete","qualname":"::complex::arith::DivFromI8Incomplete","value":"DivFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":30492},{"krate":0,"index":30493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30527},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180141,"byte_end":1180157,"line_start":415,"line_end":415,"column_start":10,"column_end":26},"name":"DivI16Incomplete","qualname":"::complex::arith::DivI16Incomplete","value":"DivI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":30529},{"krate":0,"index":30530}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30534},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180159,"byte_end":1180179,"line_start":415,"line_end":415,"column_start":28,"column_end":48},"name":"DivFromI16Incomplete","qualname":"::complex::arith::DivFromI16Incomplete","value":"DivFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":30536},{"krate":0,"index":30537}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30571},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180190,"byte_end":1180206,"line_start":416,"line_end":416,"column_start":10,"column_end":26},"name":"DivI32Incomplete","qualname":"::complex::arith::DivI32Incomplete","value":"DivI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":30573},{"krate":0,"index":30574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30578},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180208,"byte_end":1180228,"line_start":416,"line_end":416,"column_start":28,"column_end":48},"name":"DivFromI32Incomplete","qualname":"::complex::arith::DivFromI32Incomplete","value":"DivFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":30580},{"krate":0,"index":30581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30615},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180239,"byte_end":1180255,"line_start":417,"line_end":417,"column_start":10,"column_end":26},"name":"DivI64Incomplete","qualname":"::complex::arith::DivI64Incomplete","value":"DivI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":30617},{"krate":0,"index":30618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30622},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180257,"byte_end":1180277,"line_start":417,"line_end":417,"column_start":28,"column_end":48},"name":"DivFromI64Incomplete","qualname":"::complex::arith::DivFromI64Incomplete","value":"DivFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":30624},{"krate":0,"index":30625}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30659},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180289,"byte_end":1180306,"line_start":418,"line_end":418,"column_start":11,"column_end":28},"name":"DivI128Incomplete","qualname":"::complex::arith::DivI128Incomplete","value":"DivI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":30661},{"krate":0,"index":30662}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30666},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180308,"byte_end":1180329,"line_start":418,"line_end":418,"column_start":30,"column_end":51},"name":"DivFromI128Incomplete","qualname":"::complex::arith::DivFromI128Incomplete","value":"DivFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":30668},{"krate":0,"index":30669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30703},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180339,"byte_end":1180354,"line_start":419,"line_end":419,"column_start":9,"column_end":24},"name":"DivU8Incomplete","qualname":"::complex::arith::DivU8Incomplete","value":"DivU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":30705},{"krate":0,"index":30706}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30710},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180356,"byte_end":1180375,"line_start":419,"line_end":419,"column_start":26,"column_end":45},"name":"DivFromU8Incomplete","qualname":"::complex::arith::DivFromU8Incomplete","value":"DivFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":30712},{"krate":0,"index":30713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30747},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180386,"byte_end":1180402,"line_start":420,"line_end":420,"column_start":10,"column_end":26},"name":"DivU16Incomplete","qualname":"::complex::arith::DivU16Incomplete","value":"DivU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":30749},{"krate":0,"index":30750}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30754},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180404,"byte_end":1180424,"line_start":420,"line_end":420,"column_start":28,"column_end":48},"name":"DivFromU16Incomplete","qualname":"::complex::arith::DivFromU16Incomplete","value":"DivFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":30756},{"krate":0,"index":30757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30791},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180435,"byte_end":1180451,"line_start":421,"line_end":421,"column_start":10,"column_end":26},"name":"DivU32Incomplete","qualname":"::complex::arith::DivU32Incomplete","value":"DivU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":30793},{"krate":0,"index":30794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30798},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180453,"byte_end":1180473,"line_start":421,"line_end":421,"column_start":28,"column_end":48},"name":"DivFromU32Incomplete","qualname":"::complex::arith::DivFromU32Incomplete","value":"DivFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":30800},{"krate":0,"index":30801}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30835},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180484,"byte_end":1180500,"line_start":422,"line_end":422,"column_start":10,"column_end":26},"name":"DivU64Incomplete","qualname":"::complex::arith::DivU64Incomplete","value":"DivU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":30837},{"krate":0,"index":30838}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30842},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180502,"byte_end":1180522,"line_start":422,"line_end":422,"column_start":28,"column_end":48},"name":"DivFromU64Incomplete","qualname":"::complex::arith::DivFromU64Incomplete","value":"DivFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":30844},{"krate":0,"index":30845}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30879},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180534,"byte_end":1180551,"line_start":423,"line_end":423,"column_start":11,"column_end":28},"name":"DivU128Incomplete","qualname":"::complex::arith::DivU128Incomplete","value":"DivU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":30881},{"krate":0,"index":30882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30886},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180553,"byte_end":1180574,"line_start":423,"line_end":423,"column_start":30,"column_end":51},"name":"DivFromU128Incomplete","qualname":"::complex::arith::DivFromU128Incomplete","value":"DivFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":30888},{"krate":0,"index":30889}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30923},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180585,"byte_end":1180601,"line_start":424,"line_end":424,"column_start":10,"column_end":26},"name":"DivF32Incomplete","qualname":"::complex::arith::DivF32Incomplete","value":"DivF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":30925},{"krate":0,"index":30926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30930},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180603,"byte_end":1180623,"line_start":424,"line_end":424,"column_start":28,"column_end":48},"name":"DivFromF32Incomplete","qualname":"::complex::arith::DivFromF32Incomplete","value":"DivFromF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":30932},{"krate":0,"index":30933}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30967},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180634,"byte_end":1180650,"line_start":425,"line_end":425,"column_start":10,"column_end":26},"name":"DivF64Incomplete","qualname":"::complex::arith::DivF64Incomplete","value":"DivF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":30969},{"krate":0,"index":30970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30974},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180652,"byte_end":1180672,"line_start":425,"line_end":425,"column_start":28,"column_end":48},"name":"DivFromF64Incomplete","qualname":"::complex::arith::DivFromF64Incomplete","value":"DivFromF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":30976},{"krate":0,"index":30977}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31371},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180899,"byte_end":1180914,"line_start":434,"line_end":434,"column_start":9,"column_end":24},"name":"PowI8Incomplete","qualname":"::complex::arith::PowI8Incomplete","value":"PowI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":31373},{"krate":0,"index":31374}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31378},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180916,"byte_end":1180935,"line_start":434,"line_end":434,"column_start":26,"column_end":45},"name":"PowFromI8Incomplete","qualname":"::complex::arith::PowFromI8Incomplete","value":"PowFromI8Incomplete {  }","parent":null,"children":[{"krate":0,"index":31380},{"krate":0,"index":31381}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31415},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180946,"byte_end":1180962,"line_start":435,"line_end":435,"column_start":10,"column_end":26},"name":"PowI16Incomplete","qualname":"::complex::arith::PowI16Incomplete","value":"PowI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":31417},{"krate":0,"index":31418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31422},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180964,"byte_end":1180984,"line_start":435,"line_end":435,"column_start":28,"column_end":48},"name":"PowFromI16Incomplete","qualname":"::complex::arith::PowFromI16Incomplete","value":"PowFromI16Incomplete {  }","parent":null,"children":[{"krate":0,"index":31424},{"krate":0,"index":31425}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31459},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1180995,"byte_end":1181011,"line_start":436,"line_end":436,"column_start":10,"column_end":26},"name":"PowI32Incomplete","qualname":"::complex::arith::PowI32Incomplete","value":"PowI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":31461},{"krate":0,"index":31462}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31466},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181013,"byte_end":1181033,"line_start":436,"line_end":436,"column_start":28,"column_end":48},"name":"PowFromI32Incomplete","qualname":"::complex::arith::PowFromI32Incomplete","value":"PowFromI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":31468},{"krate":0,"index":31469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31503},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181044,"byte_end":1181060,"line_start":437,"line_end":437,"column_start":10,"column_end":26},"name":"PowI64Incomplete","qualname":"::complex::arith::PowI64Incomplete","value":"PowI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":31505},{"krate":0,"index":31506}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31510},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181062,"byte_end":1181082,"line_start":437,"line_end":437,"column_start":28,"column_end":48},"name":"PowFromI64Incomplete","qualname":"::complex::arith::PowFromI64Incomplete","value":"PowFromI64Incomplete {  }","parent":null,"children":[{"krate":0,"index":31512},{"krate":0,"index":31513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31547},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181094,"byte_end":1181111,"line_start":438,"line_end":438,"column_start":11,"column_end":28},"name":"PowI128Incomplete","qualname":"::complex::arith::PowI128Incomplete","value":"PowI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":31549},{"krate":0,"index":31550}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31554},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181113,"byte_end":1181134,"line_start":438,"line_end":438,"column_start":30,"column_end":51},"name":"PowFromI128Incomplete","qualname":"::complex::arith::PowFromI128Incomplete","value":"PowFromI128Incomplete {  }","parent":null,"children":[{"krate":0,"index":31556},{"krate":0,"index":31557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31591},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181144,"byte_end":1181159,"line_start":439,"line_end":439,"column_start":9,"column_end":24},"name":"PowU8Incomplete","qualname":"::complex::arith::PowU8Incomplete","value":"PowU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":31593},{"krate":0,"index":31594}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31598},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181161,"byte_end":1181180,"line_start":439,"line_end":439,"column_start":26,"column_end":45},"name":"PowFromU8Incomplete","qualname":"::complex::arith::PowFromU8Incomplete","value":"PowFromU8Incomplete {  }","parent":null,"children":[{"krate":0,"index":31600},{"krate":0,"index":31601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31635},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181191,"byte_end":1181207,"line_start":440,"line_end":440,"column_start":10,"column_end":26},"name":"PowU16Incomplete","qualname":"::complex::arith::PowU16Incomplete","value":"PowU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":31637},{"krate":0,"index":31638}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31642},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181209,"byte_end":1181229,"line_start":440,"line_end":440,"column_start":28,"column_end":48},"name":"PowFromU16Incomplete","qualname":"::complex::arith::PowFromU16Incomplete","value":"PowFromU16Incomplete {  }","parent":null,"children":[{"krate":0,"index":31644},{"krate":0,"index":31645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31679},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181240,"byte_end":1181256,"line_start":441,"line_end":441,"column_start":10,"column_end":26},"name":"PowU32Incomplete","qualname":"::complex::arith::PowU32Incomplete","value":"PowU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":31681},{"krate":0,"index":31682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31686},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181258,"byte_end":1181278,"line_start":441,"line_end":441,"column_start":28,"column_end":48},"name":"PowFromU32Incomplete","qualname":"::complex::arith::PowFromU32Incomplete","value":"PowFromU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":31688},{"krate":0,"index":31689}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31723},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181289,"byte_end":1181305,"line_start":442,"line_end":442,"column_start":10,"column_end":26},"name":"PowU64Incomplete","qualname":"::complex::arith::PowU64Incomplete","value":"PowU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":31725},{"krate":0,"index":31726}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31730},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181307,"byte_end":1181327,"line_start":442,"line_end":442,"column_start":28,"column_end":48},"name":"PowFromU64Incomplete","qualname":"::complex::arith::PowFromU64Incomplete","value":"PowFromU64Incomplete {  }","parent":null,"children":[{"krate":0,"index":31732},{"krate":0,"index":31733}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31767},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181339,"byte_end":1181356,"line_start":443,"line_end":443,"column_start":11,"column_end":28},"name":"PowU128Incomplete","qualname":"::complex::arith::PowU128Incomplete","value":"PowU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":31769},{"krate":0,"index":31770}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31774},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181358,"byte_end":1181379,"line_start":443,"line_end":443,"column_start":30,"column_end":51},"name":"PowFromU128Incomplete","qualname":"::complex::arith::PowFromU128Incomplete","value":"PowFromU128Incomplete {  }","parent":null,"children":[{"krate":0,"index":31776},{"krate":0,"index":31777}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31811},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181390,"byte_end":1181406,"line_start":444,"line_end":444,"column_start":10,"column_end":26},"name":"PowF32Incomplete","qualname":"::complex::arith::PowF32Incomplete","value":"PowF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":31813},{"krate":0,"index":31814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31818},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181408,"byte_end":1181428,"line_start":444,"line_end":444,"column_start":28,"column_end":48},"name":"PowFromF32Incomplete","qualname":"::complex::arith::PowFromF32Incomplete","value":"PowFromF32Incomplete {  }","parent":null,"children":[{"krate":0,"index":31820},{"krate":0,"index":31821}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31855},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181439,"byte_end":1181455,"line_start":445,"line_end":445,"column_start":10,"column_end":26},"name":"PowF64Incomplete","qualname":"::complex::arith::PowF64Incomplete","value":"PowF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":31857},{"krate":0,"index":31858}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31862},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181457,"byte_end":1181477,"line_start":445,"line_end":445,"column_start":28,"column_end":48},"name":"PowFromF64Incomplete","qualname":"::complex::arith::PowFromF64Incomplete","value":"PowFromF64Incomplete {  }","parent":null,"children":[{"krate":0,"index":31864},{"krate":0,"index":31865}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31933},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181714,"byte_end":1181734,"line_start":457,"line_end":457,"column_start":5,"column_end":25},"name":"AddIntegerIncomplete","qualname":"::complex::arith::AddIntegerIncomplete","value":"AddIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":31935},{"krate":0,"index":31936}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31940},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1181736,"byte_end":1181761,"line_start":457,"line_end":457,"column_start":27,"column_end":52},"name":"AddOwnedIntegerIncomplete","qualname":"::complex::arith::AddOwnedIntegerIncomplete","value":"AddOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":31942},{"krate":0,"index":31943}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32023},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182012,"byte_end":1182032,"line_start":468,"line_end":468,"column_start":5,"column_end":25},"name":"SubIntegerIncomplete","qualname":"::complex::arith::SubIntegerIncomplete","value":"SubIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32025},{"krate":0,"index":32026}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32030},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182034,"byte_end":1182059,"line_start":468,"line_end":468,"column_start":27,"column_end":52},"name":"SubOwnedIntegerIncomplete","qualname":"::complex::arith::SubOwnedIntegerIncomplete","value":"SubOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32032},{"krate":0,"index":32033}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32037},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182065,"byte_end":1182089,"line_start":469,"line_end":469,"column_start":5,"column_end":29},"name":"SubFromIntegerIncomplete","qualname":"::complex::arith::SubFromIntegerIncomplete","value":"SubFromIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32039},{"krate":0,"index":32040}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32044},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182091,"byte_end":1182120,"line_start":469,"line_end":469,"column_start":31,"column_end":60},"name":"SubFromOwnedIntegerIncomplete","qualname":"::complex::arith::SubFromOwnedIntegerIncomplete","value":"SubFromOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32046},{"krate":0,"index":32047}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32115},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182355,"byte_end":1182375,"line_start":480,"line_end":480,"column_start":5,"column_end":25},"name":"MulIntegerIncomplete","qualname":"::complex::arith::MulIntegerIncomplete","value":"MulIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32117},{"krate":0,"index":32118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32122},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182377,"byte_end":1182402,"line_start":480,"line_end":480,"column_start":27,"column_end":52},"name":"MulOwnedIntegerIncomplete","qualname":"::complex::arith::MulOwnedIntegerIncomplete","value":"MulOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32124},{"krate":0,"index":32125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32167},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182577,"byte_end":1182597,"line_start":489,"line_end":489,"column_start":5,"column_end":25},"name":"DivIntegerIncomplete","qualname":"::complex::arith::DivIntegerIncomplete","value":"DivIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32169},{"krate":0,"index":32170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32174},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182599,"byte_end":1182624,"line_start":489,"line_end":489,"column_start":27,"column_end":52},"name":"DivOwnedIntegerIncomplete","qualname":"::complex::arith::DivOwnedIntegerIncomplete","value":"DivOwnedIntegerIncomplete {  }","parent":null,"children":[{"krate":0,"index":32176},{"krate":0,"index":32177}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32245},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182861,"byte_end":1182882,"line_start":500,"line_end":500,"column_start":5,"column_end":26},"name":"AddRationalIncomplete","qualname":"::complex::arith::AddRationalIncomplete","value":"AddRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32247},{"krate":0,"index":32248}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32252},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1182884,"byte_end":1182910,"line_start":500,"line_end":500,"column_start":28,"column_end":54},"name":"AddOwnedRationalIncomplete","qualname":"::complex::arith::AddOwnedRationalIncomplete","value":"AddOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32254},{"krate":0,"index":32255}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32335},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183163,"byte_end":1183184,"line_start":511,"line_end":511,"column_start":5,"column_end":26},"name":"SubRationalIncomplete","qualname":"::complex::arith::SubRationalIncomplete","value":"SubRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32337},{"krate":0,"index":32338}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32342},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183186,"byte_end":1183212,"line_start":511,"line_end":511,"column_start":28,"column_end":54},"name":"SubOwnedRationalIncomplete","qualname":"::complex::arith::SubOwnedRationalIncomplete","value":"SubOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32344},{"krate":0,"index":32345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32349},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183218,"byte_end":1183243,"line_start":512,"line_end":512,"column_start":5,"column_end":30},"name":"SubFromRationalIncomplete","qualname":"::complex::arith::SubFromRationalIncomplete","value":"SubFromRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32351},{"krate":0,"index":32352}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32356},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183245,"byte_end":1183275,"line_start":512,"line_end":512,"column_start":32,"column_end":62},"name":"SubFromOwnedRationalIncomplete","qualname":"::complex::arith::SubFromOwnedRationalIncomplete","value":"SubFromOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32358},{"krate":0,"index":32359}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32427},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183512,"byte_end":1183533,"line_start":523,"line_end":523,"column_start":5,"column_end":26},"name":"MulRationalIncomplete","qualname":"::complex::arith::MulRationalIncomplete","value":"MulRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32429},{"krate":0,"index":32430}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32434},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183535,"byte_end":1183561,"line_start":523,"line_end":523,"column_start":28,"column_end":54},"name":"MulOwnedRationalIncomplete","qualname":"::complex::arith::MulOwnedRationalIncomplete","value":"MulOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32436},{"krate":0,"index":32437}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32479},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183738,"byte_end":1183759,"line_start":532,"line_end":532,"column_start":5,"column_end":26},"name":"DivRationalIncomplete","qualname":"::complex::arith::DivRationalIncomplete","value":"DivRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32481},{"krate":0,"index":32482}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32486},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183761,"byte_end":1183787,"line_start":532,"line_end":532,"column_start":28,"column_end":54},"name":"DivOwnedRationalIncomplete","qualname":"::complex::arith::DivOwnedRationalIncomplete","value":"DivOwnedRationalIncomplete {  }","parent":null,"children":[{"krate":0,"index":32488},{"krate":0,"index":32489}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32515},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1183892,"byte_end":1183908,"line_start":539,"line_end":539,"column_start":10,"column_end":26},"name":"ShlU32Incomplete","qualname":"::complex::arith::ShlU32Incomplete","value":"ShlU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":32517},{"krate":0,"index":32518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32544},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1184013,"byte_end":1184029,"line_start":545,"line_end":545,"column_start":10,"column_end":26},"name":"ShrU32Incomplete","qualname":"::complex::arith::ShrU32Incomplete","value":"ShrU32Incomplete {  }","parent":null,"children":[{"krate":0,"index":32546},{"krate":0,"index":32547}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32573},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1184134,"byte_end":1184150,"line_start":551,"line_end":551,"column_start":10,"column_end":26},"name":"ShlI32Incomplete","qualname":"::complex::arith::ShlI32Incomplete","value":"ShlI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":32575},{"krate":0,"index":32576}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32602},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1184255,"byte_end":1184271,"line_start":557,"line_end":557,"column_start":10,"column_end":26},"name":"ShrI32Incomplete","qualname":"::complex::arith::ShrI32Incomplete","value":"ShrI32Incomplete {  }","parent":null,"children":[{"krate":0,"index":32604},{"krate":0,"index":32605}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32639},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1184550,"byte_end":1184566,"line_start":569,"line_end":569,"column_start":5,"column_end":21},"name":"AddMulIncomplete","qualname":"::complex::arith::AddMulIncomplete","value":"AddMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":32641},{"krate":0,"index":32642}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32680},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1184855,"byte_end":1184871,"line_start":580,"line_end":580,"column_start":5,"column_end":21},"name":"SubMulIncomplete","qualname":"::complex::arith::SubMulIncomplete","value":"SubMulIncomplete {  }","parent":null,"children":[{"krate":0,"index":32682},{"krate":0,"index":32683}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32687},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1184873,"byte_end":1184893,"line_start":580,"line_end":580,"column_start":23,"column_end":43},"name":"SubMulFromIncomplete","qualname":"::complex::arith::SubMulFromIncomplete","value":"SubMulFromIncomplete {  }","parent":null,"children":[{"krate":0,"index":32689},{"krate":0,"index":32690}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1185671,"byte_end":1185675,"line_start":595,"line_end":595,"column_start":10,"column_end":14},"name":"Long","qualname":"::complex::arith::AsLong::Long","value":"type Long;","parent":{"krate":0,"index":3033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1206526,"byte_end":1206533,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"Complex","qualname":"::complex::big::Complex","value":"Complex {  }","parent":null,"children":[{"krate":0,"index":3118}],"decl_id":null,"docs":"A multi-precision complex number with arbitrarily large precision and\ncorrect rounding.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1206494,"byte_end":1206514,"line_start":165,"line_end":165,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1208970,"byte_end":1208973,"line_start":258,"line_end":258,"column_start":12,"column_end":15},"name":"new","qualname":"<Complex>::new","value":"fn <P> (prec: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Complex`] number with the specified precisions\n for the real and imaginary parts and with value 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1208949,"byte_end":1208958,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1209731,"byte_end":1209739,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"with_val","qualname":"<Complex>::with_val","value":"fn <P, T> (prec: P, val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Complex`] number with the specified precision\n and with the given value, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1209710,"byte_end":1209719,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1210686,"byte_end":1210700,"line_start":317,"line_end":317,"column_start":12,"column_end":26},"name":"with_val_round","qualname":"<Complex>::with_val_round","value":"fn <P, T> (prec: P, val: T, round: Round2) -> (Self, Ordering2)","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Complex`] number with the specified precision\n and with the given value, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1210665,"byte_end":1210674,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1211238,"byte_end":1211242,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"prec","qualname":"<Complex>::prec","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the precision of the real and imaginary parts.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1211217,"byte_end":1211226,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1211778,"byte_end":1211786,"line_start":358,"line_end":358,"column_start":12,"column_end":20},"name":"set_prec","qualname":"<Complex>::set_prec","value":"fn <P> (&mut self, prec: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the precision of the real and imaginary parts, rounding\n to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1211757,"byte_end":1211766,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1212494,"byte_end":1212508,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"set_prec_round","qualname":"<Complex>::set_prec_round","value":"fn <P> (&mut self, prec: P, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Sets the precision of the real and imaginary parts, applying\n the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1212473,"byte_end":1212482,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1213913,"byte_end":1213921,"line_start":422,"line_end":422,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Complex>::from_raw","value":"fn (raw: mpc_t) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Complex`] number from an initialized\n [MPC complex number][`mpc_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1213885,"byte_end":1213894,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1214956,"byte_end":1214964,"line_start":456,"line_end":456,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Complex>::into_raw","value":"fn (self) -> mpc_t","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Complex`] number into an\n [MPC complex number][`mpc_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1214935,"byte_end":1214944,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1215980,"byte_end":1215986,"line_start":491,"line_end":491,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Complex>::as_raw","value":"fn (&self) -> *const mpc_t","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the inner [MPC complex number][`mpc_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1215959,"byte_end":1215968,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1216674,"byte_end":1216684,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"name":"as_raw_mut","qualname":"<Complex>::as_raw_mut","value":"fn (&mut self) -> *mut mpc_t","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the inner\n [MPC complex number][`mpc_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1216653,"byte_end":1216662,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1218952,"byte_end":1218957,"line_start":570,"line_end":570,"column_start":12,"column_end":17},"name":"parse","qualname":"<Complex>::parse","value":"fn <S> (src: S) -> Result<ParseIncomplete, ParseComplexError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a decimal string slice (<code>&amp;[str]</code>) or\n byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into a\n [`Complex`] number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1218931,"byte_end":1218940,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1221414,"byte_end":1221425,"line_start":627,"line_end":627,"column_start":12,"column_end":23},"name":"parse_radix","qualname":"<Complex>::parse_radix","value":"fn <S> (src: S, radix: i32) -> Result<ParseIncomplete, ParseComplexError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string slice (<code>&amp;[str]</code>) or byte slice\n (<code>[&amp;\\[][slice][u8][`u8`][\\]][slice]</code>) into a\n [`Complex`] number.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1221393,"byte_end":1221402,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1222523,"byte_end":1222538,"line_start":658,"line_end":658,"column_start":12,"column_end":27},"name":"to_string_radix","qualname":"<Complex>::to_string_radix","value":"fn (&self, radix: i32, num_digits: Option<usize>) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of the value for the specified\n `radix` rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1222502,"byte_end":1222511,"line_start":657,"line_end":657,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1223908,"byte_end":1223929,"line_start":692,"line_end":692,"column_start":12,"column_end":33},"name":"to_string_radix_round","qualname":"<Complex>::to_string_radix_round","value":"fn (&self, radix: i32, num_digits: Option<usize>, round: Round2) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of the value for the specified\n `radix` applying the specified rounding method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1224675,"byte_end":1224679,"line_start":724,"line_end":724,"column_start":12,"column_end":16},"name":"real","qualname":"<Complex>::real","value":"fn (&self) -> &Float","parent":null,"children":[],"decl_id":null,"docs":" Borrows the real part as a [`Float`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1224654,"byte_end":1224663,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1225082,"byte_end":1225086,"line_start":740,"line_end":740,"column_start":12,"column_end":16},"name":"imag","qualname":"<Complex>::imag","value":"fn (&self) -> &Float","parent":null,"children":[],"decl_id":null,"docs":" Borrows the imaginary part as a [`Float`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1225061,"byte_end":1225070,"line_start":739,"line_end":739,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3150},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1225504,"byte_end":1225512,"line_start":756,"line_end":756,"column_start":12,"column_end":20},"name":"mut_real","qualname":"<Complex>::mut_real","value":"fn (&mut self) -> &mut Float","parent":null,"children":[],"decl_id":null,"docs":" Borrows the real part mutably.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1225483,"byte_end":1225492,"line_start":755,"line_end":755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1225946,"byte_end":1225954,"line_start":772,"line_end":772,"column_start":12,"column_end":20},"name":"mut_imag","qualname":"<Complex>::mut_imag","value":"fn (&mut self) -> &mut Float","parent":null,"children":[],"decl_id":null,"docs":" Borrows the imaginary part mutably.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1225925,"byte_end":1225934,"line_start":771,"line_end":771,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1226492,"byte_end":1226508,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"as_mut_real_imag","qualname":"<Complex>::as_mut_real_imag","value":"fn (&mut self) -> (&mut Float, &mut Float)","parent":null,"children":[],"decl_id":null,"docs":" Borrows the real and imaginary parts mutably.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1226471,"byte_end":1226480,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1227260,"byte_end":1227274,"line_start":818,"line_end":818,"column_start":12,"column_end":26},"name":"into_real_imag","qualname":"<Complex>::into_real_imag","value":"fn (self) -> (Float, Float)","parent":null,"children":[],"decl_id":null,"docs":" Consumes and converts the value into real and imaginary\n [`Float`] values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1227239,"byte_end":1227248,"line_start":817,"line_end":817,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1228472,"byte_end":1228478,"line_start":851,"line_end":851,"column_start":12,"column_end":18},"name":"as_neg","qualname":"<Complex>::as_neg","value":"fn (&self) -> BorrowComplex<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a negated copy of the [`Complex`] number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1229766,"byte_end":1229773,"line_start":887,"line_end":887,"column_start":12,"column_end":19},"name":"as_conj","qualname":"<Complex>::as_conj","value":"fn (&self) -> BorrowComplex<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a conjugate copy of the [`Complex`] number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1231229,"byte_end":1231237,"line_start":927,"line_end":927,"column_start":12,"column_end":20},"name":"as_mul_i","qualname":"<Complex>::as_mul_i","value":"fn (&self, negative: bool) -> BorrowComplex<'_>","parent":null,"children":[],"decl_id":null,"docs":" Borrows a rotated copy of the [`Complex`] number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1232777,"byte_end":1232783,"line_start":973,"line_end":973,"column_start":12,"column_end":18},"name":"as_ord","qualname":"<Complex>::as_ord","value":"fn (&self) -> &OrdComplex","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`Complex`] number as an ordered complex number of\n type [`OrdComplex`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1232756,"byte_end":1232765,"line_start":972,"line_end":972,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1233419,"byte_end":1233422,"line_start":994,"line_end":994,"column_start":12,"column_end":15},"name":"eq0","qualname":"<Complex>::eq0","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the same result as\n <code>self.[eq][`eq`](&amp;0)</code>, but is faster.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1233398,"byte_end":1233407,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1234186,"byte_end":1234193,"line_start":1014,"line_end":1014,"column_start":12,"column_end":19},"name":"cmp_abs","qualname":"<Complex>::cmp_abs","value":"fn (&self, other: &Self) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compares the absolute values of `self` and `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1234165,"byte_end":1234174,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1236534,"byte_end":1236537,"line_start":1073,"line_end":1073,"column_start":12,"column_end":15},"name":"sum","qualname":"<Complex>::sum","value":"fn <'a, I> (values: I) -> SumIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Adds a list of [`Complex`] numbers with correct rounding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1236513,"byte_end":1236522,"line_start":1072,"line_end":1072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1238935,"byte_end":1238938,"line_start":1133,"line_end":1133,"column_start":12,"column_end":15},"name":"dot","qualname":"<Complex>::dot","value":"fn <'a, I> (values: I) -> DotIncomplete<'a, I>","parent":null,"children":[],"decl_id":null,"docs":" Finds the dot product of a list of [`Complex`] numbers pairs\n with correct rounding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1238914,"byte_end":1238923,"line_start":1132,"line_end":1132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1239761,"byte_end":1239768,"line_start":1158,"line_end":1158,"column_start":12,"column_end":19},"name":"mul_add","qualname":"<Complex>::mul_add","value":"fn (mut self, mul: &Self, add: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation, rounding to the\n nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1239740,"byte_end":1239749,"line_start":1157,"line_end":1157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1240533,"byte_end":1240544,"line_start":1181,"line_end":1181,"column_start":12,"column_end":23},"name":"mul_add_mut","qualname":"<Complex>::mul_add_mut","value":"fn (&mut self, mul: &Self, add: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation, rounding to the\n nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1240512,"byte_end":1240521,"line_start":1180,"line_end":1180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1241612,"byte_end":1241625,"line_start":1209,"line_end":1209,"column_start":12,"column_end":25},"name":"mul_add_round","qualname":"<Complex>::mul_add_round","value":"fn (&mut self, mul: &Self, add: &Self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation, applying the\n specified rounding method with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1241591,"byte_end":1241600,"line_start":1208,"line_end":1208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1242822,"byte_end":1242833,"line_start":1240,"line_end":1240,"column_start":12,"column_end":23},"name":"mul_add_ref","qualname":"<Complex>::mul_add_ref","value":"fn <'a> (&'a self, mul: &'a Self, add: &'a Self) -> AddMulIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and adds in one fused operation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1242801,"byte_end":1242810,"line_start":1239,"line_end":1239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1243624,"byte_end":1243631,"line_start":1262,"line_end":1262,"column_start":12,"column_end":19},"name":"mul_sub","qualname":"<Complex>::mul_sub","value":"fn (mut self, mul: &Self, sub: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation, rounding to\n the nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1243603,"byte_end":1243612,"line_start":1261,"line_end":1261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1244410,"byte_end":1244421,"line_start":1285,"line_end":1285,"column_start":12,"column_end":23},"name":"mul_sub_mut","qualname":"<Complex>::mul_sub_mut","value":"fn (&mut self, mul: &Self, sub: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation, rounding to\n the nearest with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1244389,"byte_end":1244398,"line_start":1284,"line_end":1284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1245503,"byte_end":1245516,"line_start":1313,"line_end":1313,"column_start":12,"column_end":25},"name":"mul_sub_round","qualname":"<Complex>::mul_sub_round","value":"fn (&mut self, mul: &Self, sub: &Self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation, applying the\n specified rounding method with only one rounding error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1245482,"byte_end":1245491,"line_start":1312,"line_end":1312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1246916,"byte_end":1246927,"line_start":1352,"line_end":1352,"column_start":12,"column_end":23},"name":"mul_sub_ref","qualname":"<Complex>::mul_sub_ref","value":"fn <'a> (&'a self, mul: &'a Self, sub: &'a Self) -> SubMulFromIncomplete<'a>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies and subtracts in one fused operation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1246895,"byte_end":1246904,"line_start":1351,"line_end":1351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1247926,"byte_end":1247930,"line_start":1380,"line_end":1380,"column_start":12,"column_end":16},"name":"proj","qualname":"<Complex>::proj","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes a projection onto the Riemann sphere, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1247905,"byte_end":1247914,"line_start":1379,"line_end":1379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1248871,"byte_end":1248879,"line_start":1409,"line_end":1409,"column_start":12,"column_end":20},"name":"proj_mut","qualname":"<Complex>::proj_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes a projection onto the Riemann sphere, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1248850,"byte_end":1248859,"line_start":1408,"line_end":1408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1250359,"byte_end":1250367,"line_start":1446,"line_end":1446,"column_start":12,"column_end":20},"name":"proj_ref","qualname":"<Complex>::proj_ref","value":"fn (&self) -> ProjIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the projection onto the Riemann sphere.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1250338,"byte_end":1250347,"line_start":1445,"line_end":1445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1250782,"byte_end":1250788,"line_start":1462,"line_end":1462,"column_start":12,"column_end":18},"name":"square","qualname":"<Complex>::square","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the square, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1250761,"byte_end":1250770,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1251190,"byte_end":1251200,"line_start":1479,"line_end":1479,"column_start":12,"column_end":22},"name":"square_mut","qualname":"<Complex>::square_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1251169,"byte_end":1251178,"line_start":1478,"line_end":1478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1251815,"byte_end":1251827,"line_start":1498,"line_end":1498,"column_start":12,"column_end":24},"name":"square_round","qualname":"<Complex>::square_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the square, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1251794,"byte_end":1251803,"line_start":1497,"line_end":1497,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1252999,"byte_end":1253009,"line_start":1529,"line_end":1529,"column_start":12,"column_end":22},"name":"square_ref","qualname":"<Complex>::square_ref","value":"fn (&self) -> SquareIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1252978,"byte_end":1252987,"line_start":1528,"line_end":1528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1253427,"byte_end":1253431,"line_start":1545,"line_end":1545,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Complex>::sqrt","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1253406,"byte_end":1253415,"line_start":1544,"line_end":1544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1253834,"byte_end":1253842,"line_start":1562,"line_end":1562,"column_start":12,"column_end":20},"name":"sqrt_mut","qualname":"<Complex>::sqrt_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1253813,"byte_end":1253822,"line_start":1561,"line_end":1561,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1254488,"byte_end":1254498,"line_start":1582,"line_end":1582,"column_start":12,"column_end":22},"name":"sqrt_round","qualname":"<Complex>::sqrt_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1254467,"byte_end":1254476,"line_start":1581,"line_end":1581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1255696,"byte_end":1255704,"line_start":1613,"line_end":1613,"column_start":12,"column_end":20},"name":"sqrt_ref","qualname":"<Complex>::sqrt_ref","value":"fn (&self) -> SqrtIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the square root.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1255675,"byte_end":1255684,"line_start":1612,"line_end":1612,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1256058,"byte_end":1256062,"line_start":1628,"line_end":1628,"column_start":12,"column_end":16},"name":"conj","qualname":"<Complex>::conj","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex conjugate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1256037,"byte_end":1256046,"line_start":1627,"line_end":1627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1256395,"byte_end":1256403,"line_start":1644,"line_end":1644,"column_start":12,"column_end":20},"name":"conj_mut","qualname":"<Complex>::conj_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex conjugate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1256374,"byte_end":1256383,"line_start":1643,"line_end":1643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1257249,"byte_end":1257257,"line_start":1669,"line_end":1669,"column_start":12,"column_end":20},"name":"conj_ref","qualname":"<Complex>::conj_ref","value":"fn (&self) -> ConjIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex conjugate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1257228,"byte_end":1257237,"line_start":1668,"line_end":1668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1257725,"byte_end":1257728,"line_start":1687,"line_end":1687,"column_start":12,"column_end":15},"name":"abs","qualname":"<Complex>::abs","value":"fn (mut self) -> Complex","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1257704,"byte_end":1257713,"line_start":1686,"line_end":1686,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1258184,"byte_end":1258191,"line_start":1706,"line_end":1706,"column_start":12,"column_end":19},"name":"abs_mut","qualname":"<Complex>::abs_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1258163,"byte_end":1258172,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1258904,"byte_end":1258913,"line_start":1729,"line_end":1729,"column_start":12,"column_end":21},"name":"abs_round","qualname":"<Complex>::abs_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1258883,"byte_end":1258892,"line_start":1728,"line_end":1728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1260125,"byte_end":1260132,"line_start":1760,"line_end":1760,"column_start":12,"column_end":19},"name":"abs_ref","qualname":"<Complex>::abs_ref","value":"fn (&self) -> AbsIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1260104,"byte_end":1260113,"line_start":1759,"line_end":1759,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1260750,"byte_end":1260753,"line_start":1784,"line_end":1784,"column_start":12,"column_end":15},"name":"arg","qualname":"<Complex>::arg","value":"fn (mut self) -> Complex","parent":null,"children":[],"decl_id":null,"docs":" Computes the argument, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1260729,"byte_end":1260738,"line_start":1783,"line_end":1783,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1261220,"byte_end":1261227,"line_start":1803,"line_end":1803,"column_start":12,"column_end":19},"name":"arg_mut","qualname":"<Complex>::arg_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the argument, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1261199,"byte_end":1261208,"line_start":1802,"line_end":1802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1261955,"byte_end":1261964,"line_start":1826,"line_end":1826,"column_start":12,"column_end":21},"name":"arg_round","qualname":"<Complex>::arg_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the argument, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1261934,"byte_end":1261943,"line_start":1825,"line_end":1825,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1263753,"byte_end":1263760,"line_start":1874,"line_end":1874,"column_start":12,"column_end":19},"name":"arg_ref","qualname":"<Complex>::arg_ref","value":"fn (&self) -> ArgIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the argument.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1263732,"byte_end":1263741,"line_start":1873,"line_end":1873,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1264322,"byte_end":1264327,"line_start":1894,"line_end":1894,"column_start":12,"column_end":17},"name":"mul_i","qualname":"<Complex>::mul_i","value":"fn (mut self, negative: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the complex number by ±<i>i</i>, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1264301,"byte_end":1264310,"line_start":1893,"line_end":1893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1264869,"byte_end":1264878,"line_start":1915,"line_end":1915,"column_start":12,"column_end":21},"name":"mul_i_mut","qualname":"<Complex>::mul_i_mut","value":"fn (&mut self, negative: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the complex number by ±<i>i</i>, rounding to\n the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1264848,"byte_end":1264857,"line_start":1914,"line_end":1914,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1265698,"byte_end":1265709,"line_start":1938,"line_end":1938,"column_start":12,"column_end":23},"name":"mul_i_round","qualname":"<Complex>::mul_i_round","value":"fn (&mut self, negative: bool, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the complex number by ±<i>i</i>, applying the\n specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1265677,"byte_end":1265686,"line_start":1937,"line_end":1937,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1266627,"byte_end":1266636,"line_start":1963,"line_end":1963,"column_start":12,"column_end":21},"name":"mul_i_ref","qualname":"<Complex>::mul_i_ref","value":"fn (&self, negative: bool) -> MulIIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the complex number by ±<i>i</i>.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1266606,"byte_end":1266615,"line_start":1962,"line_end":1962,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1267104,"byte_end":1267109,"line_start":1982,"line_end":1982,"column_start":12,"column_end":17},"name":"recip","qualname":"<Complex>::recip","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1267083,"byte_end":1267092,"line_start":1981,"line_end":1981,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1267506,"byte_end":1267515,"line_start":1999,"line_end":1999,"column_start":12,"column_end":21},"name":"recip_mut","qualname":"<Complex>::recip_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1267485,"byte_end":1267494,"line_start":1998,"line_end":1998,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1268199,"byte_end":1268210,"line_start":2019,"line_end":2019,"column_start":12,"column_end":23},"name":"recip_round","qualname":"<Complex>::recip_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1268178,"byte_end":1268187,"line_start":2018,"line_end":2018,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1269111,"byte_end":1269120,"line_start":2045,"line_end":2045,"column_start":12,"column_end":21},"name":"recip_ref","qualname":"<Complex>::recip_ref","value":"fn (&self) -> RecipIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the reciprocal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1269090,"byte_end":1269099,"line_start":2044,"line_end":2044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1269528,"byte_end":1269532,"line_start":2061,"line_end":2061,"column_start":12,"column_end":16},"name":"norm","qualname":"<Complex>::norm","value":"fn (mut self) -> Complex","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm, that is the square of the absolute value,\n rounding it to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1269507,"byte_end":1269516,"line_start":2060,"line_end":2060,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1270028,"byte_end":1270036,"line_start":2081,"line_end":2081,"column_start":12,"column_end":20},"name":"norm_mut","qualname":"<Complex>::norm_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm, that is the square of the absolute value,\n rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1270007,"byte_end":1270016,"line_start":2080,"line_end":2080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1270753,"byte_end":1270763,"line_start":2104,"line_end":2104,"column_start":12,"column_end":22},"name":"norm_round","qualname":"<Complex>::norm_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm, that is the square of the absolute value,\n applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1270732,"byte_end":1270741,"line_start":2103,"line_end":2103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1272084,"byte_end":1272092,"line_start":2136,"line_end":2136,"column_start":12,"column_end":20},"name":"norm_ref","qualname":"<Complex>::norm_ref","value":"fn (&self) -> NormIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm, that is the square of the absolute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1272063,"byte_end":1272072,"line_start":2135,"line_end":2135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1272551,"byte_end":1272553,"line_start":2152,"line_end":2152,"column_start":12,"column_end":14},"name":"ln","qualname":"<Complex>::ln","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1272530,"byte_end":1272539,"line_start":2151,"line_end":2151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1273003,"byte_end":1273009,"line_start":2169,"line_end":2169,"column_start":12,"column_end":18},"name":"ln_mut","qualname":"<Complex>::ln_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1272982,"byte_end":1272991,"line_start":2168,"line_end":2168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1273709,"byte_end":1273717,"line_start":2190,"line_end":2190,"column_start":12,"column_end":20},"name":"ln_round","qualname":"<Complex>::ln_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1273688,"byte_end":1273697,"line_start":2189,"line_end":2189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1274666,"byte_end":1274672,"line_start":2216,"line_end":2216,"column_start":12,"column_end":18},"name":"ln_ref","qualname":"<Complex>::ln_ref","value":"fn (&self) -> LnIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the natural logarithm;","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1274645,"byte_end":1274654,"line_start":2215,"line_end":2215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1275139,"byte_end":1275144,"line_start":2232,"line_end":2232,"column_start":12,"column_end":17},"name":"log10","qualname":"<Complex>::log10","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1275118,"byte_end":1275127,"line_start":2231,"line_end":2231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1275603,"byte_end":1275612,"line_start":2249,"line_end":2249,"column_start":12,"column_end":21},"name":"log10_mut","qualname":"<Complex>::log10_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1275582,"byte_end":1275591,"line_start":2248,"line_end":2248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1276327,"byte_end":1276338,"line_start":2270,"line_end":2270,"column_start":12,"column_end":23},"name":"log10_round","qualname":"<Complex>::log10_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1276306,"byte_end":1276315,"line_start":2269,"line_end":2269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1277301,"byte_end":1277310,"line_start":2296,"line_end":2296,"column_start":12,"column_end":21},"name":"log10_ref","qualname":"<Complex>::log10_ref","value":"fn (&self) -> Log10Incomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the logarithm to base 10.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1277280,"byte_end":1277289,"line_start":2295,"line_end":2295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1278441,"byte_end":1278454,"line_start":2326,"line_end":2326,"column_start":12,"column_end":25},"name":"root_of_unity","qualname":"<Complex>::root_of_unity","value":"fn (n: u32, k: u32) -> RootOfUnityIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a root of unity, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1278420,"byte_end":1278429,"line_start":2325,"line_end":2325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1278920,"byte_end":1278923,"line_start":2342,"line_end":2342,"column_start":12,"column_end":15},"name":"exp","qualname":"<Complex>::exp","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1278899,"byte_end":1278908,"line_start":2341,"line_end":2341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1279370,"byte_end":1279377,"line_start":2359,"line_end":2359,"column_start":12,"column_end":19},"name":"exp_mut","qualname":"<Complex>::exp_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1279349,"byte_end":1279358,"line_start":2358,"line_end":2358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1280064,"byte_end":1280073,"line_start":2380,"line_end":2380,"column_start":12,"column_end":21},"name":"exp_round","qualname":"<Complex>::exp_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1280043,"byte_end":1280052,"line_start":2379,"line_end":2379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1281020,"byte_end":1281027,"line_start":2406,"line_end":2406,"column_start":12,"column_end":19},"name":"exp_ref","qualname":"<Complex>::exp_ref","value":"fn (&self) -> ExpIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the exponential.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1280999,"byte_end":1281008,"line_start":2405,"line_end":2405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1281468,"byte_end":1281471,"line_start":2422,"line_end":2422,"column_start":12,"column_end":15},"name":"sin","qualname":"<Complex>::sin","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1281447,"byte_end":1281456,"line_start":2421,"line_end":2421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1281904,"byte_end":1281911,"line_start":2439,"line_end":2439,"column_start":12,"column_end":19},"name":"sin_mut","qualname":"<Complex>::sin_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1281883,"byte_end":1281892,"line_start":2438,"line_end":2438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1282562,"byte_end":1282571,"line_start":2459,"line_end":2459,"column_start":12,"column_end":21},"name":"sin_round","qualname":"<Complex>::sin_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1282541,"byte_end":1282550,"line_start":2458,"line_end":2458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1283504,"byte_end":1283511,"line_start":2485,"line_end":2485,"column_start":12,"column_end":19},"name":"sin_ref","qualname":"<Complex>::sin_ref","value":"fn (&self) -> SinIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1283483,"byte_end":1283492,"line_start":2484,"line_end":2484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1283955,"byte_end":1283958,"line_start":2501,"line_end":2501,"column_start":12,"column_end":15},"name":"cos","qualname":"<Complex>::cos","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1283934,"byte_end":1283943,"line_start":2500,"line_end":2500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1284394,"byte_end":1284401,"line_start":2518,"line_end":2518,"column_start":12,"column_end":19},"name":"cos_mut","qualname":"<Complex>::cos_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1284373,"byte_end":1284382,"line_start":2517,"line_end":2517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1285054,"byte_end":1285063,"line_start":2538,"line_end":2538,"column_start":12,"column_end":21},"name":"cos_round","qualname":"<Complex>::cos_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1285033,"byte_end":1285042,"line_start":2537,"line_end":2537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1285999,"byte_end":1286006,"line_start":2564,"line_end":2564,"column_start":12,"column_end":19},"name":"cos_ref","qualname":"<Complex>::cos_ref","value":"fn (&self) -> CosIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1285978,"byte_end":1285987,"line_start":2563,"line_end":2563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1286807,"byte_end":1286814,"line_start":2588,"line_end":2588,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<Complex>::sin_cos","value":"fn (mut self, mut cos: Self) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine of `self`, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1286786,"byte_end":1286795,"line_start":2587,"line_end":2587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1287709,"byte_end":1287720,"line_start":2614,"line_end":2614,"column_start":12,"column_end":23},"name":"sin_cos_mut","qualname":"<Complex>::sin_cos_mut","value":"fn (&mut self, cos: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine of `self`, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1287688,"byte_end":1287697,"line_start":2613,"line_end":2613,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1288906,"byte_end":1288919,"line_start":2646,"line_end":2646,"column_start":12,"column_end":25},"name":"sin_cos_round","qualname":"<Complex>::sin_cos_round","value":"fn (&mut self, cos: &mut Self, round: Round2) -> (Ordering2, Ordering2)","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine of `self`, applying the\n specified rounding methods.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1288885,"byte_end":1288894,"line_start":2645,"line_end":2645,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1291357,"byte_end":1291368,"line_start":2700,"line_end":2700,"column_start":12,"column_end":23},"name":"sin_cos_ref","qualname":"<Complex>::sin_cos_ref","value":"fn (&self) -> SinCosIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the sine and cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1291336,"byte_end":1291345,"line_start":2699,"line_end":2699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1291818,"byte_end":1291821,"line_start":2716,"line_end":2716,"column_start":12,"column_end":15},"name":"tan","qualname":"<Complex>::tan","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1291797,"byte_end":1291806,"line_start":2715,"line_end":2715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1292257,"byte_end":1292264,"line_start":2733,"line_end":2733,"column_start":12,"column_end":19},"name":"tan_mut","qualname":"<Complex>::tan_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1292236,"byte_end":1292245,"line_start":2732,"line_end":2732,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1292929,"byte_end":1292938,"line_start":2753,"line_end":2753,"column_start":12,"column_end":21},"name":"tan_round","qualname":"<Complex>::tan_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent, applying the specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1292908,"byte_end":1292917,"line_start":2752,"line_end":2752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1293874,"byte_end":1293881,"line_start":2779,"line_end":2779,"column_start":12,"column_end":19},"name":"tan_ref","qualname":"<Complex>::tan_ref","value":"fn (&self) -> TanIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1293853,"byte_end":1293862,"line_start":2778,"line_end":2778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1294336,"byte_end":1294340,"line_start":2795,"line_end":2795,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Complex>::sinh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1294315,"byte_end":1294324,"line_start":2794,"line_end":2794,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1294786,"byte_end":1294794,"line_start":2812,"line_end":2812,"column_start":12,"column_end":20},"name":"sinh_mut","qualname":"<Complex>::sinh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1294765,"byte_end":1294774,"line_start":2811,"line_end":2811,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1295467,"byte_end":1295477,"line_start":2833,"line_end":2833,"column_start":12,"column_end":22},"name":"sinh_round","qualname":"<Complex>::sinh_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1295446,"byte_end":1295455,"line_start":2832,"line_end":2832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1296425,"byte_end":1296433,"line_start":2859,"line_end":2859,"column_start":12,"column_end":20},"name":"sinh_ref","qualname":"<Complex>::sinh_ref","value":"fn (&self) -> SinhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1296404,"byte_end":1296413,"line_start":2858,"line_end":2858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1296892,"byte_end":1296896,"line_start":2875,"line_end":2875,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Complex>::cosh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1296871,"byte_end":1296880,"line_start":2874,"line_end":2874,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1297344,"byte_end":1297352,"line_start":2892,"line_end":2892,"column_start":12,"column_end":20},"name":"cosh_mut","qualname":"<Complex>::cosh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1297323,"byte_end":1297332,"line_start":2891,"line_end":2891,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1298024,"byte_end":1298034,"line_start":2913,"line_end":2913,"column_start":12,"column_end":22},"name":"cosh_round","qualname":"<Complex>::cosh_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1298003,"byte_end":1298012,"line_start":2912,"line_end":2912,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1298984,"byte_end":1298992,"line_start":2939,"line_end":2939,"column_start":12,"column_end":20},"name":"cosh_ref","qualname":"<Complex>::cosh_ref","value":"fn (&self) -> CoshIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1298963,"byte_end":1298972,"line_start":2938,"line_end":2938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1299452,"byte_end":1299456,"line_start":2955,"line_end":2955,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Complex>::tanh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1299431,"byte_end":1299440,"line_start":2954,"line_end":2954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1299905,"byte_end":1299913,"line_start":2972,"line_end":2972,"column_start":12,"column_end":20},"name":"tanh_mut","qualname":"<Complex>::tanh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1299884,"byte_end":1299893,"line_start":2971,"line_end":2971,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1300601,"byte_end":1300611,"line_start":2993,"line_end":2993,"column_start":12,"column_end":22},"name":"tanh_round","qualname":"<Complex>::tanh_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1300580,"byte_end":1300589,"line_start":2992,"line_end":2992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1301562,"byte_end":1301570,"line_start":3019,"line_end":3019,"column_start":12,"column_end":20},"name":"tanh_ref","qualname":"<Complex>::tanh_ref","value":"fn (&self) -> TanhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the hyperbolic tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1301541,"byte_end":1301550,"line_start":3018,"line_end":3018,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1302024,"byte_end":1302028,"line_start":3035,"line_end":3035,"column_start":12,"column_end":16},"name":"asin","qualname":"<Complex>::asin","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1302003,"byte_end":1302012,"line_start":3034,"line_end":3034,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1302471,"byte_end":1302479,"line_start":3052,"line_end":3052,"column_start":12,"column_end":20},"name":"asin_mut","qualname":"<Complex>::asin_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1302450,"byte_end":1302459,"line_start":3051,"line_end":3051,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1303147,"byte_end":1303157,"line_start":3073,"line_end":3073,"column_start":12,"column_end":22},"name":"asin_round","qualname":"<Complex>::asin_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse sine, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1303126,"byte_end":1303135,"line_start":3072,"line_end":3072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1304102,"byte_end":1304110,"line_start":3099,"line_end":3099,"column_start":12,"column_end":20},"name":"asin_ref","qualname":"<Complex>::asin_ref","value":"fn (&self) -> AsinIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1304081,"byte_end":1304090,"line_start":3098,"line_end":3098,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1304567,"byte_end":1304571,"line_start":3115,"line_end":3115,"column_start":12,"column_end":16},"name":"acos","qualname":"<Complex>::acos","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1304546,"byte_end":1304555,"line_start":3114,"line_end":3114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1305017,"byte_end":1305025,"line_start":3132,"line_end":3132,"column_start":12,"column_end":20},"name":"acos_mut","qualname":"<Complex>::acos_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse cosine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1304996,"byte_end":1305005,"line_start":3131,"line_end":3131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1305698,"byte_end":1305708,"line_start":3153,"line_end":3153,"column_start":12,"column_end":22},"name":"acos_round","qualname":"<Complex>::acos_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse cosine, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1305677,"byte_end":1305686,"line_start":3152,"line_end":3152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1306656,"byte_end":1306664,"line_start":3179,"line_end":3179,"column_start":12,"column_end":20},"name":"acos_ref","qualname":"<Complex>::acos_ref","value":"fn (&self) -> AcosIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1306635,"byte_end":1306644,"line_start":3178,"line_end":3178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1307121,"byte_end":1307125,"line_start":3195,"line_end":3195,"column_start":12,"column_end":16},"name":"atan","qualname":"<Complex>::atan","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1307100,"byte_end":1307109,"line_start":3194,"line_end":3194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1307571,"byte_end":1307579,"line_start":3212,"line_end":3212,"column_start":12,"column_end":20},"name":"atan_mut","qualname":"<Complex>::atan_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse tangent, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1307550,"byte_end":1307559,"line_start":3211,"line_end":3211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1308253,"byte_end":1308263,"line_start":3233,"line_end":3233,"column_start":12,"column_end":22},"name":"atan_round","qualname":"<Complex>::atan_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse tangent, applying the specified rounding\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1308232,"byte_end":1308241,"line_start":3232,"line_end":3232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1309211,"byte_end":1309219,"line_start":3259,"line_end":3259,"column_start":12,"column_end":20},"name":"atan_ref","qualname":"<Complex>::atan_ref","value":"fn (&self) -> AtanIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1309190,"byte_end":1309199,"line_start":3258,"line_end":3258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1309687,"byte_end":1309692,"line_start":3275,"line_end":3275,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Complex>::asinh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1309666,"byte_end":1309675,"line_start":3274,"line_end":3274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1310148,"byte_end":1310157,"line_start":3292,"line_end":3292,"column_start":12,"column_end":21},"name":"asinh_mut","qualname":"<Complex>::asinh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic sine, rounding to the nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1310127,"byte_end":1310136,"line_start":3291,"line_end":3291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1310840,"byte_end":1310851,"line_start":3313,"line_end":3313,"column_start":12,"column_end":23},"name":"asinh_round","qualname":"<Complex>::asinh_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic sine, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1310819,"byte_end":1310828,"line_start":3312,"line_end":3312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1311810,"byte_end":1311819,"line_start":3339,"line_end":3339,"column_start":12,"column_end":21},"name":"asinh_ref","qualname":"<Complex>::asinh_ref","value":"fn (&self) -> AsinhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperboic sine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1311789,"byte_end":1311798,"line_start":3338,"line_end":3338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1312299,"byte_end":1312304,"line_start":3356,"line_end":3356,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Complex>::acosh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1312278,"byte_end":1312287,"line_start":3355,"line_end":3355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1312770,"byte_end":1312779,"line_start":3374,"line_end":3374,"column_start":12,"column_end":21},"name":"acosh_mut","qualname":"<Complex>::acosh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1312749,"byte_end":1312758,"line_start":3373,"line_end":3373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1313459,"byte_end":1313470,"line_start":3395,"line_end":3395,"column_start":12,"column_end":23},"name":"acosh_round","qualname":"<Complex>::acosh_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine, applying the specified\n rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1313438,"byte_end":1313447,"line_start":3394,"line_end":3394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1314432,"byte_end":1314441,"line_start":3421,"line_end":3421,"column_start":12,"column_end":21},"name":"acosh_ref","qualname":"<Complex>::acosh_ref","value":"fn (&self) -> AcoshIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic cosine.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1314411,"byte_end":1314420,"line_start":3420,"line_end":3420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1314922,"byte_end":1314927,"line_start":3438,"line_end":3438,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Complex>::atanh","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1314901,"byte_end":1314910,"line_start":3437,"line_end":3437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1315394,"byte_end":1315403,"line_start":3456,"line_end":3456,"column_start":12,"column_end":21},"name":"atanh_mut","qualname":"<Complex>::atanh_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent, rounding to the\n nearest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1315373,"byte_end":1315382,"line_start":3455,"line_end":3455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1316090,"byte_end":1316101,"line_start":3477,"line_end":3477,"column_start":12,"column_end":23},"name":"atanh_round","qualname":"<Complex>::atanh_round","value":"fn (&mut self, round: Round2) -> Ordering2","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent, applying the\n specified rounding method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1316069,"byte_end":1316078,"line_start":3476,"line_end":3476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1317064,"byte_end":1317073,"line_start":3503,"line_end":3503,"column_start":12,"column_end":21},"name":"atanh_ref","qualname":"<Complex>::atanh_ref","value":"fn (&self) -> AtanhIncomplete<'_>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse hyperbolic tangent.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1317043,"byte_end":1317052,"line_start":3502,"line_end":3502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1319213,"byte_end":1319224,"line_start":3551,"line_end":3551,"column_start":12,"column_end":23},"name":"random_bits","qualname":"<Complex>::random_bits","value":"fn (rng: &mut dyn MutRandState) -> RandomBitsIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a random complex number with both the real and\n imaginary parts in the range 0 ≤ <i>x</i> < 1.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1317160,"byte_end":1317184,"line_start":3507,"line_end":3507,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1319192,"byte_end":1319201,"line_start":3550,"line_end":3550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1321759,"byte_end":1321770,"line_start":3613,"line_end":3613,"column_start":12,"column_end":23},"name":"random_cont","qualname":"<Complex>::random_cont","value":"fn (rng: &mut dyn MutRandState) -> RandomContIncomplete","parent":null,"children":[],"decl_id":null,"docs":" Generates a random complex number with both the real and\n imaginary parts in the continous range 0 ≤ <i>x</i> < 1, and\n rounds to the nearest.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1319327,"byte_end":1319351,"line_start":3555,"line_end":3555,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1321738,"byte_end":1321747,"line_start":3612,"line_end":3612,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":32812},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1321899,"byte_end":1321912,"line_start":3619,"line_end":3619,"column_start":12,"column_end":25},"name":"SumIncomplete","qualname":"::complex::big::SumIncomplete","value":"SumIncomplete {  }","parent":null,"children":[{"krate":0,"index":32815}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32852},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1324971,"byte_end":1324984,"line_start":3713,"line_end":3713,"column_start":12,"column_end":25},"name":"DotIncomplete","qualname":"::complex::big::DotIncomplete","value":"DotIncomplete {  }","parent":null,"children":[{"krate":0,"index":32855}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32864},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1328420,"byte_end":1328434,"line_start":3827,"line_end":3827,"column_start":44,"column_end":58},"name":"ProjIncomplete","qualname":"::complex::big::ProjIncomplete","value":"ProjIncomplete {  }","parent":null,"children":[{"krate":0,"index":32866}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32874},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1328482,"byte_end":1328498,"line_start":3828,"line_end":3828,"column_start":43,"column_end":59},"name":"SquareIncomplete","qualname":"::complex::big::SquareIncomplete","value":"SquareIncomplete {  }","parent":null,"children":[{"krate":0,"index":32876}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32884},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1328547,"byte_end":1328561,"line_start":3829,"line_end":3829,"column_start":44,"column_end":58},"name":"SqrtIncomplete","qualname":"::complex::big::SqrtIncomplete","value":"SqrtIncomplete {  }","parent":null,"children":[{"krate":0,"index":32886}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32894},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1328610,"byte_end":1328624,"line_start":3830,"line_end":3830,"column_start":44,"column_end":58},"name":"ConjIncomplete","qualname":"::complex::big::ConjIncomplete","value":"ConjIncomplete {  }","parent":null,"children":[{"krate":0,"index":32896}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32900},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1328659,"byte_end":1328672,"line_start":3833,"line_end":3833,"column_start":12,"column_end":25},"name":"AbsIncomplete","qualname":"::complex::big::AbsIncomplete","value":"AbsIncomplete {  }","parent":null,"children":[{"krate":0,"index":32902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32906},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329064,"byte_end":1329077,"line_start":3848,"line_end":3848,"column_start":12,"column_end":25},"name":"ArgIncomplete","qualname":"::complex::big::ArgIncomplete","value":"ArgIncomplete {  }","parent":null,"children":[{"krate":0,"index":32908}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32916},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329485,"byte_end":1329499,"line_start":3862,"line_end":3862,"column_start":45,"column_end":59},"name":"MulIIncomplete","qualname":"::complex::big::MulIIncomplete","value":"MulIIncomplete {  }","parent":null,"children":[{"krate":0,"index":32918},{"krate":0,"index":32919}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32927},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329565,"byte_end":1329580,"line_start":3863,"line_end":3863,"column_start":45,"column_end":60},"name":"RecipIncomplete","qualname":"::complex::big::RecipIncomplete","value":"RecipIncomplete {  }","parent":null,"children":[{"krate":0,"index":32929}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32933},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329615,"byte_end":1329629,"line_start":3866,"line_end":3866,"column_start":12,"column_end":26},"name":"NormIncomplete","qualname":"::complex::big::NormIncomplete","value":"NormIncomplete {  }","parent":null,"children":[{"krate":0,"index":32935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32943},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330038,"byte_end":1330050,"line_start":3880,"line_end":3880,"column_start":43,"column_end":55},"name":"LnIncomplete","qualname":"::complex::big::LnIncomplete","value":"LnIncomplete {  }","parent":null,"children":[{"krate":0,"index":32945}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32953},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330100,"byte_end":1330115,"line_start":3881,"line_end":3881,"column_start":45,"column_end":60},"name":"Log10Incomplete","qualname":"::complex::big::Log10Incomplete","value":"Log10Incomplete {  }","parent":null,"children":[{"krate":0,"index":32955}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32963},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330171,"byte_end":1330192,"line_start":3882,"line_end":3882,"column_start":51,"column_end":72},"name":"RootOfUnityIncomplete","qualname":"::complex::big::RootOfUnityIncomplete","value":"RootOfUnityIncomplete {  }","parent":null,"children":[{"krate":0,"index":32964},{"krate":0,"index":32965}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32972},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330256,"byte_end":1330269,"line_start":3883,"line_end":3883,"column_start":43,"column_end":56},"name":"ExpIncomplete","qualname":"::complex::big::ExpIncomplete","value":"ExpIncomplete {  }","parent":null,"children":[{"krate":0,"index":32974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32982},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330317,"byte_end":1330330,"line_start":3884,"line_end":3884,"column_start":43,"column_end":56},"name":"SinIncomplete","qualname":"::complex::big::SinIncomplete","value":"SinIncomplete {  }","parent":null,"children":[{"krate":0,"index":32984}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32992},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330378,"byte_end":1330391,"line_start":3885,"line_end":3885,"column_start":43,"column_end":56},"name":"CosIncomplete","qualname":"::complex::big::CosIncomplete","value":"CosIncomplete {  }","parent":null,"children":[{"krate":0,"index":32994}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33010},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330445,"byte_end":1330461,"line_start":3886,"line_end":3886,"column_start":49,"column_end":65},"name":"SinCosIncomplete","qualname":"::complex::big::SinCosIncomplete","value":"SinCosIncomplete {  }","parent":null,"children":[{"krate":0,"index":33012}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33020},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330509,"byte_end":1330522,"line_start":3887,"line_end":3887,"column_start":43,"column_end":56},"name":"TanIncomplete","qualname":"::complex::big::TanIncomplete","value":"TanIncomplete {  }","parent":null,"children":[{"krate":0,"index":33022}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33030},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330571,"byte_end":1330585,"line_start":3888,"line_end":3888,"column_start":44,"column_end":58},"name":"SinhIncomplete","qualname":"::complex::big::SinhIncomplete","value":"SinhIncomplete {  }","parent":null,"children":[{"krate":0,"index":33032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33040},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330634,"byte_end":1330648,"line_start":3889,"line_end":3889,"column_start":44,"column_end":58},"name":"CoshIncomplete","qualname":"::complex::big::CoshIncomplete","value":"CoshIncomplete {  }","parent":null,"children":[{"krate":0,"index":33042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33050},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330697,"byte_end":1330711,"line_start":3890,"line_end":3890,"column_start":44,"column_end":58},"name":"TanhIncomplete","qualname":"::complex::big::TanhIncomplete","value":"TanhIncomplete {  }","parent":null,"children":[{"krate":0,"index":33052}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33060},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330760,"byte_end":1330774,"line_start":3891,"line_end":3891,"column_start":44,"column_end":58},"name":"AsinIncomplete","qualname":"::complex::big::AsinIncomplete","value":"AsinIncomplete {  }","parent":null,"children":[{"krate":0,"index":33062}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33070},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330823,"byte_end":1330837,"line_start":3892,"line_end":3892,"column_start":44,"column_end":58},"name":"AcosIncomplete","qualname":"::complex::big::AcosIncomplete","value":"AcosIncomplete {  }","parent":null,"children":[{"krate":0,"index":33072}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33080},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330886,"byte_end":1330900,"line_start":3893,"line_end":3893,"column_start":44,"column_end":58},"name":"AtanIncomplete","qualname":"::complex::big::AtanIncomplete","value":"AtanIncomplete {  }","parent":null,"children":[{"krate":0,"index":33082}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33090},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1330950,"byte_end":1330965,"line_start":3894,"line_end":3894,"column_start":45,"column_end":60},"name":"AsinhIncomplete","qualname":"::complex::big::AsinhIncomplete","value":"AsinhIncomplete {  }","parent":null,"children":[{"krate":0,"index":33092}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33100},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331015,"byte_end":1331030,"line_start":3895,"line_end":3895,"column_start":45,"column_end":60},"name":"AcoshIncomplete","qualname":"::complex::big::AcoshIncomplete","value":"AcoshIncomplete {  }","parent":null,"children":[{"krate":0,"index":33102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33110},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331080,"byte_end":1331095,"line_start":3896,"line_end":3896,"column_start":45,"column_end":60},"name":"AtanhIncomplete","qualname":"::complex::big::AtanhIncomplete","value":"AtanhIncomplete {  }","parent":null,"children":[{"krate":0,"index":33112}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3333},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331138,"byte_end":1331158,"line_start":3899,"line_end":3899,"column_start":12,"column_end":32},"name":"RandomBitsIncomplete","qualname":"::complex::big::RandomBitsIncomplete","value":"RandomBitsIncomplete {  }","parent":null,"children":[{"krate":0,"index":3335}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331102,"byte_end":1331126,"line_start":3898,"line_end":3898,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3338},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331515,"byte_end":1331535,"line_start":3913,"line_end":3913,"column_start":12,"column_end":32},"name":"RandomContIncomplete","qualname":"::complex::big::RandomContIncomplete","value":"RandomContIncomplete {  }","parent":null,"children":[{"krate":0,"index":3340}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331479,"byte_end":1331503,"line_start":3912,"line_end":3912,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":33116},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332141,"byte_end":1332154,"line_start":3935,"line_end":3935,"column_start":12,"column_end":25},"name":"BorrowComplex","qualname":"::complex::big::BorrowComplex","value":"BorrowComplex {  }","parent":null,"children":[{"krate":0,"index":33118},{"krate":0,"index":33119}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332109,"byte_end":1332129,"line_start":3934,"line_end":3934,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":33135},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1335391,"byte_end":1335395,"line_start":4054,"line_end":4054,"column_start":5,"column_end":9},"name":"Real","qualname":"::complex::big::ParseIncomplete::Real","value":"ParseIncomplete::Real(FloatParseIncomplete)","parent":{"krate":0,"index":33134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":33138},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1335423,"byte_end":1335430,"line_start":4055,"line_end":4055,"column_start":5,"column_end":12},"name":"Complex","qualname":"::complex::big::ParseIncomplete::Complex","value":"ParseIncomplete::Complex(FloatParseIncomplete, FloatParseIncomplete)","parent":{"krate":0,"index":33134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":33134},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1335369,"byte_end":1335384,"line_start":4053,"line_end":4053,"column_start":10,"column_end":25},"name":"ParseIncomplete","qualname":"::complex::big::ParseIncomplete","value":"ParseIncomplete::{Real, Complex}","parent":null,"children":[{"krate":0,"index":33135},{"krate":0,"index":33138}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33144},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1339088,"byte_end":1339105,"line_start":4162,"line_end":4162,"column_start":12,"column_end":29},"name":"ParseComplexError","qualname":"::complex::big::ParseComplexError","value":"ParseComplexError {  }","parent":null,"children":[{"krate":0,"index":33145}],"decl_id":null,"docs":"An error which can be returned when parsing a [`Complex`] number.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34540},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1350991,"byte_end":1351001,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"OrdComplex","qualname":"::complex::ord::OrdComplex","value":"OrdComplex {  }","parent":null,"children":[{"krate":0,"index":34541}],"decl_id":null,"docs":"A complex number that supports total ordering and hashing.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1350959,"byte_end":1350979,"line_start":55,"line_end":55,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1351537,"byte_end":1351547,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"as_complex","qualname":"<OrdComplex>::as_complex","value":"fn (&self) -> &Complex","parent":null,"children":[],"decl_id":null,"docs":" Extracts the underlying [`Complex`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1351516,"byte_end":1351525,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352084,"byte_end":1352098,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"as_complex_mut","qualname":"<OrdComplex>::as_complex_mut","value":"fn (&mut self) -> &mut Complex","parent":null,"children":[],"decl_id":null,"docs":" Extracts the underlying [`Complex`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352063,"byte_end":1352072,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3426},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1358824,"byte_end":1358836,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"SmallComplex","qualname":"::complex::small::SmallComplex","value":"SmallComplex {  }","parent":null,"children":[{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429}],"decl_id":null,"docs":"A small complex number that does not require any memory allocation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1360339,"byte_end":1360365,"line_start":153,"line_end":153,"column_start":19,"column_end":45},"name":"as_nonreallocating_complex","qualname":"<SmallComplex>::as_nonreallocating_complex","value":"fn (&mut self) -> &mut Complex","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a [`Complex`] number for simple\n operations that do not need to change the precision of the\n real or imaginary part.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1360311,"byte_end":1360320,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3557},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/mod.rs","byte_start":1158873,"byte_end":1158877,"line_start":58,"line_end":58,"column_start":11,"column_end":15},"name":"Prec","qualname":"::complex::Prec","value":"Prec","parent":null,"children":[{"krate":0,"index":3558}],"decl_id":null,"docs":"The `Prec` trait is used to specify the precision of the real and\nimaginary parts of a [`Complex`] number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/mod.rs","byte_start":1159144,"byte_end":1159148,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"prec","qualname":"::complex::Prec::prec","value":"fn (self) -> (u32, u32)","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":" Returns the precision for the real and imaginary parts.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rand","qualname":"::rand","value":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","parent":null,"children":[{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":3574},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":34639},{"krate":0,"index":34643},{"krate":0,"index":3585},{"krate":0,"index":3587},{"krate":0,"index":3589},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":34646},{"krate":0,"index":34650},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3623},{"krate":0,"index":3628},{"krate":0,"index":34653},{"krate":0,"index":34655},{"krate":0,"index":34657},{"krate":0,"index":34659},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3677},{"krate":0,"index":3678}],"decl_id":null,"docs":"Random number generation.","sig":null,"attributes":[{"value":"cfg(feature = \"rand\")","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17385,"byte_end":17409,"line_start":471,"line_end":471,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":34639},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1378485,"byte_end":1378494,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"RandState","qualname":"::rand::RandState","value":"RandState {  }","parent":null,"children":[{"krate":0,"index":34641},{"krate":0,"index":34642}],"decl_id":null,"docs":"The state of a random number generator.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1378453,"byte_end":1378473,"line_start":74,"line_end":74,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1380002,"byte_end":1380005,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<RandState>::new","value":"fn () -> RandState<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new random generator with a compromise between speed\n and randomness.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379981,"byte_end":1379990,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1380471,"byte_end":1380491,"line_start":151,"line_end":151,"column_start":12,"column_end":32},"name":"new_mersenne_twister","qualname":"<RandState>::new_mersenne_twister","value":"fn () -> RandState<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a random generator with a Mersenne Twister algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1381578,"byte_end":1381601,"line_start":183,"line_end":183,"column_start":12,"column_end":35},"name":"new_linear_congruential","qualname":"<RandState>::new_linear_congruential","value":"fn (a: &Integer, c: u32, m: u32) -> RandState<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new random generator with a linear congruential\n algorithm <i>X</i> = (<i>a</i> × <i>X</i> + <i>c</i>) mod 2<sup><i>m</i></sup>.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1383031,"byte_end":1383059,"line_start":219,"line_end":219,"column_start":12,"column_end":40},"name":"new_linear_congruential_size","qualname":"<RandState>::new_linear_congruential_size","value":"fn (size: u32) -> Option<RandState<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new random generator with a linear congruential\n algorithm like the [`new_linear_congruential`] method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1384531,"byte_end":1384541,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"new_custom","qualname":"<RandState>::new_custom","value":"fn (custom: &mut dyn RandGen) -> RandState<'_>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new custom random generator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1386164,"byte_end":1386180,"line_start":315,"line_end":315,"column_start":12,"column_end":28},"name":"new_custom_boxed","qualname":"<RandState>::new_custom_boxed","value":"fn (custom: Box<dyn RandGen>) -> RandState<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new custom random generator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1387929,"byte_end":1387937,"line_start":365,"line_end":365,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<RandState>::from_raw","value":"fn (raw: randstate_t) -> RandState<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a random generator from an initialized\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1387901,"byte_end":1387910,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1389334,"byte_end":1389342,"line_start":406,"line_end":406,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<RandState>::into_raw","value":"fn (self) -> randstate_t","parent":null,"children":[],"decl_id":null,"docs":" Converts a random generator into a\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1389313,"byte_end":1389322,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1390385,"byte_end":1390391,"line_start":437,"line_end":437,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<RandState>::as_raw","value":"fn (&self) -> *const randstate_t","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the inner\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1390364,"byte_end":1390373,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1391214,"byte_end":1391224,"line_start":464,"line_end":464,"column_start":12,"column_end":22},"name":"as_raw_mut","qualname":"<RandState>::as_raw_mut","value":"fn (&mut self) -> *mut randstate_t","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the inner\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1391193,"byte_end":1391202,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1392666,"byte_end":1392683,"line_start":504,"line_end":504,"column_start":12,"column_end":29},"name":"into_custom_boxed","qualname":"<RandState>::into_custom_boxed","value":"fn (self) -> Result<Box<dyn RandGen>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts a random generator into\n <code>[Box][`Box`]&lt;dyn [RandGen][`RandGen`]&gt;</code>\n if possible.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1392645,"byte_end":1392654,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1393563,"byte_end":1393567,"line_start":533,"line_end":533,"column_start":12,"column_end":16},"name":"seed","qualname":"<RandState>::seed","value":"fn (&mut self, seed: &Integer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Seeds the random generator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1393542,"byte_end":1393551,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1394113,"byte_end":1394117,"line_start":555,"line_end":555,"column_start":12,"column_end":16},"name":"bits","qualname":"<RandState>::bits","value":"fn (&mut self, bits: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number with the specified number of bits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1394092,"byte_end":1394101,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1394940,"byte_end":1394945,"line_start":582,"line_end":582,"column_start":12,"column_end":17},"name":"below","qualname":"<RandState>::below","value":"fn (&mut self, bound: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number below the given boundary value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1394919,"byte_end":1394928,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":34646},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1395897,"byte_end":1395912,"line_start":615,"line_end":615,"column_start":12,"column_end":27},"name":"ThreadRandState","qualname":"::rand::ThreadRandState","value":"ThreadRandState {  }","parent":null,"children":[{"krate":0,"index":34648},{"krate":0,"index":34649}],"decl_id":null,"docs":"The state of a random number generator that is suitable for a single thread only.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1395865,"byte_end":1395885,"line_start":614,"line_end":614,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1398082,"byte_end":1398092,"line_start":684,"line_end":684,"column_start":12,"column_end":22},"name":"new_custom","qualname":"<ThreadRandState>::new_custom","value":"fn (custom: &mut dyn ThreadRandGen) -> ThreadRandState<'_>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new custom random generator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1400014,"byte_end":1400030,"line_start":737,"line_end":737,"column_start":12,"column_end":28},"name":"new_custom_boxed","qualname":"<ThreadRandState>::new_custom_boxed","value":"fn (custom: Box<dyn ThreadRandGen>) -> ThreadRandState<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new custom random generator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1402321,"byte_end":1402329,"line_start":796,"line_end":796,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<ThreadRandState>::from_raw","value":"fn (raw: randstate_t) -> ThreadRandState<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a random generator from an initialized\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1402293,"byte_end":1402302,"line_start":795,"line_end":795,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1404659,"byte_end":1404667,"line_start":855,"line_end":855,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ThreadRandState>::into_raw","value":"fn (self) -> randstate_t","parent":null,"children":[],"decl_id":null,"docs":" Converts a random generator into a\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1404638,"byte_end":1404647,"line_start":854,"line_end":854,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1406369,"byte_end":1406375,"line_start":899,"line_end":899,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ThreadRandState>::as_raw","value":"fn (&self) -> *const randstate_t","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the inner\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1406348,"byte_end":1406357,"line_start":898,"line_end":898,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1407875,"byte_end":1407885,"line_start":940,"line_end":940,"column_start":12,"column_end":22},"name":"as_raw_mut","qualname":"<ThreadRandState>::as_raw_mut","value":"fn (&mut self) -> *mut randstate_t","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the inner\n [GMP random generator][`randstate_t`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1407854,"byte_end":1407863,"line_start":939,"line_end":939,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1409622,"byte_end":1409639,"line_start":985,"line_end":985,"column_start":12,"column_end":29},"name":"into_custom_boxed","qualname":"<ThreadRandState>::into_custom_boxed","value":"fn (self) -> Result<Box<dyn ThreadRandGen>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts a random generator into\n <code>[Box][`Box`]&lt;dyn [ThreadRandGen][`ThreadRandGen`]&gt;</code>\n if possible.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1409601,"byte_end":1409610,"line_start":984,"line_end":984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1411313,"byte_end":1411317,"line_start":1030,"line_end":1030,"column_start":12,"column_end":16},"name":"seed","qualname":"<ThreadRandState>::seed","value":"fn (&mut self, seed: &Integer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Seeds the random generator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1411292,"byte_end":1411301,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1412524,"byte_end":1412528,"line_start":1067,"line_end":1067,"column_start":12,"column_end":16},"name":"bits","qualname":"<ThreadRandState>::bits","value":"fn (&mut self, bits: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number with the specified number of bits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1412503,"byte_end":1412512,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1413761,"byte_end":1413766,"line_start":1102,"line_end":1102,"column_start":12,"column_end":17},"name":"below","qualname":"<ThreadRandState>::below","value":"fn (&mut self, bound: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Generates a random number below the given boundary value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1413740,"byte_end":1413749,"line_start":1101,"line_end":1101,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3623},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1414915,"byte_end":1414922,"line_start":1145,"line_end":1145,"column_start":11,"column_end":18},"name":"RandGen","qualname":"::rand::RandGen","value":"RandGen: Send + Sync","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627}],"decl_id":null,"docs":"Custom random number generator to be used with [`RandState`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1415770,"byte_end":1415773,"line_start":1170,"line_end":1170,"column_start":8,"column_end":11},"name":"gen","qualname":"::rand::RandGen::gen","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Gets a random 32-bit unsigned integer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1417822,"byte_end":1417830,"line_start":1229,"line_end":1229,"column_start":8,"column_end":16},"name":"gen_bits","qualname":"::rand::RandGen::gen_bits","value":"fn (&mut self, bits: u32) -> u32","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Gets up to 32 random bits.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1419181,"byte_end":1419185,"line_start":1279,"line_end":1279,"column_start":8,"column_end":12},"name":"seed","qualname":"::rand::RandGen::seed","value":"fn (&mut self, seed: &Integer) -> ()","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Seeds the random number generator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1419164,"byte_end":1419173,"line_start":1278,"line_end":1278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1420576,"byte_end":1420587,"line_start":1319,"line_end":1319,"column_start":8,"column_end":19},"name":"boxed_clone","qualname":"::rand::RandGen::boxed_clone","value":"fn (&self) -> Option<Box<dyn RandGen>>","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Optionally clones the random number generator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1420559,"byte_end":1420568,"line_start":1318,"line_end":1318,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3628},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1422378,"byte_end":1422391,"line_start":1382,"line_end":1382,"column_start":11,"column_end":24},"name":"ThreadRandGen","qualname":"::rand::ThreadRandGen","value":"ThreadRandGen","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632}],"decl_id":null,"docs":"Custom random number generator to be used with [`ThreadRandState`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1422637,"byte_end":1422640,"line_start":1390,"line_end":1390,"column_start":8,"column_end":11},"name":"gen","qualname":"::rand::ThreadRandGen::gen","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Gets a random 32-bit unsigned integer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1423287,"byte_end":1423295,"line_start":1407,"line_end":1407,"column_start":8,"column_end":16},"name":"gen_bits","qualname":"::rand::ThreadRandGen::gen_bits","value":"fn (&mut self, bits: u32) -> u32","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Gets up to 32 random bits.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1424157,"byte_end":1424161,"line_start":1433,"line_end":1433,"column_start":8,"column_end":12},"name":"seed","qualname":"::rand::ThreadRandGen::seed","value":"fn (&mut self, seed: &Integer) -> ()","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Seeds the random number generator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1424140,"byte_end":1424149,"line_start":1432,"line_end":1432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1424677,"byte_end":1424688,"line_start":1448,"line_end":1448,"column_start":8,"column_end":19},"name":"boxed_clone","qualname":"::rand::ThreadRandGen::boxed_clone","value":"fn (&self) -> Option<Box<dyn ThreadRandGen>>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Optionally clones the random number generator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1424660,"byte_end":1424669,"line_start":1447,"line_end":1447,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434008,"byte_end":1434020,"line_start":1723,"line_end":1723,"column_start":11,"column_end":23},"name":"MutRandState","qualname":"::rand::MutRandState","value":"MutRandState: SealedMutRandState","parent":null,"children":[],"decl_id":null,"docs":" Used to pass the state of random number generators by mutable\n reference.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434136,"byte_end":1434143,"line_start":1728,"line_end":1728,"column_start":16,"column_end":23},"name":"Private","qualname":"::rand::hide::Private","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434100,"byte_end":1434120,"line_start":1727,"line_end":1727,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434195,"byte_end":1434213,"line_start":1729,"line_end":1729,"column_start":15,"column_end":33},"name":"SealedMutRandState","qualname":"::rand::hide::SealedMutRandState","value":"SealedMutRandState","parent":null,"children":[{"krate":0,"index":3670}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434227,"byte_end":1434234,"line_start":1730,"line_end":1730,"column_start":12,"column_end":19},"name":"private","qualname":"::rand::hide::SealedMutRandState::private","value":"fn (&mut self) -> Private","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/misc.rs","byte_start":209333,"byte_end":209334,"line_start":26,"line_end":26,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233007,"byte_end":233013,"line_start":665,"line_end":665,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233156,"byte_end":233159,"line_start":673,"line_end":673,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233305,"byte_end":233308,"line_start":680,"line_end":680,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233433,"byte_end":233439,"line_start":687,"line_end":687,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233568,"byte_end":233571,"line_start":694,"line_end":694,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":234196,"byte_end":234199,"line_start":715,"line_end":715,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":1642,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":309504,"byte_end":309505,"line_start":407,"line_end":407,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11145},{"krate":0,"index":11146},{"krate":0,"index":11147},{"krate":0,"index":11148},{"krate":0,"index":11149},{"krate":0,"index":11150},{"krate":0,"index":11151},{"krate":0,"index":11152},{"krate":0,"index":11153},{"krate":0,"index":11154},{"krate":0,"index":11155},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":1643,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":311123,"byte_end":311124,"line_start":454,"line_end":454,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11156},{"krate":0,"index":11157},{"krate":0,"index":11158},{"krate":0,"index":11159},{"krate":0,"index":11160},{"krate":0,"index":11161},{"krate":0,"index":11162},{"krate":0,"index":11163},{"krate":0,"index":11164},{"krate":0,"index":11165},{"krate":0,"index":11166},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":1644,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":312734,"byte_end":312741,"line_start":501,"line_end":501,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":1645,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":313005,"byte_end":313012,"line_start":517,"line_end":517,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":1646,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":328249,"byte_end":328256,"line_start":193,"line_end":193,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":1647,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":328846,"byte_end":328853,"line_start":217,"line_end":217,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":939},{"krate":0,"index":944},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":1648,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":498984,"byte_end":498991,"line_start":5457,"line_end":5457,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":1649,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":499392,"byte_end":499399,"line_start":5475,"line_end":5475,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":1650,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":499731,"byte_end":499738,"line_start":5489,"line_end":5489,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":1651,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":499977,"byte_end":499984,"line_start":5501,"line_end":5501,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":1652,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":500338,"byte_end":500345,"line_start":5520,"line_end":5520,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":1653,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":500776,"byte_end":500783,"line_start":5538,"line_end":5538,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":1654,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":501152,"byte_end":501159,"line_start":5552,"line_end":5552,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":1655,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":501416,"byte_end":501423,"line_start":5564,"line_end":5564,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":1656,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":501864,"byte_end":501871,"line_start":5584,"line_end":5584,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":1657,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":502280,"byte_end":502287,"line_start":5602,"line_end":5602,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":1658,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":502629,"byte_end":502636,"line_start":5616,"line_end":5616,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":1659,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":502883,"byte_end":502890,"line_start":5628,"line_end":5628,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":1664,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":504193,"byte_end":504200,"line_start":5675,"line_end":5675,"column_start":66,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":1665,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":504818,"byte_end":504825,"line_start":5693,"line_end":5693,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":1676,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":506145,"byte_end":506152,"line_start":5724,"line_end":5724,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":1677,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":506808,"byte_end":506815,"line_start":5742,"line_end":5742,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":1678,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":507642,"byte_end":507649,"line_start":5768,"line_end":5768,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":1696,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508672,"byte_end":508678,"line_start":5788,"line_end":5788,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":1701,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510288,"byte_end":510295,"line_start":5847,"line_end":5847,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":1702,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510530,"byte_end":510537,"line_start":5855,"line_end":5855,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":1719,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513298,"byte_end":513305,"line_start":5945,"line_end":5945,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":1720,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513565,"byte_end":513572,"line_start":5955,"line_end":5955,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":1721,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513919,"byte_end":513926,"line_start":5971,"line_end":5971,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":1722,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514144,"byte_end":514151,"line_start":5979,"line_end":5979,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":1723,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514452,"byte_end":514465,"line_start":5995,"line_end":5995,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":1724,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514763,"byte_end":514776,"line_start":6005,"line_end":6005,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":1725,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":516263,"byte_end":516270,"line_start":6057,"line_end":6057,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":1727,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":519087,"byte_end":519104,"line_start":6166,"line_end":6166,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":1728,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":519342,"byte_end":519359,"line_start":6176,"line_end":6176,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":1729,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":519444,"byte_end":519461,"line_start":6182,"line_end":6182,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":1744,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524165,"byte_end":524172,"line_start":20,"line_end":20,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1745,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524190,"byte_end":524197,"line_start":22,"line_end":22,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":1746,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524322,"byte_end":524329,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":1747,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524462,"byte_end":524469,"line_start":36,"line_end":36,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":1774,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":527103,"byte_end":527110,"line_start":131,"line_end":131,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":1776,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":527416,"byte_end":527423,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":1830,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":556534,"byte_end":556535,"line_start":723,"line_end":723,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":14375},{"krate":0,"index":14376},{"krate":0,"index":14377},{"krate":0,"index":14378},{"krate":0,"index":14379},{"krate":0,"index":14380},{"krate":0,"index":14381},{"krate":0,"index":14382},{"krate":0,"index":14383},{"krate":0,"index":14384},{"krate":0,"index":14385},{"krate":0,"index":14386},{"krate":0,"index":14387},{"krate":0,"index":14388},{"krate":0,"index":14389},{"krate":0,"index":14390}],"docs":"","sig":null,"attributes":[]},{"id":1831,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":557681,"byte_end":557682,"line_start":745,"line_end":745,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":14391},{"krate":0,"index":14392},{"krate":0,"index":14393},{"krate":0,"index":14394},{"krate":0,"index":14395},{"krate":0,"index":14396},{"krate":0,"index":14397},{"krate":0,"index":14398},{"krate":0,"index":14399},{"krate":0,"index":14400},{"krate":0,"index":14401},{"krate":0,"index":14402},{"krate":0,"index":14403},{"krate":0,"index":14404},{"krate":0,"index":14405},{"krate":0,"index":14406}],"docs":"","sig":null,"attributes":[]},{"id":1832,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":569799,"byte_end":569802,"line_start":88,"line_end":88,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":1833,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570020,"byte_end":570032,"line_start":99,"line_end":99,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1834,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570054,"byte_end":570066,"line_start":101,"line_end":101,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":1835,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570152,"byte_end":570164,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":1836,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":572261,"byte_end":572273,"line_start":180,"line_end":180,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":1863,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":577744,"byte_end":577756,"line_start":374,"line_end":374,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":1864,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":577903,"byte_end":577915,"line_start":381,"line_end":381,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":1865,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":578078,"byte_end":578090,"line_start":390,"line_end":390,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":1866,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":578205,"byte_end":578217,"line_start":397,"line_end":397,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":1867,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":580581,"byte_end":580588,"line_start":31,"line_end":31,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":1868,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":580682,"byte_end":580689,"line_start":38,"line_end":38,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":1869,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581019,"byte_end":581026,"line_start":54,"line_end":54,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":1870,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581149,"byte_end":581156,"line_start":63,"line_end":63,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":1871,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581323,"byte_end":581330,"line_start":71,"line_end":71,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":1872,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581462,"byte_end":581469,"line_start":78,"line_end":78,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":1873,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581597,"byte_end":581604,"line_start":85,"line_end":85,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":1898,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":584557,"byte_end":584564,"line_start":198,"line_end":198,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":1899,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":584756,"byte_end":584763,"line_start":206,"line_end":206,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":1900,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":584888,"byte_end":584895,"line_start":212,"line_end":212,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":1901,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585021,"byte_end":585028,"line_start":218,"line_end":218,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":1902,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585154,"byte_end":585161,"line_start":224,"line_end":224,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":1903,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585290,"byte_end":585297,"line_start":230,"line_end":230,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":1904,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585427,"byte_end":585434,"line_start":236,"line_end":236,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":1905,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585919,"byte_end":585938,"line_start":259,"line_end":259,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":1906,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586038,"byte_end":586057,"line_start":265,"line_end":265,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":1907,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586142,"byte_end":586161,"line_start":271,"line_end":271,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":1908,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586283,"byte_end":586290,"line_start":277,"line_end":277,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1909,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586315,"byte_end":586322,"line_start":278,"line_end":278,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1910,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278509,"byte_end":278514,"line_start":121,"line_end":121,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":2479,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":606199,"byte_end":606200,"line_start":267,"line_end":267,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":17361},{"krate":0,"index":17362},{"krate":0,"index":17363},{"krate":0,"index":17364},{"krate":0,"index":17365},{"krate":0,"index":17366}],"docs":"","sig":null,"attributes":[]},{"id":2480,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":606654,"byte_end":606655,"line_start":279,"line_end":279,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":17367},{"krate":0,"index":17368},{"krate":0,"index":17369},{"krate":0,"index":17370},{"krate":0,"index":17371},{"krate":0,"index":17372}],"docs":"","sig":null,"attributes":[]},{"id":2481,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":607101,"byte_end":607109,"line_start":291,"line_end":291,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":2482,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":607376,"byte_end":607384,"line_start":307,"line_end":307,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":2483,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":618320,"byte_end":618328,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1601},{"krate":0,"index":1606},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":2484,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":691808,"byte_end":691816,"line_start":2418,"line_end":2418,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":2485,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":692217,"byte_end":692225,"line_start":2436,"line_end":2436,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":2486,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":692558,"byte_end":692566,"line_start":2450,"line_end":2450,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":2487,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":692805,"byte_end":692813,"line_start":2462,"line_end":2462,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":2488,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":693169,"byte_end":693177,"line_start":2481,"line_end":2481,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":2489,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":693610,"byte_end":693618,"line_start":2499,"line_end":2499,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":2490,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":693991,"byte_end":693999,"line_start":2513,"line_end":2513,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":2491,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":694258,"byte_end":694266,"line_start":2525,"line_end":2525,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":2492,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":694779,"byte_end":694787,"line_start":2547,"line_end":2547,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":2493,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":695196,"byte_end":695204,"line_start":2565,"line_end":2565,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":2494,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":695547,"byte_end":695555,"line_start":2579,"line_end":2579,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":2495,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":695802,"byte_end":695810,"line_start":2591,"line_end":2591,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":2498,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":697110,"byte_end":697118,"line_start":2638,"line_end":2638,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":2499,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":697736,"byte_end":697744,"line_start":2656,"line_end":2656,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":2512,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":699145,"byte_end":699159,"line_start":2690,"line_end":2690,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":2513,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":699449,"byte_end":699463,"line_start":2700,"line_end":2700,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":2514,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":700478,"byte_end":700486,"line_start":2738,"line_end":2738,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":2516,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":704729,"byte_end":704747,"line_start":2887,"line_end":2887,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":2517,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":705242,"byte_end":705260,"line_start":2901,"line_end":2901,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":2518,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":705345,"byte_end":705363,"line_start":2907,"line_end":2907,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":2519,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706348,"byte_end":706356,"line_start":24,"line_end":24,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2520,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706374,"byte_end":706382,"line_start":26,"line_end":26,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":2521,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706508,"byte_end":706516,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":2522,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706640,"byte_end":706648,"line_start":40,"line_end":40,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":2523,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706798,"byte_end":706806,"line_start":47,"line_end":47,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":2524,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706957,"byte_end":706964,"line_start":54,"line_end":54,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":2525,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":707087,"byte_end":707095,"line_start":61,"line_end":61,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":2526,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":707255,"byte_end":707262,"line_start":68,"line_end":68,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":2555,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":724347,"byte_end":724360,"line_start":74,"line_end":74,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2556,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":724380,"byte_end":724393,"line_start":76,"line_end":76,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":2557,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":724930,"byte_end":724943,"line_start":101,"line_end":101,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":2558,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":725030,"byte_end":725043,"line_start":108,"line_end":108,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":2559,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":730704,"byte_end":730717,"line_start":271,"line_end":271,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":2560,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":730943,"byte_end":730956,"line_start":281,"line_end":281,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":2561,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":731390,"byte_end":731403,"line_start":295,"line_end":295,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":2562,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":731709,"byte_end":731722,"line_start":305,"line_end":305,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":2563,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":732366,"byte_end":732379,"line_start":323,"line_end":323,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":2564,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":732538,"byte_end":732551,"line_start":331,"line_end":331,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":2565,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":732666,"byte_end":732679,"line_start":338,"line_end":338,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":2566,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":735353,"byte_end":735361,"line_start":33,"line_end":33,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":2567,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":735457,"byte_end":735465,"line_start":40,"line_end":40,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":2568,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736049,"byte_end":736057,"line_start":60,"line_end":60,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":2569,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736180,"byte_end":736188,"line_start":69,"line_end":69,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":2570,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736346,"byte_end":736354,"line_start":77,"line_end":77,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":2571,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736551,"byte_end":736559,"line_start":85,"line_end":85,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":2572,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736684,"byte_end":736692,"line_start":91,"line_end":91,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":2573,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736818,"byte_end":736826,"line_start":97,"line_end":97,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":2574,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736952,"byte_end":736960,"line_start":103,"line_end":103,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":2575,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737089,"byte_end":737097,"line_start":109,"line_end":109,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":2576,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737227,"byte_end":737235,"line_start":115,"line_end":115,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":2577,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737362,"byte_end":737370,"line_start":121,"line_end":121,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":2578,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737504,"byte_end":737512,"line_start":128,"line_end":128,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":2579,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737642,"byte_end":737650,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":2580,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737897,"byte_end":737905,"line_start":146,"line_end":146,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":2581,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":738229,"byte_end":738237,"line_start":159,"line_end":159,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":2582,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":738768,"byte_end":738776,"line_start":177,"line_end":177,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":2583,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":739051,"byte_end":739059,"line_start":190,"line_end":190,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":2584,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":739746,"byte_end":739754,"line_start":210,"line_end":210,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":2585,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":740047,"byte_end":740055,"line_start":223,"line_end":223,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":2586,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":740732,"byte_end":740740,"line_start":243,"line_end":243,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":2587,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":740964,"byte_end":740972,"line_start":251,"line_end":251,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":2588,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741520,"byte_end":741537,"line_start":273,"line_end":273,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":2589,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741649,"byte_end":741666,"line_start":279,"line_end":279,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":2590,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741751,"byte_end":741768,"line_start":285,"line_end":285,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":2591,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741890,"byte_end":741898,"line_start":291,"line_end":291,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2592,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741923,"byte_end":741931,"line_start":292,"line_end":292,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2593,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":763487,"byte_end":763492,"line_start":42,"line_end":42,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":2594,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":763634,"byte_end":763639,"line_start":51,"line_end":51,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":2595,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":764020,"byte_end":764025,"line_start":71,"line_end":71,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":2783,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":781620,"byte_end":781621,"line_start":642,"line_end":642,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":25467},{"krate":0,"index":25468},{"krate":0,"index":25469},{"krate":0,"index":25470},{"krate":0,"index":25471},{"krate":0,"index":25472},{"krate":0,"index":25473},{"krate":0,"index":25474},{"krate":0,"index":25475},{"krate":0,"index":25476}],"docs":"","sig":null,"attributes":[]},{"id":2784,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":782243,"byte_end":782244,"line_start":658,"line_end":658,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":25477},{"krate":0,"index":25478},{"krate":0,"index":25479},{"krate":0,"index":25480},{"krate":0,"index":25481},{"krate":0,"index":25482},{"krate":0,"index":25483},{"krate":0,"index":25484},{"krate":0,"index":25485},{"krate":0,"index":25486}],"docs":"","sig":null,"attributes":[]},{"id":2785,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":782878,"byte_end":782879,"line_start":674,"line_end":674,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":25487},{"krate":0,"index":25488},{"krate":0,"index":25489},{"krate":0,"index":25490},{"krate":0,"index":25491},{"krate":0,"index":25492},{"krate":0,"index":25493},{"krate":0,"index":25494},{"krate":0,"index":25495},{"krate":0,"index":25496}],"docs":"","sig":null,"attributes":[]},{"id":2786,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":783463,"byte_end":783476,"line_start":690,"line_end":690,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":2787,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":783825,"byte_end":783830,"line_start":704,"line_end":704,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":2788,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":784336,"byte_end":784349,"line_start":723,"line_end":723,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":2789,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":784698,"byte_end":784703,"line_start":737,"line_end":737,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":2790,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":802836,"byte_end":802841,"line_start":249,"line_end":249,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":2791,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":804894,"byte_end":804899,"line_start":329,"line_end":329,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2293},{"krate":0,"index":2298},{"krate":0,"index":2303},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":2792,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1084745,"byte_end":1084750,"line_start":9013,"line_end":9013,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":2793,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1085322,"byte_end":1085327,"line_start":9031,"line_end":9031,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":2794,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1085588,"byte_end":1085593,"line_start":9043,"line_end":9043,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":2795,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1085822,"byte_end":1085827,"line_start":9053,"line_end":9053,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":2796,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1086980,"byte_end":1086985,"line_start":9093,"line_end":9093,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":2797,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1087358,"byte_end":1087363,"line_start":9106,"line_end":9106,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":2798,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1087636,"byte_end":1087641,"line_start":9118,"line_end":9118,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":2799,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1087882,"byte_end":1087887,"line_start":9128,"line_end":9128,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":2800,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1089687,"byte_end":1089692,"line_start":9169,"line_end":9169,"column_start":71,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":2801,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096555,"byte_end":1096560,"line_start":9330,"line_end":9330,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":2802,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096967,"byte_end":1096972,"line_start":9346,"line_end":9346,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":2803,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097452,"byte_end":1097457,"line_start":9363,"line_end":9363,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":2804,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097933,"byte_end":1097938,"line_start":9380,"line_end":9380,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":2805,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1098384,"byte_end":1098395,"line_start":9398,"line_end":9398,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":2806,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1098677,"byte_end":1098688,"line_start":9408,"line_end":9408,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":2807,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1099109,"byte_end":1099115,"line_start":9432,"line_end":9432,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":2808,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1103884,"byte_end":1103889,"line_start":9590,"line_end":9590,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":2809,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1111126,"byte_end":1111141,"line_start":9834,"line_end":9834,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":2810,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1111707,"byte_end":1111722,"line_start":9849,"line_end":9849,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":2811,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1111807,"byte_end":1111822,"line_start":9855,"line_end":9855,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":2812,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1112766,"byte_end":1112771,"line_start":9888,"line_end":9888,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":2813,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1113099,"byte_end":1113104,"line_start":9901,"line_end":9901,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":2814,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/cmp.rs","byte_start":1114478,"byte_end":1114483,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":2815,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/cmp.rs","byte_start":1114640,"byte_end":1114645,"line_start":40,"line_end":40,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":2850,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/cmp.rs","byte_start":1118441,"byte_end":1118446,"line_start":161,"line_end":161,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":2855,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1126105,"byte_end":1126113,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":2856,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1127030,"byte_end":1127038,"line_start":110,"line_end":110,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":2857,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1127736,"byte_end":1127744,"line_start":129,"line_end":129,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2858,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1127762,"byte_end":1127770,"line_start":131,"line_end":131,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":2859,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1128741,"byte_end":1128749,"line_start":161,"line_end":161,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":2860,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1129145,"byte_end":1129153,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":2861,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1129296,"byte_end":1129304,"line_start":183,"line_end":183,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":2862,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1129420,"byte_end":1129425,"line_start":190,"line_end":190,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":2863,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1135108,"byte_end":1135112,"line_start":114,"line_end":114,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":2864,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1135348,"byte_end":1135358,"line_start":126,"line_end":126,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2865,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1135368,"byte_end":1135378,"line_start":128,"line_end":128,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":2866,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1136520,"byte_end":1136530,"line_start":170,"line_end":170,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":2895,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1142993,"byte_end":1143003,"line_start":355,"line_end":355,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":2896,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1143176,"byte_end":1143186,"line_start":364,"line_end":364,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":2897,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1143607,"byte_end":1143617,"line_start":383,"line_end":383,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":2898,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1143732,"byte_end":1143742,"line_start":390,"line_end":390,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":2899,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1146377,"byte_end":1146382,"line_start":45,"line_end":45,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":2900,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1146828,"byte_end":1146833,"line_start":66,"line_end":66,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":2901,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1146972,"byte_end":1146977,"line_start":75,"line_end":75,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":2902,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147207,"byte_end":1147212,"line_start":85,"line_end":85,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":2903,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147445,"byte_end":1147450,"line_start":95,"line_end":95,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":2904,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147681,"byte_end":1147686,"line_start":105,"line_end":105,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":2905,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147943,"byte_end":1147948,"line_start":116,"line_end":116,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":2906,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1148200,"byte_end":1148205,"line_start":127,"line_end":127,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":2907,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1148460,"byte_end":1148465,"line_start":138,"line_end":138,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":2908,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1148721,"byte_end":1148726,"line_start":149,"line_end":149,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":2909,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1149014,"byte_end":1149019,"line_start":161,"line_end":161,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":2910,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1149227,"byte_end":1149232,"line_start":171,"line_end":171,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":2912,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1149955,"byte_end":1149960,"line_start":191,"line_end":191,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":2914,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1151223,"byte_end":1151228,"line_start":232,"line_end":232,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":2915,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1151717,"byte_end":1151722,"line_start":251,"line_end":251,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":2916,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1154450,"byte_end":1154458,"line_start":345,"line_end":345,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":2917,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1154675,"byte_end":1154683,"line_start":354,"line_end":354,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":2918,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1155411,"byte_end":1155416,"line_start":379,"line_end":379,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2919,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1155441,"byte_end":1155446,"line_start":380,"line_end":380,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2920,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746874,"byte_end":746879,"line_start":168,"line_end":168,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":2921,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1169479,"byte_end":1169486,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":2922,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1169632,"byte_end":1169639,"line_start":49,"line_end":49,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":2923,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1170017,"byte_end":1170024,"line_start":69,"line_end":69,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":3091,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1186876,"byte_end":1186877,"line_start":637,"line_end":637,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":32722},{"krate":0,"index":32723},{"krate":0,"index":32724},{"krate":0,"index":32725},{"krate":0,"index":32726},{"krate":0,"index":32727},{"krate":0,"index":3040},{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":3092,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1187762,"byte_end":1187763,"line_start":661,"line_end":661,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":32728},{"krate":0,"index":32729},{"krate":0,"index":32730},{"krate":0,"index":32731},{"krate":0,"index":32732},{"krate":0,"index":32733},{"krate":0,"index":3044},{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":3093,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1188646,"byte_end":1188647,"line_start":685,"line_end":685,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":32734},{"krate":0,"index":32735},{"krate":0,"index":32736},{"krate":0,"index":32737},{"krate":0,"index":32738},{"krate":0,"index":32739},{"krate":0,"index":3048},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":3094,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1207776,"byte_end":1207783,"line_start":218,"line_end":218,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3130},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3163},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":3095,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1322033,"byte_end":1322040,"line_start":3626,"line_end":3626,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282}],"docs":"","sig":null,"attributes":[]},{"id":3096,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1323215,"byte_end":1323222,"line_start":3657,"line_end":3657,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":3097,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1323477,"byte_end":1323484,"line_start":3669,"line_end":3669,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":3098,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1323707,"byte_end":1323714,"line_start":3679,"line_end":3679,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":3099,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1326591,"byte_end":1326598,"line_start":3765,"line_end":3765,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305}],"docs":"","sig":null,"attributes":[]},{"id":3100,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1327241,"byte_end":1327248,"line_start":3785,"line_end":3785,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":3101,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1327515,"byte_end":1327522,"line_start":3797,"line_end":3797,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":3102,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1327757,"byte_end":1327764,"line_start":3807,"line_end":3807,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":3103,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1328749,"byte_end":1328754,"line_start":3837,"line_end":3837,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":3104,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329154,"byte_end":1329159,"line_start":3852,"line_end":3852,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":3105,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329707,"byte_end":1329712,"line_start":3870,"line_end":3870,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":3106,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331270,"byte_end":1331277,"line_start":3904,"line_end":3904,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":3107,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331652,"byte_end":1331659,"line_start":3918,"line_end":3918,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":3108,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332242,"byte_end":1332255,"line_start":3940,"line_end":3940,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":3109,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332542,"byte_end":1332555,"line_start":3950,"line_end":3950,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":3110,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332917,"byte_end":1332923,"line_start":3969,"line_end":3969,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":3111,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1335517,"byte_end":1335524,"line_start":4058,"line_end":4058,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":3112,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1339421,"byte_end":1339438,"line_start":4179,"line_end":4179,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":3113,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1340211,"byte_end":1340228,"line_start":4196,"line_end":4196,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":3114,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/cmp.rs","byte_start":1342387,"byte_end":1342394,"line_start":23,"line_end":23,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":3133,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1351082,"byte_end":1351092,"line_start":62,"line_end":62,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":3134,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352175,"byte_end":1352185,"line_start":103,"line_end":103,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":3135,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352366,"byte_end":1352376,"line_start":111,"line_end":111,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3136,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352394,"byte_end":1352404,"line_start":113,"line_end":113,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3393}],"docs":"","sig":null,"attributes":[]},{"id":3137,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352685,"byte_end":1352695,"line_start":122,"line_end":122,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":3138,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352967,"byte_end":1352977,"line_start":131,"line_end":131,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":3139,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1353124,"byte_end":1353134,"line_start":138,"line_end":138,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":3140,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1353256,"byte_end":1353263,"line_start":145,"line_end":145,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":3141,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1358989,"byte_end":1359001,"line_start":101,"line_end":101,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3142,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1359021,"byte_end":1359033,"line_start":103,"line_end":103,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":3143,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1359555,"byte_end":1359567,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":3144,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1361461,"byte_end":1361473,"line_start":186,"line_end":186,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":3145,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1361694,"byte_end":1361706,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":3146,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1362068,"byte_end":1362080,"line_start":209,"line_end":209,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":3147,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1363012,"byte_end":1363024,"line_start":241,"line_end":241,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":3148,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1363288,"byte_end":1363300,"line_start":250,"line_end":250,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":3149,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1364087,"byte_end":1364099,"line_start":278,"line_end":278,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":3150,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1364214,"byte_end":1364226,"line_start":285,"line_end":285,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":3151,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1367057,"byte_end":1367064,"line_start":34,"line_end":34,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":3152,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1367587,"byte_end":1367594,"line_start":55,"line_end":55,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":3153,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1367737,"byte_end":1367744,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":3154,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1368266,"byte_end":1368273,"line_start":82,"line_end":82,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":3155,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1368792,"byte_end":1368799,"line_start":100,"line_end":100,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":3156,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369025,"byte_end":1369032,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":3157,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369261,"byte_end":1369268,"line_start":120,"line_end":120,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":3158,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369495,"byte_end":1369502,"line_start":130,"line_end":130,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":3159,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369757,"byte_end":1369764,"line_start":141,"line_end":141,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":3160,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370036,"byte_end":1370043,"line_start":153,"line_end":153,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":3161,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370320,"byte_end":1370327,"line_start":165,"line_end":165,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":3162,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370605,"byte_end":1370612,"line_start":177,"line_end":177,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":3163,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370922,"byte_end":1370929,"line_start":190,"line_end":190,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":3164,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1371147,"byte_end":1371154,"line_start":200,"line_end":200,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528}],"docs":"","sig":null,"attributes":[]},{"id":3165,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1371587,"byte_end":1371594,"line_start":214,"line_end":214,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":3166,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1371895,"byte_end":1371902,"line_start":224,"line_end":224,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":3167,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1372333,"byte_end":1372340,"line_start":238,"line_end":238,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":3168,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1372844,"byte_end":1372851,"line_start":253,"line_end":253,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":3169,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1374582,"byte_end":1374589,"line_start":303,"line_end":303,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3170,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1374614,"byte_end":1374621,"line_start":304,"line_end":304,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3172,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1378588,"byte_end":1378597,"line_start":80,"line_end":80,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":3173,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1378708,"byte_end":1378717,"line_start":87,"line_end":87,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":3174,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379284,"byte_end":1379293,"line_start":106,"line_end":106,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":3175,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379443,"byte_end":1379452,"line_start":115,"line_end":115,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3176,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379481,"byte_end":1379490,"line_start":116,"line_end":116,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3177,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379504,"byte_end":1379513,"line_start":118,"line_end":118,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":3178,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1396010,"byte_end":1396025,"line_start":620,"line_end":620,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":3179,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1396610,"byte_end":1396625,"line_start":639,"line_end":639,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":3180,"kind":"Inherent","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1396759,"byte_end":1396774,"line_start":648,"line_end":648,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":3181,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434336,"byte_end":1434345,"line_start":1735,"line_end":1735,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3182,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434381,"byte_end":1434390,"line_start":1736,"line_end":1736,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3676}],"docs":"","sig":null,"attributes":[]},{"id":3183,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434513,"byte_end":1434528,"line_start":1742,"line_end":1742,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3184,"kind":"Direct","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434564,"byte_end":1434579,"line_start":1743,"line_end":1743,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":16307,"byte_end":16310,"line_start":414,"line_end":414,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":541}},{"kind":"Mod","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":16978,"byte_end":16985,"line_start":452,"line_end":452,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":692}},{"kind":"Mod","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17091,"byte_end":17099,"line_start":457,"line_end":457,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1445}},{"kind":"Mod","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17205,"byte_end":17210,"line_start":462,"line_end":462,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1948}},{"kind":"Mod","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17309,"byte_end":17316,"line_start":467,"line_end":467,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2942}},{"kind":"Mod","span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/lib.rs","byte_start":17418,"byte_end":17422,"line_start":472,"line_end":472,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3564}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/misc.rs","byte_start":209333,"byte_end":209334,"line_start":26,"line_end":26,"column_start":23,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":462},"to":{"krate":0,"index":458}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233007,"byte_end":233013,"line_start":665,"line_end":665,"column_start":23,"column_end":29},"kind":{"Impl":{"id":530}},"from":{"krate":5,"index":4497},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233156,"byte_end":233159,"line_start":673,"line_end":673,"column_start":30,"column_end":33},"kind":{"Impl":{"id":531}},"from":{"krate":5,"index":3177},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233305,"byte_end":233308,"line_start":680,"line_end":680,"column_start":35,"column_end":38},"kind":{"Impl":{"id":532}},"from":{"krate":5,"index":3177},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233433,"byte_end":233439,"line_start":687,"line_end":687,"column_start":24,"column_end":30},"kind":{"Impl":{"id":533}},"from":{"krate":5,"index":4497},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":233568,"byte_end":233571,"line_start":694,"line_end":694,"column_start":31,"column_end":34},"kind":{"Impl":{"id":534}},"from":{"krate":5,"index":3177},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/ops_prim.rs","byte_start":234196,"byte_end":234199,"line_start":715,"line_end":715,"column_start":36,"column_end":39},"kind":{"Impl":{"id":535}},"from":{"krate":5,"index":3177},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":307427,"byte_end":307433,"line_start":348,"line_end":348,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":761},"to":{"krate":0,"index":745}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":308367,"byte_end":308371,"line_start":365,"line_end":365,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":761}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":309504,"byte_end":309505,"line_start":407,"line_end":407,"column_start":29,"column_end":30},"kind":{"Impl":{"id":1642}},"from":{"krate":0,"index":767},"to":{"krate":0,"index":745}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":311123,"byte_end":311124,"line_start":454,"line_end":454,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1643}},"from":{"krate":0,"index":772},"to":{"krate":0,"index":745}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":312734,"byte_end":312741,"line_start":501,"line_end":501,"column_start":20,"column_end":27},"kind":{"Impl":{"id":1644}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":3973}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/arith.rs","byte_start":313005,"byte_end":313012,"line_start":517,"line_end":517,"column_start":24,"column_end":31},"kind":{"Impl":{"id":1645}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":3977}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":328249,"byte_end":328256,"line_start":193,"line_end":193,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1646}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":328846,"byte_end":328853,"line_start":217,"line_end":217,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1647}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":498984,"byte_end":498991,"line_start":5457,"line_end":5457,"column_start":46,"column_end":53},"kind":{"Impl":{"id":1648}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":499392,"byte_end":499399,"line_start":5475,"line_end":5475,"column_start":44,"column_end":51},"kind":{"Impl":{"id":1649}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":499731,"byte_end":499738,"line_start":5489,"line_end":5489,"column_start":43,"column_end":50},"kind":{"Impl":{"id":1650}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":499977,"byte_end":499984,"line_start":5501,"line_end":5501,"column_start":49,"column_end":56},"kind":{"Impl":{"id":1651}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":500338,"byte_end":500345,"line_start":5520,"line_end":5520,"column_start":46,"column_end":53},"kind":{"Impl":{"id":1652}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":500776,"byte_end":500783,"line_start":5538,"line_end":5538,"column_start":44,"column_end":51},"kind":{"Impl":{"id":1653}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":501152,"byte_end":501159,"line_start":5552,"line_end":5552,"column_start":43,"column_end":50},"kind":{"Impl":{"id":1654}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":501416,"byte_end":501423,"line_start":5564,"line_end":5564,"column_start":49,"column_end":56},"kind":{"Impl":{"id":1655}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":501864,"byte_end":501871,"line_start":5584,"line_end":5584,"column_start":50,"column_end":57},"kind":{"Impl":{"id":1656}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":502280,"byte_end":502287,"line_start":5602,"line_end":5602,"column_start":48,"column_end":55},"kind":{"Impl":{"id":1657}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":502629,"byte_end":502636,"line_start":5616,"line_end":5616,"column_start":47,"column_end":54},"kind":{"Impl":{"id":1658}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":502883,"byte_end":502890,"line_start":5628,"line_end":5628,"column_start":53,"column_end":60},"kind":{"Impl":{"id":1659}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":504193,"byte_end":504200,"line_start":5675,"line_end":5675,"column_start":66,"column_end":73},"kind":{"Impl":{"id":1664}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":504818,"byte_end":504825,"line_start":5693,"line_end":5693,"column_start":64,"column_end":71},"kind":{"Impl":{"id":1665}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":506145,"byte_end":506152,"line_start":5724,"line_end":5724,"column_start":39,"column_end":46},"kind":{"Impl":{"id":1676}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":506808,"byte_end":506815,"line_start":5742,"line_end":5742,"column_start":37,"column_end":44},"kind":{"Impl":{"id":1677}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":507642,"byte_end":507649,"line_start":5768,"line_end":5768,"column_start":45,"column_end":52},"kind":{"Impl":{"id":1678}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":508672,"byte_end":508678,"line_start":5788,"line_end":5788,"column_start":35,"column_end":41},"kind":{"Impl":{"id":1696}},"from":{"krate":2,"index":29481},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510288,"byte_end":510295,"line_start":5847,"line_end":5847,"column_start":39,"column_end":46},"kind":{"Impl":{"id":1701}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":510530,"byte_end":510537,"line_start":5855,"line_end":5855,"column_start":37,"column_end":44},"kind":{"Impl":{"id":1702}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513298,"byte_end":513305,"line_start":5945,"line_end":5945,"column_start":43,"column_end":50},"kind":{"Impl":{"id":1719}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513565,"byte_end":513572,"line_start":5955,"line_end":5955,"column_start":41,"column_end":48},"kind":{"Impl":{"id":1720}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":513919,"byte_end":513926,"line_start":5971,"line_end":5971,"column_start":44,"column_end":51},"kind":{"Impl":{"id":1721}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514144,"byte_end":514151,"line_start":5979,"line_end":5979,"column_start":42,"column_end":49},"kind":{"Impl":{"id":1722}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514452,"byte_end":514465,"line_start":5995,"line_end":5995,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1723}},"from":{"krate":0,"index":11588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":514763,"byte_end":514776,"line_start":6005,"line_end":6005,"column_start":16,"column_end":29},"kind":{"Impl":{"id":1724}},"from":{"krate":0,"index":11588},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":516263,"byte_end":516270,"line_start":6057,"line_end":6057,"column_start":34,"column_end":41},"kind":{"Impl":{"id":1725}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":519087,"byte_end":519104,"line_start":6166,"line_end":6166,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1727}},"from":{"krate":0,"index":11611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":519342,"byte_end":519359,"line_start":6176,"line_end":6176,"column_start":16,"column_end":33},"kind":{"Impl":{"id":1728}},"from":{"krate":0,"index":11611},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":519444,"byte_end":519461,"line_start":6182,"line_end":6182,"column_start":18,"column_end":35},"kind":{"Impl":{"id":1729}},"from":{"krate":0,"index":11611},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":522202,"byte_end":522225,"line_start":6251,"line_end":6251,"column_start":30,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":1210},"to":{"krate":0,"index":1205}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/big.rs","byte_start":522366,"byte_end":522371,"line_start":6259,"line_end":6259,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1210}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524165,"byte_end":524172,"line_start":20,"line_end":20,"column_start":13,"column_end":20},"kind":{"Impl":{"id":1744}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524190,"byte_end":524197,"line_start":22,"line_end":22,"column_start":14,"column_end":21},"kind":{"Impl":{"id":1745}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524322,"byte_end":524329,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":1746}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":524462,"byte_end":524469,"line_start":36,"line_end":36,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1747}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":527103,"byte_end":527110,"line_start":131,"line_end":131,"column_start":25,"column_end":32},"kind":{"Impl":{"id":1774}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/cmp.rs","byte_start":527416,"byte_end":527423,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"kind":{"Impl":{"id":1776}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":554243,"byte_end":554249,"line_start":662,"line_end":662,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1289},"to":{"krate":0,"index":1271}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":555397,"byte_end":555401,"line_start":681,"line_end":681,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1289}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":556534,"byte_end":556535,"line_start":723,"line_end":723,"column_start":29,"column_end":30},"kind":{"Impl":{"id":1830}},"from":{"krate":0,"index":1295},"to":{"krate":0,"index":1271}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/division.rs","byte_start":557681,"byte_end":557682,"line_start":745,"line_end":745,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1831}},"from":{"krate":0,"index":1297},"to":{"krate":0,"index":1271}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":569799,"byte_end":569802,"line_start":88,"line_end":88,"column_start":16,"column_end":19},"kind":{"Impl":{"id":1832}},"from":{"krate":0,"index":1319},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570020,"byte_end":570032,"line_start":99,"line_end":99,"column_start":22,"column_end":34},"kind":{"Impl":{"id":1833}},"from":{"krate":0,"index":14407},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570054,"byte_end":570066,"line_start":101,"line_end":101,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1834}},"from":{"krate":0,"index":14407},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":570152,"byte_end":570164,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"kind":{"Impl":{"id":1835}},"from":{"krate":0,"index":14407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":572261,"byte_end":572273,"line_start":180,"line_end":180,"column_start":16,"column_end":28},"kind":{"Impl":{"id":1836}},"from":{"krate":0,"index":14407},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":573646,"byte_end":573659,"line_start":210,"line_end":210,"column_start":20,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1336},"to":{"krate":0,"index":1335}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":573689,"byte_end":573694,"line_start":212,"line_end":212,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1336}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":577744,"byte_end":577756,"line_start":374,"line_end":374,"column_start":32,"column_end":44},"kind":{"Impl":{"id":1863}},"from":{"krate":0,"index":14407},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":577903,"byte_end":577915,"line_start":381,"line_end":381,"column_start":30,"column_end":42},"kind":{"Impl":{"id":1864}},"from":{"krate":0,"index":14407},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":578078,"byte_end":578090,"line_start":390,"line_end":390,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1865}},"from":{"krate":0,"index":14407},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/small.rs","byte_start":578205,"byte_end":578217,"line_start":397,"line_end":397,"column_start":17,"column_end":29},"kind":{"Impl":{"id":1866}},"from":{"krate":0,"index":14407},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":580581,"byte_end":580588,"line_start":31,"line_end":31,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1867}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":580682,"byte_end":580689,"line_start":38,"line_end":38,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1868}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581019,"byte_end":581026,"line_start":54,"line_end":54,"column_start":15,"column_end":22},"kind":{"Impl":{"id":1869}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581149,"byte_end":581156,"line_start":63,"line_end":63,"column_start":15,"column_end":22},"kind":{"Impl":{"id":1870}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7278}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581323,"byte_end":581330,"line_start":71,"line_end":71,"column_start":17,"column_end":24},"kind":{"Impl":{"id":1871}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581462,"byte_end":581469,"line_start":78,"line_end":78,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1872}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":581597,"byte_end":581604,"line_start":85,"line_end":85,"column_start":25,"column_end":32},"kind":{"Impl":{"id":1873}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":584557,"byte_end":584564,"line_start":198,"line_end":198,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1898}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":584756,"byte_end":584763,"line_start":206,"line_end":206,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1899}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":584888,"byte_end":584895,"line_start":212,"line_end":212,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1900}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585021,"byte_end":585028,"line_start":218,"line_end":218,"column_start":17,"column_end":24},"kind":{"Impl":{"id":1901}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7645}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585154,"byte_end":585161,"line_start":224,"line_end":224,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1902}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7643}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585290,"byte_end":585297,"line_start":230,"line_end":230,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1903}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7647}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585427,"byte_end":585434,"line_start":236,"line_end":236,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1904}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7649}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":585919,"byte_end":585938,"line_start":259,"line_end":259,"column_start":6,"column_end":25},"kind":{"Impl":{"id":1905}},"from":{"krate":0,"index":14626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586038,"byte_end":586057,"line_start":265,"line_end":265,"column_start":16,"column_end":35},"kind":{"Impl":{"id":1906}},"from":{"krate":0,"index":14626},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586142,"byte_end":586161,"line_start":271,"line_end":271,"column_start":18,"column_end":37},"kind":{"Impl":{"id":1907}},"from":{"krate":0,"index":14626},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586283,"byte_end":586290,"line_start":277,"line_end":277,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1908}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/traits.rs","byte_start":586315,"byte_end":586322,"line_start":278,"line_end":278,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1909}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/integer/mod.rs","byte_start":278509,"byte_end":278514,"line_start":121,"line_end":121,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1910}},"from":{"krate":0,"index":14633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":604912,"byte_end":604918,"line_start":231,"line_end":231,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":761},"to":{"krate":0,"index":1487}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":606199,"byte_end":606200,"line_start":267,"line_end":267,"column_start":29,"column_end":30},"kind":{"Impl":{"id":2479}},"from":{"krate":0,"index":1498},"to":{"krate":0,"index":1487}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":606654,"byte_end":606655,"line_start":279,"line_end":279,"column_start":30,"column_end":31},"kind":{"Impl":{"id":2480}},"from":{"krate":0,"index":1500},"to":{"krate":0,"index":1487}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":607101,"byte_end":607109,"line_start":291,"line_end":291,"column_start":20,"column_end":28},"kind":{"Impl":{"id":2481}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":3973}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/arith.rs","byte_start":607376,"byte_end":607384,"line_start":307,"line_end":307,"column_start":24,"column_end":32},"kind":{"Impl":{"id":2482}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":3977}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":618320,"byte_end":618328,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2483}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":691808,"byte_end":691816,"line_start":2418,"line_end":2418,"column_start":46,"column_end":54},"kind":{"Impl":{"id":2484}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":692217,"byte_end":692225,"line_start":2436,"line_end":2436,"column_start":44,"column_end":52},"kind":{"Impl":{"id":2485}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":692558,"byte_end":692566,"line_start":2450,"line_end":2450,"column_start":43,"column_end":51},"kind":{"Impl":{"id":2486}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":692805,"byte_end":692813,"line_start":2462,"line_end":2462,"column_start":49,"column_end":57},"kind":{"Impl":{"id":2487}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":693169,"byte_end":693177,"line_start":2481,"line_end":2481,"column_start":46,"column_end":54},"kind":{"Impl":{"id":2488}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":693610,"byte_end":693618,"line_start":2499,"line_end":2499,"column_start":44,"column_end":52},"kind":{"Impl":{"id":2489}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":693991,"byte_end":693999,"line_start":2513,"line_end":2513,"column_start":43,"column_end":51},"kind":{"Impl":{"id":2490}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":694258,"byte_end":694266,"line_start":2525,"line_end":2525,"column_start":49,"column_end":57},"kind":{"Impl":{"id":2491}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":694779,"byte_end":694787,"line_start":2547,"line_end":2547,"column_start":50,"column_end":58},"kind":{"Impl":{"id":2492}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":695196,"byte_end":695204,"line_start":2565,"line_end":2565,"column_start":48,"column_end":56},"kind":{"Impl":{"id":2493}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":695547,"byte_end":695555,"line_start":2579,"line_end":2579,"column_start":47,"column_end":55},"kind":{"Impl":{"id":2494}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":695802,"byte_end":695810,"line_start":2591,"line_end":2591,"column_start":53,"column_end":61},"kind":{"Impl":{"id":2495}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":697110,"byte_end":697118,"line_start":2638,"line_end":2638,"column_start":66,"column_end":74},"kind":{"Impl":{"id":2498}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":697736,"byte_end":697744,"line_start":2656,"line_end":2656,"column_start":64,"column_end":72},"kind":{"Impl":{"id":2499}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":699145,"byte_end":699159,"line_start":2690,"line_end":2690,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2512}},"from":{"krate":0,"index":17673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":699449,"byte_end":699463,"line_start":2700,"line_end":2700,"column_start":16,"column_end":30},"kind":{"Impl":{"id":2513}},"from":{"krate":0,"index":17673},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":700478,"byte_end":700486,"line_start":2738,"line_end":2738,"column_start":34,"column_end":42},"kind":{"Impl":{"id":2514}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":704729,"byte_end":704747,"line_start":2887,"line_end":2887,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2516}},"from":{"krate":0,"index":17689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":705242,"byte_end":705260,"line_start":2901,"line_end":2901,"column_start":16,"column_end":34},"kind":{"Impl":{"id":2517}},"from":{"krate":0,"index":17689},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/big.rs","byte_start":705345,"byte_end":705363,"line_start":2907,"line_end":2907,"column_start":18,"column_end":36},"kind":{"Impl":{"id":2518}},"from":{"krate":0,"index":17689},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706348,"byte_end":706356,"line_start":24,"line_end":24,"column_start":13,"column_end":21},"kind":{"Impl":{"id":2519}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706374,"byte_end":706382,"line_start":26,"line_end":26,"column_start":14,"column_end":22},"kind":{"Impl":{"id":2520}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706508,"byte_end":706516,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"kind":{"Impl":{"id":2521}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706640,"byte_end":706648,"line_start":40,"line_end":40,"column_start":21,"column_end":29},"kind":{"Impl":{"id":2522}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706798,"byte_end":706806,"line_start":47,"line_end":47,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2523}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":706957,"byte_end":706964,"line_start":54,"line_end":54,"column_start":30,"column_end":37},"kind":{"Impl":{"id":2524}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":707087,"byte_end":707095,"line_start":61,"line_end":61,"column_start":30,"column_end":38},"kind":{"Impl":{"id":2525}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/cmp.rs","byte_start":707255,"byte_end":707262,"line_start":68,"line_end":68,"column_start":31,"column_end":38},"kind":{"Impl":{"id":2526}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":724347,"byte_end":724360,"line_start":74,"line_end":74,"column_start":22,"column_end":35},"kind":{"Impl":{"id":2555}},"from":{"krate":0,"index":1797},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":724380,"byte_end":724393,"line_start":76,"line_end":76,"column_start":16,"column_end":29},"kind":{"Impl":{"id":2556}},"from":{"krate":0,"index":1797},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":724930,"byte_end":724943,"line_start":101,"line_end":101,"column_start":18,"column_end":31},"kind":{"Impl":{"id":2557}},"from":{"krate":0,"index":1797},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":725030,"byte_end":725043,"line_start":108,"line_end":108,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2558}},"from":{"krate":0,"index":1797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":730704,"byte_end":730717,"line_start":271,"line_end":271,"column_start":16,"column_end":29},"kind":{"Impl":{"id":2559}},"from":{"krate":0,"index":1797},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":730943,"byte_end":730956,"line_start":281,"line_end":281,"column_start":36,"column_end":49},"kind":{"Impl":{"id":2560}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":731390,"byte_end":731403,"line_start":295,"line_end":295,"column_start":34,"column_end":47},"kind":{"Impl":{"id":2561}},"from":{"krate":0,"index":1797},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":731709,"byte_end":731722,"line_start":305,"line_end":305,"column_start":57,"column_end":70},"kind":{"Impl":{"id":2562}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":732366,"byte_end":732379,"line_start":323,"line_end":323,"column_start":55,"column_end":68},"kind":{"Impl":{"id":2563}},"from":{"krate":0,"index":1797},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":732538,"byte_end":732551,"line_start":331,"line_end":331,"column_start":24,"column_end":37},"kind":{"Impl":{"id":2564}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/small.rs","byte_start":732666,"byte_end":732679,"line_start":338,"line_end":338,"column_start":17,"column_end":30},"kind":{"Impl":{"id":2565}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":735353,"byte_end":735361,"line_start":33,"line_end":33,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2566}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":735457,"byte_end":735465,"line_start":40,"line_end":40,"column_start":16,"column_end":24},"kind":{"Impl":{"id":2567}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736049,"byte_end":736057,"line_start":60,"line_end":60,"column_start":15,"column_end":23},"kind":{"Impl":{"id":2568}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736180,"byte_end":736188,"line_start":69,"line_end":69,"column_start":15,"column_end":23},"kind":{"Impl":{"id":2569}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":7278}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736346,"byte_end":736354,"line_start":77,"line_end":77,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2570}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736551,"byte_end":736559,"line_start":85,"line_end":85,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2571}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736684,"byte_end":736692,"line_start":91,"line_end":91,"column_start":16,"column_end":24},"kind":{"Impl":{"id":2572}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736818,"byte_end":736826,"line_start":97,"line_end":97,"column_start":17,"column_end":25},"kind":{"Impl":{"id":2573}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":7645}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":736952,"byte_end":736960,"line_start":103,"line_end":103,"column_start":16,"column_end":24},"kind":{"Impl":{"id":2574}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":7643}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737089,"byte_end":737097,"line_start":109,"line_end":109,"column_start":19,"column_end":27},"kind":{"Impl":{"id":2575}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":7647}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737227,"byte_end":737235,"line_start":115,"line_end":115,"column_start":19,"column_end":27},"kind":{"Impl":{"id":2576}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":7649}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737362,"byte_end":737370,"line_start":121,"line_end":121,"column_start":17,"column_end":25},"kind":{"Impl":{"id":2577}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737504,"byte_end":737512,"line_start":128,"line_end":128,"column_start":28,"column_end":36},"kind":{"Impl":{"id":2578}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737642,"byte_end":737650,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":2579}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":737897,"byte_end":737905,"line_start":146,"line_end":146,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2580}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":738229,"byte_end":738237,"line_start":159,"line_end":159,"column_start":25,"column_end":33},"kind":{"Impl":{"id":2581}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":738768,"byte_end":738776,"line_start":177,"line_end":177,"column_start":39,"column_end":47},"kind":{"Impl":{"id":2582}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":739051,"byte_end":739059,"line_start":190,"line_end":190,"column_start":37,"column_end":45},"kind":{"Impl":{"id":2583}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":739746,"byte_end":739754,"line_start":210,"line_end":210,"column_start":47,"column_end":55},"kind":{"Impl":{"id":2584}},"from":{"krate":0,"index":1542},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":740047,"byte_end":740055,"line_start":223,"line_end":223,"column_start":45,"column_end":53},"kind":{"Impl":{"id":2585}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":740732,"byte_end":740740,"line_start":243,"line_end":243,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2586}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2265}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":740964,"byte_end":740972,"line_start":251,"line_end":251,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2587}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2265}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741520,"byte_end":741537,"line_start":273,"line_end":273,"column_start":6,"column_end":23},"kind":{"Impl":{"id":2588}},"from":{"krate":0,"index":19093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741649,"byte_end":741666,"line_start":279,"line_end":279,"column_start":16,"column_end":33},"kind":{"Impl":{"id":2589}},"from":{"krate":0,"index":19093},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741751,"byte_end":741768,"line_start":285,"line_end":285,"column_start":18,"column_end":35},"kind":{"Impl":{"id":2590}},"from":{"krate":0,"index":19093},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741890,"byte_end":741898,"line_start":291,"line_end":291,"column_start":22,"column_end":30},"kind":{"Impl":{"id":2591}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rational/traits.rs","byte_start":741923,"byte_end":741931,"line_start":292,"line_end":292,"column_start":22,"column_end":30},"kind":{"Impl":{"id":2592}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":763487,"byte_end":763492,"line_start":42,"line_end":42,"column_start":14,"column_end":19},"kind":{"Impl":{"id":2593}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":763634,"byte_end":763639,"line_start":51,"line_end":51,"column_start":20,"column_end":25},"kind":{"Impl":{"id":2594}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":542}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":764020,"byte_end":764025,"line_start":71,"line_end":71,"column_start":41,"column_end":46},"kind":{"Impl":{"id":2595}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":778923,"byte_end":778929,"line_start":572,"line_end":572,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":2045},"to":{"krate":0,"index":2033}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":779859,"byte_end":779863,"line_start":585,"line_end":585,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2045}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":781620,"byte_end":781621,"line_start":642,"line_end":642,"column_start":29,"column_end":30},"kind":{"Impl":{"id":2783}},"from":{"krate":0,"index":2051},"to":{"krate":0,"index":2033}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":782243,"byte_end":782244,"line_start":658,"line_end":658,"column_start":30,"column_end":31},"kind":{"Impl":{"id":2784}},"from":{"krate":0,"index":2053},"to":{"krate":0,"index":2033}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":782878,"byte_end":782879,"line_start":674,"line_end":674,"column_start":26,"column_end":27},"kind":{"Impl":{"id":2785}},"from":{"krate":0,"index":2055},"to":{"krate":0,"index":2033}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":783463,"byte_end":783476,"line_start":690,"line_end":690,"column_start":18,"column_end":31},"kind":{"Impl":{"id":2786}},"from":{"krate":0,"index":19243},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":783825,"byte_end":783830,"line_start":704,"line_end":704,"column_start":47,"column_end":52},"kind":{"Impl":{"id":2787}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":784336,"byte_end":784349,"line_start":723,"line_end":723,"column_start":18,"column_end":31},"kind":{"Impl":{"id":2788}},"from":{"krate":0,"index":19243},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/arith.rs","byte_start":784698,"byte_end":784703,"line_start":737,"line_end":737,"column_start":47,"column_end":52},"kind":{"Impl":{"id":2789}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":802836,"byte_end":802841,"line_start":249,"line_end":249,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2790}},"from":{"krate":0,"index":2150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":804894,"byte_end":804899,"line_start":329,"line_end":329,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2791}},"from":{"krate":0,"index":2150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1084745,"byte_end":1084750,"line_start":9013,"line_end":9013,"column_start":51,"column_end":56},"kind":{"Impl":{"id":2792}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1085322,"byte_end":1085327,"line_start":9031,"line_end":9031,"column_start":43,"column_end":48},"kind":{"Impl":{"id":2793}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1085588,"byte_end":1085593,"line_start":9043,"line_end":9043,"column_start":49,"column_end":54},"kind":{"Impl":{"id":2794}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1085822,"byte_end":1085827,"line_start":9053,"line_end":9053,"column_start":54,"column_end":59},"kind":{"Impl":{"id":2795}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1086980,"byte_end":1086985,"line_start":9093,"line_end":9093,"column_start":51,"column_end":56},"kind":{"Impl":{"id":2796}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1087358,"byte_end":1087363,"line_start":9106,"line_end":9106,"column_start":43,"column_end":48},"kind":{"Impl":{"id":2797}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1087636,"byte_end":1087641,"line_start":9118,"line_end":9118,"column_start":49,"column_end":54},"kind":{"Impl":{"id":2798}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1087882,"byte_end":1087887,"line_start":9128,"line_end":9128,"column_start":54,"column_end":59},"kind":{"Impl":{"id":2799}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1089687,"byte_end":1089692,"line_start":9169,"line_end":9169,"column_start":71,"column_end":76},"kind":{"Impl":{"id":2800}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096555,"byte_end":1096560,"line_start":9330,"line_end":9330,"column_start":43,"column_end":48},"kind":{"Impl":{"id":2801}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1096967,"byte_end":1096972,"line_start":9346,"line_end":9346,"column_start":48,"column_end":53},"kind":{"Impl":{"id":2802}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097452,"byte_end":1097457,"line_start":9363,"line_end":9363,"column_start":50,"column_end":55},"kind":{"Impl":{"id":2803}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1097933,"byte_end":1097938,"line_start":9380,"line_end":9380,"column_start":47,"column_end":52},"kind":{"Impl":{"id":2804}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1098384,"byte_end":1098395,"line_start":9398,"line_end":9398,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2805}},"from":{"krate":0,"index":26361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1098677,"byte_end":1098688,"line_start":9408,"line_end":9408,"column_start":16,"column_end":27},"kind":{"Impl":{"id":2806}},"from":{"krate":0,"index":26361},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1099109,"byte_end":1099115,"line_start":9432,"line_end":9432,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2807}},"from":{"krate":0,"index":26386},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1103884,"byte_end":1103889,"line_start":9590,"line_end":9590,"column_start":39,"column_end":44},"kind":{"Impl":{"id":2808}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1111126,"byte_end":1111141,"line_start":9834,"line_end":9834,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2809}},"from":{"krate":0,"index":26424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1111707,"byte_end":1111722,"line_start":9849,"line_end":9849,"column_start":16,"column_end":31},"kind":{"Impl":{"id":2810}},"from":{"krate":0,"index":26424},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1111807,"byte_end":1111822,"line_start":9855,"line_end":9855,"column_start":18,"column_end":33},"kind":{"Impl":{"id":2811}},"from":{"krate":0,"index":26424},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1112766,"byte_end":1112771,"line_start":9888,"line_end":9888,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2812}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/big.rs","byte_start":1113099,"byte_end":1113104,"line_start":9901,"line_end":9901,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2813}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/cmp.rs","byte_start":1114478,"byte_end":1114483,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"kind":{"Impl":{"id":2814}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/cmp.rs","byte_start":1114640,"byte_end":1114645,"line_start":40,"line_end":40,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2815}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/cmp.rs","byte_start":1118441,"byte_end":1118446,"line_start":161,"line_end":161,"column_start":30,"column_end":35},"kind":{"Impl":{"id":2850}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1126105,"byte_end":1126113,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2855}},"from":{"krate":0,"index":26607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1127030,"byte_end":1127038,"line_start":110,"line_end":110,"column_start":15,"column_end":23},"kind":{"Impl":{"id":2856}},"from":{"krate":0,"index":26607},"to":{"krate":2,"index":7278}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1127736,"byte_end":1127744,"line_start":129,"line_end":129,"column_start":13,"column_end":21},"kind":{"Impl":{"id":2857}},"from":{"krate":0,"index":26607},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1127762,"byte_end":1127770,"line_start":131,"line_end":131,"column_start":14,"column_end":22},"kind":{"Impl":{"id":2858}},"from":{"krate":0,"index":26607},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1128741,"byte_end":1128749,"line_start":161,"line_end":161,"column_start":20,"column_end":28},"kind":{"Impl":{"id":2859}},"from":{"krate":0,"index":26607},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1129145,"byte_end":1129153,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":2860}},"from":{"krate":0,"index":26607},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1129296,"byte_end":1129304,"line_start":183,"line_end":183,"column_start":22,"column_end":30},"kind":{"Impl":{"id":2861}},"from":{"krate":0,"index":26607},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/ord.rs","byte_start":1129420,"byte_end":1129425,"line_start":190,"line_end":190,"column_start":25,"column_end":30},"kind":{"Impl":{"id":2862}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1135108,"byte_end":1135112,"line_start":114,"line_end":114,"column_start":16,"column_end":20},"kind":{"Impl":{"id":2863}},"from":{"krate":0,"index":2776},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1135348,"byte_end":1135358,"line_start":126,"line_end":126,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2864}},"from":{"krate":0,"index":26617},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1135368,"byte_end":1135378,"line_start":128,"line_end":128,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2865}},"from":{"krate":0,"index":26617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1136520,"byte_end":1136530,"line_start":170,"line_end":170,"column_start":16,"column_end":26},"kind":{"Impl":{"id":2866}},"from":{"krate":0,"index":26617},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1138331,"byte_end":1138344,"line_start":207,"line_end":207,"column_start":20,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":2791},"to":{"krate":0,"index":2790}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1138374,"byte_end":1138378,"line_start":209,"line_end":209,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2791}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1142993,"byte_end":1143003,"line_start":355,"line_end":355,"column_start":32,"column_end":42},"kind":{"Impl":{"id":2895}},"from":{"krate":0,"index":26617},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1143176,"byte_end":1143186,"line_start":364,"line_end":364,"column_start":30,"column_end":40},"kind":{"Impl":{"id":2896}},"from":{"krate":0,"index":26617},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1143607,"byte_end":1143617,"line_start":383,"line_end":383,"column_start":24,"column_end":34},"kind":{"Impl":{"id":2897}},"from":{"krate":0,"index":26617},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/small.rs","byte_start":1143732,"byte_end":1143742,"line_start":390,"line_end":390,"column_start":17,"column_end":27},"kind":{"Impl":{"id":2898}},"from":{"krate":0,"index":26617},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1146377,"byte_end":1146382,"line_start":45,"line_end":45,"column_start":16,"column_end":21},"kind":{"Impl":{"id":2899}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1146828,"byte_end":1146833,"line_start":66,"line_end":66,"column_start":15,"column_end":20},"kind":{"Impl":{"id":2900}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1146972,"byte_end":1146977,"line_start":75,"line_end":75,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2901}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147207,"byte_end":1147212,"line_start":85,"line_end":85,"column_start":16,"column_end":21},"kind":{"Impl":{"id":2902}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147445,"byte_end":1147450,"line_start":95,"line_end":95,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2903}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7653}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147681,"byte_end":1147686,"line_start":105,"line_end":105,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2904}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7655}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1147943,"byte_end":1147948,"line_start":116,"line_end":116,"column_start":17,"column_end":22},"kind":{"Impl":{"id":2905}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7645}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1148200,"byte_end":1148205,"line_start":127,"line_end":127,"column_start":16,"column_end":21},"kind":{"Impl":{"id":2906}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7643}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1148460,"byte_end":1148465,"line_start":138,"line_end":138,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2907}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7647}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1148721,"byte_end":1148726,"line_start":149,"line_end":149,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2908}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":7649}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1149014,"byte_end":1149019,"line_start":161,"line_end":161,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2909}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1149227,"byte_end":1149232,"line_start":171,"line_end":171,"column_start":32,"column_end":37},"kind":{"Impl":{"id":2910}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1149955,"byte_end":1149960,"line_start":191,"line_end":191,"column_start":31,"column_end":36},"kind":{"Impl":{"id":2912}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1151223,"byte_end":1151228,"line_start":232,"line_end":232,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2914}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1151717,"byte_end":1151722,"line_start":251,"line_end":251,"column_start":30,"column_end":35},"kind":{"Impl":{"id":2915}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1154450,"byte_end":1154458,"line_start":345,"line_end":345,"column_start":25,"column_end":33},"kind":{"Impl":{"id":2916}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2265}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1154675,"byte_end":1154683,"line_start":354,"line_end":354,"column_start":26,"column_end":34},"kind":{"Impl":{"id":2917}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":2265}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1155411,"byte_end":1155416,"line_start":379,"line_end":379,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2918}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/traits.rs","byte_start":1155441,"byte_end":1155446,"line_start":380,"line_end":380,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2919}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/float/mod.rs","byte_start":746874,"byte_end":746879,"line_start":168,"line_end":168,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2920}},"from":{"krate":0,"index":26863},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1169479,"byte_end":1169486,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"kind":{"Impl":{"id":2921}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1169632,"byte_end":1169639,"line_start":49,"line_end":49,"column_start":20,"column_end":27},"kind":{"Impl":{"id":2922}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":542}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1170017,"byte_end":1170024,"line_start":69,"line_end":69,"column_start":41,"column_end":48},"kind":{"Impl":{"id":2923}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1184918,"byte_end":1184924,"line_start":583,"line_end":583,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":3033},"to":{"krate":0,"index":3023}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1185655,"byte_end":1185659,"line_start":594,"line_end":594,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3033}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1186876,"byte_end":1186877,"line_start":637,"line_end":637,"column_start":29,"column_end":30},"kind":{"Impl":{"id":3091}},"from":{"krate":0,"index":3039},"to":{"krate":0,"index":3023}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1187762,"byte_end":1187763,"line_start":661,"line_end":661,"column_start":30,"column_end":31},"kind":{"Impl":{"id":3092}},"from":{"krate":0,"index":3043},"to":{"krate":0,"index":3023}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/arith.rs","byte_start":1188646,"byte_end":1188647,"line_start":685,"line_end":685,"column_start":26,"column_end":27},"kind":{"Impl":{"id":3093}},"from":{"krate":0,"index":3047},"to":{"krate":0,"index":3023}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1207776,"byte_end":1207783,"line_start":218,"line_end":218,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3094}},"from":{"krate":0,"index":3117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1322033,"byte_end":1322040,"line_start":3626,"line_end":3626,"column_start":51,"column_end":58},"kind":{"Impl":{"id":3095}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1323215,"byte_end":1323222,"line_start":3657,"line_end":3657,"column_start":43,"column_end":50},"kind":{"Impl":{"id":3096}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1323477,"byte_end":1323484,"line_start":3669,"line_end":3669,"column_start":49,"column_end":56},"kind":{"Impl":{"id":3097}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1323707,"byte_end":1323714,"line_start":3679,"line_end":3679,"column_start":54,"column_end":61},"kind":{"Impl":{"id":3098}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1326591,"byte_end":1326598,"line_start":3765,"line_end":3765,"column_start":51,"column_end":58},"kind":{"Impl":{"id":3099}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1327241,"byte_end":1327248,"line_start":3785,"line_end":3785,"column_start":43,"column_end":50},"kind":{"Impl":{"id":3100}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1327515,"byte_end":1327522,"line_start":3797,"line_end":3797,"column_start":49,"column_end":56},"kind":{"Impl":{"id":3101}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1327757,"byte_end":1327764,"line_start":3807,"line_end":3807,"column_start":54,"column_end":61},"kind":{"Impl":{"id":3102}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1328749,"byte_end":1328754,"line_start":3837,"line_end":3837,"column_start":41,"column_end":46},"kind":{"Impl":{"id":3103}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329154,"byte_end":1329159,"line_start":3852,"line_end":3852,"column_start":41,"column_end":46},"kind":{"Impl":{"id":3104}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1329707,"byte_end":1329712,"line_start":3870,"line_end":3870,"column_start":42,"column_end":47},"kind":{"Impl":{"id":3105}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331270,"byte_end":1331277,"line_start":3904,"line_end":3904,"column_start":43,"column_end":50},"kind":{"Impl":{"id":3106}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1331652,"byte_end":1331659,"line_start":3918,"line_end":3918,"column_start":48,"column_end":55},"kind":{"Impl":{"id":3107}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332242,"byte_end":1332255,"line_start":3940,"line_end":3940,"column_start":6,"column_end":19},"kind":{"Impl":{"id":3108}},"from":{"krate":0,"index":33116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332542,"byte_end":1332555,"line_start":3950,"line_end":3950,"column_start":16,"column_end":29},"kind":{"Impl":{"id":3109}},"from":{"krate":0,"index":33116},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1332917,"byte_end":1332923,"line_start":3969,"line_end":3969,"column_start":18,"column_end":24},"kind":{"Impl":{"id":3110}},"from":{"krate":0,"index":33123},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1335517,"byte_end":1335524,"line_start":4058,"line_end":4058,"column_start":39,"column_end":46},"kind":{"Impl":{"id":3111}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1339421,"byte_end":1339438,"line_start":4179,"line_end":4179,"column_start":16,"column_end":33},"kind":{"Impl":{"id":3112}},"from":{"krate":0,"index":33144},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/big.rs","byte_start":1340211,"byte_end":1340228,"line_start":4196,"line_end":4196,"column_start":18,"column_end":35},"kind":{"Impl":{"id":3113}},"from":{"krate":0,"index":33144},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/cmp.rs","byte_start":1342387,"byte_end":1342394,"line_start":23,"line_end":23,"column_start":20,"column_end":27},"kind":{"Impl":{"id":3114}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1351082,"byte_end":1351092,"line_start":62,"line_end":62,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3133}},"from":{"krate":0,"index":34540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352175,"byte_end":1352185,"line_start":103,"line_end":103,"column_start":15,"column_end":25},"kind":{"Impl":{"id":3134}},"from":{"krate":0,"index":34540},"to":{"krate":2,"index":7278}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352366,"byte_end":1352376,"line_start":111,"line_end":111,"column_start":13,"column_end":23},"kind":{"Impl":{"id":3135}},"from":{"krate":0,"index":34540},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352394,"byte_end":1352404,"line_start":113,"line_end":113,"column_start":14,"column_end":24},"kind":{"Impl":{"id":3136}},"from":{"krate":0,"index":34540},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352685,"byte_end":1352695,"line_start":122,"line_end":122,"column_start":20,"column_end":30},"kind":{"Impl":{"id":3137}},"from":{"krate":0,"index":34540},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1352967,"byte_end":1352977,"line_start":131,"line_end":131,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3138}},"from":{"krate":0,"index":34540},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1353124,"byte_end":1353134,"line_start":138,"line_end":138,"column_start":24,"column_end":34},"kind":{"Impl":{"id":3139}},"from":{"krate":0,"index":34540},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/ord.rs","byte_start":1353256,"byte_end":1353263,"line_start":145,"line_end":145,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3140}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1358989,"byte_end":1359001,"line_start":101,"line_end":101,"column_start":22,"column_end":34},"kind":{"Impl":{"id":3141}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1359021,"byte_end":1359033,"line_start":103,"line_end":103,"column_start":16,"column_end":28},"kind":{"Impl":{"id":3142}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1359555,"byte_end":1359567,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3143}},"from":{"krate":0,"index":3426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1361461,"byte_end":1361473,"line_start":186,"line_end":186,"column_start":16,"column_end":28},"kind":{"Impl":{"id":3144}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1361694,"byte_end":1361706,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"kind":{"Impl":{"id":3145}},"from":{"krate":0,"index":3426},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1362068,"byte_end":1362080,"line_start":209,"line_end":209,"column_start":32,"column_end":44},"kind":{"Impl":{"id":3146}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1363012,"byte_end":1363024,"line_start":241,"line_end":241,"column_start":53,"column_end":65},"kind":{"Impl":{"id":3147}},"from":{"krate":0,"index":3426},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1363288,"byte_end":1363300,"line_start":250,"line_end":250,"column_start":51,"column_end":63},"kind":{"Impl":{"id":3148}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1364087,"byte_end":1364099,"line_start":278,"line_end":278,"column_start":24,"column_end":36},"kind":{"Impl":{"id":3149}},"from":{"krate":0,"index":3426},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/small.rs","byte_start":1364214,"byte_end":1364226,"line_start":285,"line_end":285,"column_start":17,"column_end":29},"kind":{"Impl":{"id":3150}},"from":{"krate":0,"index":3426},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1367057,"byte_end":1367064,"line_start":34,"line_end":34,"column_start":16,"column_end":23},"kind":{"Impl":{"id":3151}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1367587,"byte_end":1367594,"line_start":55,"line_end":55,"column_start":15,"column_end":22},"kind":{"Impl":{"id":3152}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1367737,"byte_end":1367744,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"kind":{"Impl":{"id":3153}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1368266,"byte_end":1368273,"line_start":82,"line_end":82,"column_start":33,"column_end":40},"kind":{"Impl":{"id":3154}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1368792,"byte_end":1368799,"line_start":100,"line_end":100,"column_start":18,"column_end":25},"kind":{"Impl":{"id":3155}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369025,"byte_end":1369032,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"kind":{"Impl":{"id":3156}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369261,"byte_end":1369268,"line_start":120,"line_end":120,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3157}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7653}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369495,"byte_end":1369502,"line_start":130,"line_end":130,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3158}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7655}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1369757,"byte_end":1369764,"line_start":141,"line_end":141,"column_start":17,"column_end":24},"kind":{"Impl":{"id":3159}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7645}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370036,"byte_end":1370043,"line_start":153,"line_end":153,"column_start":16,"column_end":23},"kind":{"Impl":{"id":3160}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7643}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370320,"byte_end":1370327,"line_start":165,"line_end":165,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3161}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7647}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370605,"byte_end":1370612,"line_start":177,"line_end":177,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3162}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":7649}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1370922,"byte_end":1370929,"line_start":190,"line_end":190,"column_start":23,"column_end":30},"kind":{"Impl":{"id":3163}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":689}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1371147,"byte_end":1371154,"line_start":200,"line_end":200,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3164}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1371587,"byte_end":1371594,"line_start":214,"line_end":214,"column_start":32,"column_end":39},"kind":{"Impl":{"id":3165}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1371895,"byte_end":1371902,"line_start":224,"line_end":224,"column_start":30,"column_end":37},"kind":{"Impl":{"id":3166}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1372333,"byte_end":1372340,"line_start":238,"line_end":238,"column_start":40,"column_end":47},"kind":{"Impl":{"id":3167}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1372844,"byte_end":1372851,"line_start":253,"line_end":253,"column_start":48,"column_end":55},"kind":{"Impl":{"id":3168}},"from":{"krate":0,"index":3117},"to":{"krate":0,"index":586}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1374582,"byte_end":1374589,"line_start":303,"line_end":303,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3169}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/complex/traits.rs","byte_start":1374614,"byte_end":1374621,"line_start":304,"line_end":304,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3170}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1378588,"byte_end":1378597,"line_start":80,"line_end":80,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3172}},"from":{"krate":0,"index":34639},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1378708,"byte_end":1378717,"line_start":87,"line_end":87,"column_start":16,"column_end":25},"kind":{"Impl":{"id":3173}},"from":{"krate":0,"index":34639},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379284,"byte_end":1379293,"line_start":106,"line_end":106,"column_start":15,"column_end":24},"kind":{"Impl":{"id":3174}},"from":{"krate":0,"index":34639},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379443,"byte_end":1379452,"line_start":115,"line_end":115,"column_start":22,"column_end":31},"kind":{"Impl":{"id":3175}},"from":{"krate":0,"index":34639},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379481,"byte_end":1379490,"line_start":116,"line_end":116,"column_start":22,"column_end":31},"kind":{"Impl":{"id":3176}},"from":{"krate":0,"index":34639},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1379504,"byte_end":1379513,"line_start":118,"line_end":118,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3177}},"from":{"krate":0,"index":34639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1396010,"byte_end":1396025,"line_start":620,"line_end":620,"column_start":16,"column_end":31},"kind":{"Impl":{"id":3178}},"from":{"krate":0,"index":34646},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1396610,"byte_end":1396625,"line_start":639,"line_end":639,"column_start":15,"column_end":30},"kind":{"Impl":{"id":3179}},"from":{"krate":0,"index":34646},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1396759,"byte_end":1396774,"line_start":648,"line_end":648,"column_start":6,"column_end":21},"kind":{"Impl":{"id":3180}},"from":{"krate":0,"index":34646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1414924,"byte_end":1414928,"line_start":1145,"line_end":1145,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1414931,"byte_end":1414935,"line_start":1145,"line_end":1145,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434022,"byte_end":1434040,"line_start":1723,"line_end":1723,"column_start":25,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":3669},"to":{"krate":0,"index":3662}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434336,"byte_end":1434345,"line_start":1735,"line_end":1735,"column_start":23,"column_end":32},"kind":{"Impl":{"id":3181}},"from":{"krate":0,"index":34639},"to":{"krate":0,"index":3662}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434381,"byte_end":1434390,"line_start":1736,"line_end":1736,"column_start":29,"column_end":38},"kind":{"Impl":{"id":3182}},"from":{"krate":0,"index":34639},"to":{"krate":0,"index":3669}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434513,"byte_end":1434528,"line_start":1742,"line_end":1742,"column_start":23,"column_end":38},"kind":{"Impl":{"id":3183}},"from":{"krate":0,"index":34646},"to":{"krate":0,"index":3662}},{"span":{"file_name":"/Users/wjs/.cargo/registry/src/github.com-1ecc6299db9ec823/rug-1.7.0/src/rand.rs","byte_start":1434564,"byte_end":1434579,"line_start":1743,"line_end":1743,"column_start":29,"column_end":44},"kind":{"Impl":{"id":3184}},"from":{"krate":0,"index":34646},"to":{"krate":0,"index":3669}}]}